2022-12-23 15:58:29.659 | INFO     | yolox.core.trainer:before_train:130 - args: Namespace(batch_size=1, cache=False, ckpt='/root/YOLOX/yolox_nano.pth', devices=1, dist_backend='nccl', dist_url=None, exp_file='/root/YOLOX/yolox_nano.py', experiment_name='yolox_nano', fp16=True, logger='tensorboard', machine_rank=0, name=None, num_machines=1, occupy=True, opts=[], resume=False, start_epoch=None)
2022-12-23 15:58:29.662 | INFO     | yolox.core.trainer:before_train:131 - exp value:
╒═══════════════════╤════════════════════════════════════════════════════════════╕
│ keys              │ values                                                     │
╞═══════════════════╪════════════════════════════════════════════════════════════╡
│ seed              │ None                                                       │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ output_dir        │ './YOLOX_outputs'                                          │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ print_interval    │ 10                                                         │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ eval_interval     │ 1                                                          │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ num_classes       │ 4                                                          │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ depth             │ 0.33                                                       │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ width             │ 0.25                                                       │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ act               │ 'silu'                                                     │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ data_num_workers  │ 4                                                          │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ input_size        │ (416, 416)                                                 │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ multiscale_range  │ 5                                                          │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ data_dir          │ '/root/ML/dataset/images'                                  │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ train_ann         │ '/root/ML/dataset/annotations/train_annotations.json'      │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ val_ann           │ '/root/ML/dataset/annotations/validation_annotations.json' │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ test_ann          │ 'instances_test2017.json'                                  │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ mosaic_prob       │ 0.5                                                        │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ mixup_prob        │ 1.0                                                        │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ hsv_prob          │ 1.0                                                        │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ flip_prob         │ 0.5                                                        │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ degrees           │ 10.0                                                       │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ translate         │ 0.1                                                        │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ mosaic_scale      │ (0.5, 1.5)                                                 │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ enable_mixup      │ False                                                      │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ mixup_scale       │ (0.5, 1.5)                                                 │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ shear             │ 2.0                                                        │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ warmup_epochs     │ 5                                                          │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ max_epoch         │ 20                                                         │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ warmup_lr         │ 0                                                          │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ min_lr_ratio      │ 0.05                                                       │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ basic_lr_per_img  │ 0.00015625                                                 │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ scheduler         │ 'yoloxwarmcos'                                             │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ no_aug_epochs     │ 15                                                         │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ ema               │ True                                                       │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ weight_decay      │ 0.0005                                                     │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ momentum          │ 0.9                                                        │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ save_history_ckpt │ True                                                       │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ exp_name          │ 'yolox_nano'                                               │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ test_size         │ (416, 416)                                                 │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ test_conf         │ 0.01                                                       │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ nmsthre           │ 0.65                                                       │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ random_size       │ (10, 20)                                                   │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ data_num_worker   │ 4                                                          │
╘═══════════════════╧════════════════════════════════════════════════════════════╛
2022-12-23 15:58:29.852 | INFO     | yolox.core.trainer:before_train:136 - Model Summary: Params: 0.90M, Gflops: 1.08
2022-12-23 15:58:32.893 | INFO     | yolox.core.trainer:resume_train:311 - loading checkpoint for fine tuning
2022-12-23 15:58:33.060 | WARNING  | yolox.utils.checkpoint:load_ckpt:24 - Shape of head.cls_preds.0.weight in checkpoint is torch.Size([80, 64, 1, 1]), while shape of head.cls_preds.0.weight in model is torch.Size([4, 64, 1, 1]).
2022-12-23 15:58:33.061 | WARNING  | yolox.utils.checkpoint:load_ckpt:24 - Shape of head.cls_preds.0.bias in checkpoint is torch.Size([80]), while shape of head.cls_preds.0.bias in model is torch.Size([4]).
2022-12-23 15:58:33.061 | WARNING  | yolox.utils.checkpoint:load_ckpt:24 - Shape of head.cls_preds.1.weight in checkpoint is torch.Size([80, 64, 1, 1]), while shape of head.cls_preds.1.weight in model is torch.Size([4, 64, 1, 1]).
2022-12-23 15:58:33.061 | WARNING  | yolox.utils.checkpoint:load_ckpt:24 - Shape of head.cls_preds.1.bias in checkpoint is torch.Size([80]), while shape of head.cls_preds.1.bias in model is torch.Size([4]).
2022-12-23 15:58:33.061 | WARNING  | yolox.utils.checkpoint:load_ckpt:24 - Shape of head.cls_preds.2.weight in checkpoint is torch.Size([80, 64, 1, 1]), while shape of head.cls_preds.2.weight in model is torch.Size([4, 64, 1, 1]).
2022-12-23 15:58:33.062 | WARNING  | yolox.utils.checkpoint:load_ckpt:24 - Shape of head.cls_preds.2.bias in checkpoint is torch.Size([80]), while shape of head.cls_preds.2.bias in model is torch.Size([4]).
2022-12-23 15:58:33.078 | INFO     | yolox.data.datasets.coco:__init__:64 - loading annotations into memory...
2022-12-23 15:58:33.079 | INFO     | yolox.data.datasets.coco:__init__:64 - Done (t=0.00s)
2022-12-23 15:58:33.079 | INFO     | pycocotools.coco:__init__:86 - creating index...
2022-12-23 15:58:33.080 | INFO     | pycocotools.coco:__init__:86 - index created!
2022-12-23 15:58:33.092 | INFO     | yolox.core.trainer:before_train:155 - init prefetcher, this might take one minute or less...
2022-12-23 15:58:38.376 | INFO     | yolox.data.datasets.coco:__init__:64 - loading annotations into memory...
2022-12-23 15:58:38.377 | INFO     | yolox.data.datasets.coco:__init__:64 - Done (t=0.00s)
2022-12-23 15:58:38.377 | INFO     | pycocotools.coco:__init__:86 - creating index...
2022-12-23 15:58:38.377 | INFO     | pycocotools.coco:__init__:86 - index created!
2022-12-23 15:58:38.382 | INFO     | yolox.core.trainer:before_train:191 - Training start...
2022-12-23 15:58:38.385 | INFO     | yolox.core.trainer:before_train:192 - 
YOLOX(
  (backbone): YOLOPAFPN(
    (backbone): CSPDarknet(
      (stem): Focus(
        (conv): BaseConv(
          (conv): Conv2d(12, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn): BatchNorm2d(16, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
          (act): SiLU(inplace=True)
        )
      )
      (dark2): Sequential(
        (0): DWConv(
          (dconv): BaseConv(
            (conv): Conv2d(16, 16, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=16, bias=False)
            (bn): BatchNorm2d(16, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
            (act): SiLU(inplace=True)
          )
          (pconv): BaseConv(
            (conv): Conv2d(16, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn): BatchNorm2d(32, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
            (act): SiLU(inplace=True)
          )
        )
        (1): CSPLayer(
          (conv1): BaseConv(
            (conv): Conv2d(32, 16, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn): BatchNorm2d(16, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
            (act): SiLU(inplace=True)
          )
          (conv2): BaseConv(
            (conv): Conv2d(32, 16, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn): BatchNorm2d(16, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
            (act): SiLU(inplace=True)
          )
          (conv3): BaseConv(
            (conv): Conv2d(32, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn): BatchNorm2d(32, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
            (act): SiLU(inplace=True)
          )
          (m): Sequential(
            (0): Bottleneck(
              (conv1): BaseConv(
                (conv): Conv2d(16, 16, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (bn): BatchNorm2d(16, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                (act): SiLU(inplace=True)
              )
              (conv2): DWConv(
                (dconv): BaseConv(
                  (conv): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=16, bias=False)
                  (bn): BatchNorm2d(16, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                  (act): SiLU(inplace=True)
                )
                (pconv): BaseConv(
                  (conv): Conv2d(16, 16, kernel_size=(1, 1), stride=(1, 1), bias=False)
                  (bn): BatchNorm2d(16, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                  (act): SiLU(inplace=True)
                )
              )
            )
          )
        )
      )
      (dark3): Sequential(
        (0): DWConv(
          (dconv): BaseConv(
            (conv): Conv2d(32, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=32, bias=False)
            (bn): BatchNorm2d(32, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
            (act): SiLU(inplace=True)
          )
          (pconv): BaseConv(
            (conv): Conv2d(32, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
            (act): SiLU(inplace=True)
          )
        )
        (1): CSPLayer(
          (conv1): BaseConv(
            (conv): Conv2d(64, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn): BatchNorm2d(32, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
            (act): SiLU(inplace=True)
          )
          (conv2): BaseConv(
            (conv): Conv2d(64, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn): BatchNorm2d(32, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
            (act): SiLU(inplace=True)
          )
          (conv3): BaseConv(
            (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
            (act): SiLU(inplace=True)
          )
          (m): Sequential(
            (0): Bottleneck(
              (conv1): BaseConv(
                (conv): Conv2d(32, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (bn): BatchNorm2d(32, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                (act): SiLU(inplace=True)
              )
              (conv2): DWConv(
                (dconv): BaseConv(
                  (conv): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False)
                  (bn): BatchNorm2d(32, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                  (act): SiLU(inplace=True)
                )
                (pconv): BaseConv(
                  (conv): Conv2d(32, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)
                  (bn): BatchNorm2d(32, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                  (act): SiLU(inplace=True)
                )
              )
            )
            (1): Bottleneck(
              (conv1): BaseConv(
                (conv): Conv2d(32, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (bn): BatchNorm2d(32, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                (act): SiLU(inplace=True)
              )
              (conv2): DWConv(
                (dconv): BaseConv(
                  (conv): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False)
                  (bn): BatchNorm2d(32, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                  (act): SiLU(inplace=True)
                )
                (pconv): BaseConv(
                  (conv): Conv2d(32, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)
                  (bn): BatchNorm2d(32, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                  (act): SiLU(inplace=True)
                )
              )
            )
            (2): Bottleneck(
              (conv1): BaseConv(
                (conv): Conv2d(32, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (bn): BatchNorm2d(32, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                (act): SiLU(inplace=True)
              )
              (conv2): DWConv(
                (dconv): BaseConv(
                  (conv): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False)
                  (bn): BatchNorm2d(32, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                  (act): SiLU(inplace=True)
                )
                (pconv): BaseConv(
                  (conv): Conv2d(32, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)
                  (bn): BatchNorm2d(32, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                  (act): SiLU(inplace=True)
                )
              )
            )
          )
        )
      )
      (dark4): Sequential(
        (0): DWConv(
          (dconv): BaseConv(
            (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=64, bias=False)
            (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
            (act): SiLU(inplace=True)
          )
          (pconv): BaseConv(
            (conv): Conv2d(64, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn): BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
            (act): SiLU(inplace=True)
          )
        )
        (1): CSPLayer(
          (conv1): BaseConv(
            (conv): Conv2d(128, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
            (act): SiLU(inplace=True)
          )
          (conv2): BaseConv(
            (conv): Conv2d(128, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
            (act): SiLU(inplace=True)
          )
          (conv3): BaseConv(
            (conv): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn): BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
            (act): SiLU(inplace=True)
          )
          (m): Sequential(
            (0): Bottleneck(
              (conv1): BaseConv(
                (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                (act): SiLU(inplace=True)
              )
              (conv2): DWConv(
                (dconv): BaseConv(
                  (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=64, bias=False)
                  (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                  (act): SiLU(inplace=True)
                )
                (pconv): BaseConv(
                  (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
                  (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                  (act): SiLU(inplace=True)
                )
              )
            )
            (1): Bottleneck(
              (conv1): BaseConv(
                (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                (act): SiLU(inplace=True)
              )
              (conv2): DWConv(
                (dconv): BaseConv(
                  (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=64, bias=False)
                  (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                  (act): SiLU(inplace=True)
                )
                (pconv): BaseConv(
                  (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
                  (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                  (act): SiLU(inplace=True)
                )
              )
            )
            (2): Bottleneck(
              (conv1): BaseConv(
                (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                (act): SiLU(inplace=True)
              )
              (conv2): DWConv(
                (dconv): BaseConv(
                  (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=64, bias=False)
                  (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                  (act): SiLU(inplace=True)
                )
                (pconv): BaseConv(
                  (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
                  (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                  (act): SiLU(inplace=True)
                )
              )
            )
          )
        )
      )
      (dark5): Sequential(
        (0): DWConv(
          (dconv): BaseConv(
            (conv): Conv2d(128, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=128, bias=False)
            (bn): BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
            (act): SiLU(inplace=True)
          )
          (pconv): BaseConv(
            (conv): Conv2d(128, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn): BatchNorm2d(256, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
            (act): SiLU(inplace=True)
          )
        )
        (1): SPPBottleneck(
          (conv1): BaseConv(
            (conv): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn): BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
            (act): SiLU(inplace=True)
          )
          (m): ModuleList(
            (0): MaxPool2d(kernel_size=5, stride=1, padding=2, dilation=1, ceil_mode=False)
            (1): MaxPool2d(kernel_size=9, stride=1, padding=4, dilation=1, ceil_mode=False)
            (2): MaxPool2d(kernel_size=13, stride=1, padding=6, dilation=1, ceil_mode=False)
          )
          (conv2): BaseConv(
            (conv): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn): BatchNorm2d(256, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
            (act): SiLU(inplace=True)
          )
        )
        (2): CSPLayer(
          (conv1): BaseConv(
            (conv): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn): BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
            (act): SiLU(inplace=True)
          )
          (conv2): BaseConv(
            (conv): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn): BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
            (act): SiLU(inplace=True)
          )
          (conv3): BaseConv(
            (conv): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn): BatchNorm2d(256, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
            (act): SiLU(inplace=True)
          )
          (m): Sequential(
            (0): Bottleneck(
              (conv1): BaseConv(
                (conv): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (bn): BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                (act): SiLU(inplace=True)
              )
              (conv2): DWConv(
                (dconv): BaseConv(
                  (conv): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=128, bias=False)
                  (bn): BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                  (act): SiLU(inplace=True)
                )
                (pconv): BaseConv(
                  (conv): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
                  (bn): BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                  (act): SiLU(inplace=True)
                )
              )
            )
          )
        )
      )
    )
    (upsample): Upsample(scale_factor=2.0, mode=nearest)
    (lateral_conv0): BaseConv(
      (conv): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn): BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
      (act): SiLU(inplace=True)
    )
    (C3_p4): CSPLayer(
      (conv1): BaseConv(
        (conv): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
        (act): SiLU(inplace=True)
      )
      (conv2): BaseConv(
        (conv): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
        (act): SiLU(inplace=True)
      )
      (conv3): BaseConv(
        (conv): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn): BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
        (act): SiLU(inplace=True)
      )
      (m): Sequential(
        (0): Bottleneck(
          (conv1): BaseConv(
            (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
            (act): SiLU(inplace=True)
          )
          (conv2): DWConv(
            (dconv): BaseConv(
              (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=64, bias=False)
              (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): SiLU(inplace=True)
            )
            (pconv): BaseConv(
              (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): SiLU(inplace=True)
            )
          )
        )
      )
    )
    (reduce_conv1): BaseConv(
      (conv): Conv2d(128, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
      (act): SiLU(inplace=True)
    )
    (C3_p3): CSPLayer(
      (conv1): BaseConv(
        (conv): Conv2d(128, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn): BatchNorm2d(32, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
        (act): SiLU(inplace=True)
      )
      (conv2): BaseConv(
        (conv): Conv2d(128, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn): BatchNorm2d(32, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
        (act): SiLU(inplace=True)
      )
      (conv3): BaseConv(
        (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
        (act): SiLU(inplace=True)
      )
      (m): Sequential(
        (0): Bottleneck(
          (conv1): BaseConv(
            (conv): Conv2d(32, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn): BatchNorm2d(32, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
            (act): SiLU(inplace=True)
          )
          (conv2): DWConv(
            (dconv): BaseConv(
              (conv): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False)
              (bn): BatchNorm2d(32, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): SiLU(inplace=True)
            )
            (pconv): BaseConv(
              (conv): Conv2d(32, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (bn): BatchNorm2d(32, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): SiLU(inplace=True)
            )
          )
        )
      )
    )
    (bu_conv2): DWConv(
      (dconv): BaseConv(
        (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=64, bias=False)
        (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
        (act): SiLU(inplace=True)
      )
      (pconv): BaseConv(
        (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
        (act): SiLU(inplace=True)
      )
    )
    (C3_n3): CSPLayer(
      (conv1): BaseConv(
        (conv): Conv2d(128, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
        (act): SiLU(inplace=True)
      )
      (conv2): BaseConv(
        (conv): Conv2d(128, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
        (act): SiLU(inplace=True)
      )
      (conv3): BaseConv(
        (conv): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn): BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
        (act): SiLU(inplace=True)
      )
      (m): Sequential(
        (0): Bottleneck(
          (conv1): BaseConv(
            (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
            (act): SiLU(inplace=True)
          )
          (conv2): DWConv(
            (dconv): BaseConv(
              (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=64, bias=False)
              (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): SiLU(inplace=True)
            )
            (pconv): BaseConv(
              (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): SiLU(inplace=True)
            )
          )
        )
      )
    )
    (bu_conv1): DWConv(
      (dconv): BaseConv(
        (conv): Conv2d(128, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=128, bias=False)
        (bn): BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
        (act): SiLU(inplace=True)
      )
      (pconv): BaseConv(
        (conv): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn): BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
        (act): SiLU(inplace=True)
      )
    )
    (C3_n4): CSPLayer(
      (conv1): BaseConv(
        (conv): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn): BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
        (act): SiLU(inplace=True)
      )
      (conv2): BaseConv(
        (conv): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn): BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
        (act): SiLU(inplace=True)
      )
      (conv3): BaseConv(
        (conv): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn): BatchNorm2d(256, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
        (act): SiLU(inplace=True)
      )
      (m): Sequential(
        (0): Bottleneck(
          (conv1): BaseConv(
            (conv): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn): BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
            (act): SiLU(inplace=True)
          )
          (conv2): DWConv(
            (dconv): BaseConv(
              (conv): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=128, bias=False)
              (bn): BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): SiLU(inplace=True)
            )
            (pconv): BaseConv(
              (conv): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (bn): BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): SiLU(inplace=True)
            )
          )
        )
      )
    )
  )
  (head): YOLOXHead(
    (cls_convs): ModuleList(
      (0): Sequential(
        (0): DWConv(
          (dconv): BaseConv(
            (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=64, bias=False)
            (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
            (act): SiLU(inplace=True)
          )
          (pconv): BaseConv(
            (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
            (act): SiLU(inplace=True)
          )
        )
        (1): DWConv(
          (dconv): BaseConv(
            (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=64, bias=False)
            (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
            (act): SiLU(inplace=True)
          )
          (pconv): BaseConv(
            (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
            (act): SiLU(inplace=True)
          )
        )
      )
      (1): Sequential(
        (0): DWConv(
          (dconv): BaseConv(
            (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=64, bias=False)
            (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
            (act): SiLU(inplace=True)
          )
          (pconv): BaseConv(
            (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
            (act): SiLU(inplace=True)
          )
        )
        (1): DWConv(
          (dconv): BaseConv(
            (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=64, bias=False)
            (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
            (act): SiLU(inplace=True)
          )
          (pconv): BaseConv(
            (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
            (act): SiLU(inplace=True)
          )
        )
      )
      (2): Sequential(
        (0): DWConv(
          (dconv): BaseConv(
            (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=64, bias=False)
            (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
            (act): SiLU(inplace=True)
          )
          (pconv): BaseConv(
            (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
            (act): SiLU(inplace=True)
          )
        )
        (1): DWConv(
          (dconv): BaseConv(
            (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=64, bias=False)
            (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
            (act): SiLU(inplace=True)
          )
          (pconv): BaseConv(
            (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
            (act): SiLU(inplace=True)
          )
        )
      )
    )
    (reg_convs): ModuleList(
      (0): Sequential(
        (0): DWConv(
          (dconv): BaseConv(
            (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=64, bias=False)
            (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
            (act): SiLU(inplace=True)
          )
          (pconv): BaseConv(
            (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
            (act): SiLU(inplace=True)
          )
        )
        (1): DWConv(
          (dconv): BaseConv(
            (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=64, bias=False)
            (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
            (act): SiLU(inplace=True)
          )
          (pconv): BaseConv(
            (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
            (act): SiLU(inplace=True)
          )
        )
      )
      (1): Sequential(
        (0): DWConv(
          (dconv): BaseConv(
            (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=64, bias=False)
            (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
            (act): SiLU(inplace=True)
          )
          (pconv): BaseConv(
            (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
            (act): SiLU(inplace=True)
          )
        )
        (1): DWConv(
          (dconv): BaseConv(
            (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=64, bias=False)
            (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
            (act): SiLU(inplace=True)
          )
          (pconv): BaseConv(
            (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
            (act): SiLU(inplace=True)
          )
        )
      )
      (2): Sequential(
        (0): DWConv(
          (dconv): BaseConv(
            (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=64, bias=False)
            (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
            (act): SiLU(inplace=True)
          )
          (pconv): BaseConv(
            (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
            (act): SiLU(inplace=True)
          )
        )
        (1): DWConv(
          (dconv): BaseConv(
            (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=64, bias=False)
            (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
            (act): SiLU(inplace=True)
          )
          (pconv): BaseConv(
            (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
            (act): SiLU(inplace=True)
          )
        )
      )
    )
    (cls_preds): ModuleList(
      (0): Conv2d(64, 4, kernel_size=(1, 1), stride=(1, 1))
      (1): Conv2d(64, 4, kernel_size=(1, 1), stride=(1, 1))
      (2): Conv2d(64, 4, kernel_size=(1, 1), stride=(1, 1))
    )
    (reg_preds): ModuleList(
      (0): Conv2d(64, 4, kernel_size=(1, 1), stride=(1, 1))
      (1): Conv2d(64, 4, kernel_size=(1, 1), stride=(1, 1))
      (2): Conv2d(64, 4, kernel_size=(1, 1), stride=(1, 1))
    )
    (obj_preds): ModuleList(
      (0): Conv2d(64, 1, kernel_size=(1, 1), stride=(1, 1))
      (1): Conv2d(64, 1, kernel_size=(1, 1), stride=(1, 1))
      (2): Conv2d(64, 1, kernel_size=(1, 1), stride=(1, 1))
    )
    (stems): ModuleList(
      (0): BaseConv(
        (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
        (act): SiLU(inplace=True)
      )
      (1): BaseConv(
        (conv): Conv2d(128, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
        (act): SiLU(inplace=True)
      )
      (2): BaseConv(
        (conv): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
        (act): SiLU(inplace=True)
      )
    )
    (l1_loss): L1Loss()
    (bcewithlog_loss): BCEWithLogitsLoss()
    (iou_loss): IOUloss()
  )
)
2022-12-23 15:58:38.385 | INFO     | yolox.core.trainer:before_epoch:203 - ---> start train epoch1
2022-12-23 15:58:44.894 | INFO     | yolox.core.trainer:after_train:195 - Training of experiment is done and the best AP is 0.00
2022-12-23 15:58:44.895 | ERROR    | yolox.core.launch:launch:98 - An error has been caught in function 'launch', process 'MainProcess' (899), thread 'MainThread' (139789734647616):
Traceback (most recent call last):

  File "/root/YOLOX/tools/train.py", line 134, in <module>
    launch(
    └ <function launch at 0x7f22bb76b940>

> File "/root/YOLOX/yolox/core/launch.py", line 98, in launch
    main_func(*args)
    │          └ (╒═══════════════════╤═══════════════════════════════════════════════════════════════════════════════════════════════════════...
    └ <function main at 0x7f22ae81e0d0>

  File "/root/YOLOX/tools/train.py", line 118, in main
    trainer.train()
    │       └ <function Trainer.train at 0x7f22ade80dc0>
    └ <yolox.core.trainer.Trainer object at 0x7f22adecdf70>

  File "/root/YOLOX/yolox/core/trainer.py", line 76, in train
    self.train_in_epoch()
    │    └ <function Trainer.train_in_epoch at 0x7f22ade874c0>
    └ <yolox.core.trainer.Trainer object at 0x7f22adecdf70>

  File "/root/YOLOX/yolox/core/trainer.py", line 85, in train_in_epoch
    self.train_in_iter()
    │    └ <function Trainer.train_in_iter at 0x7f22ade87550>
    └ <yolox.core.trainer.Trainer object at 0x7f22adecdf70>

  File "/root/YOLOX/yolox/core/trainer.py", line 91, in train_in_iter
    self.train_one_iter()
    │    └ <function Trainer.train_one_iter at 0x7f22ade875e0>
    └ <yolox.core.trainer.Trainer object at 0x7f22adecdf70>

  File "/root/YOLOX/yolox/core/trainer.py", line 105, in train_one_iter
    outputs = self.model(inps, targets)
              │    │     │     └ tensor([[[  1.0000, 120.5625, 120.8750,  20.2344,  87.0625],
              │    │     │                [  1.0000,  90.6875, 383.2500,  53.7500,  49.1562],
              │    │     │          ...
              │    │     └ tensor([[[[105., 105., 105.,  ..., 105., 105., 105.],
              │    │                 [105., 105., 105.,  ..., 105., 105., 105.],
              │    │                 [105., ...
              │    └ YOLOX(
              │        (backbone): YOLOPAFPN(
              │          (backbone): CSPDarknet(
              │            (stem): Focus(
              │              (conv): BaseConv(
              │                (conv): ...
              └ <yolox.core.trainer.Trainer object at 0x7f22adecdf70>

  File "/usr/local/lib/python3.8/dist-packages/torch/nn/modules/module.py", line 1190, in _call_impl
    return forward_call(*input, **kwargs)
           │             │        └ {}
           │             └ (tensor([[[[105., 105., 105.,  ..., 105., 105., 105.],
           │                         [105., 105., 105.,  ..., 105., 105., 105.],
           │                         [105.,...
           └ <bound method YOLOX.forward of YOLOX(
               (backbone): YOLOPAFPN(
                 (backbone): CSPDarknet(
                   (stem): Focus(
                     (conv...

  File "/root/YOLOX/yolox/models/yolox.py", line 34, in forward
    loss, iou_loss, conf_loss, cls_loss, l1_loss, num_fg = self.head(
                                                           └ YOLOX(
                                                               (backbone): YOLOPAFPN(
                                                                 (backbone): CSPDarknet(
                                                                   (stem): Focus(
                                                                     (conv): BaseConv(
                                                                       (conv): ...

  File "/usr/local/lib/python3.8/dist-packages/torch/nn/modules/module.py", line 1190, in _call_impl
    return forward_call(*input, **kwargs)
           │             │        └ {}
           │             └ <unprintable tuple object>
           └ <bound method YOLOXHead.forward of YOLOXHead(
               (cls_convs): ModuleList(
                 (0): Sequential(
                   (0): DWConv(
                     (dco...

  File "/root/YOLOX/yolox/models/yolo_head.py", line 157, in forward
    cls_feat = cls_conv(cls_x)
               │        └ <unprintable Tensor object>
               └ Sequential(
                   (0): DWConv(
                     (dconv): BaseConv(
                       (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1,...

  File "/usr/local/lib/python3.8/dist-packages/torch/nn/modules/module.py", line 1190, in _call_impl
    return forward_call(*input, **kwargs)
           │             │        └ {}
           │             └ <unprintable tuple object>
           └ <bound method Sequential.forward of Sequential(
               (0): DWConv(
                 (dconv): BaseConv(
                   (conv): Conv2d(64, 64, kernel_siz...

  File "/usr/local/lib/python3.8/dist-packages/torch/nn/modules/container.py", line 204, in forward
    input = module(input)
            │      └ <unprintable Tensor object>
            └ DWConv(
                (dconv): BaseConv(
                  (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=64, bias=Fa...

  File "/usr/local/lib/python3.8/dist-packages/torch/nn/modules/module.py", line 1190, in _call_impl
    return forward_call(*input, **kwargs)
           │             │        └ {}
           │             └ <unprintable tuple object>
           └ <bound method DWConv.forward of DWConv(
               (dconv): BaseConv(
                 (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), pa...

  File "/root/YOLOX/yolox/models/network_blocks.py", line 75, in forward
    x = self.dconv(x)
        │          └ <unprintable Tensor object>
        └ DWConv(
            (dconv): BaseConv(
              (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=64, bias=Fa...

  File "/usr/local/lib/python3.8/dist-packages/torch/nn/modules/module.py", line 1190, in _call_impl
    return forward_call(*input, **kwargs)
           │             │        └ {}
           │             └ <unprintable tuple object>
           └ <bound method BaseConv.forward of BaseConv(
               (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), group...

  File "/root/YOLOX/yolox/models/network_blocks.py", line 51, in forward
    return self.act(self.bn(self.conv(x)))
           │        │       │         └ <unprintable Tensor object>
           │        │       └ BaseConv(
           │        │           (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=64, bias=False)
           │        │           (bn): BatchNor...
           │        └ BaseConv(
           │            (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=64, bias=False)
           │            (bn): BatchNor...
           └ BaseConv(
               (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=64, bias=False)
               (bn): BatchNor...

  File "/usr/local/lib/python3.8/dist-packages/torch/nn/modules/module.py", line 1190, in _call_impl
    return forward_call(*input, **kwargs)
           │             │        └ {}
           │             └ <unprintable tuple object>
           └ <bound method _BatchNorm.forward of BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)>

  File "/usr/local/lib/python3.8/dist-packages/torch/nn/modules/batchnorm.py", line 171, in forward
    return F.batch_norm(
           │ └ <function batch_norm at 0x7f22bc6c91f0>
           └ <module 'torch.nn.functional' from '/usr/local/lib/python3.8/dist-packages/torch/nn/functional.py'>

  File "/usr/local/lib/python3.8/dist-packages/torch/nn/functional.py", line 2450, in batch_norm
    return torch.batch_norm(
           │     └ <built-in method batch_norm of type object at 0x7f2333cb1980>
           └ <module 'torch' from '/usr/local/lib/python3.8/dist-packages/torch/__init__.py'>

torch.cuda.OutOfMemoryError: CUDA out of memory. Tried to allocate 2.00 MiB (GPU 0; 7.79 GiB total capacity; 65.89 MiB already allocated; 2.50 MiB free; 6.69 GiB reserved in total by PyTorch) If reserved memory is >> allocated memory try setting max_split_size_mb to avoid fragmentation.  See documentation for Memory Management and PYTORCH_CUDA_ALLOC_CONF
2022-12-23 16:09:48.434 | INFO     | yolox.core.trainer:before_train:130 - args: Namespace(batch_size=8, cache=False, ckpt='/root/YOLOX/yolox_nano.pth', devices=2, dist_backend='nccl', dist_url=None, exp_file='/root/YOLOX/yolox_nano.py', experiment_name='yolox_nano', fp16=True, logger='tensorboard', machine_rank=0, name=None, num_machines=1, occupy=True, opts=[], resume=False, start_epoch=None)
2022-12-23 16:09:48.437 | INFO     | yolox.core.trainer:before_train:131 - exp value:
╒═══════════════════╤════════════════════════════════════════════════════════════╕
│ keys              │ values                                                     │
╞═══════════════════╪════════════════════════════════════════════════════════════╡
│ seed              │ None                                                       │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ output_dir        │ './YOLOX_outputs'                                          │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ print_interval    │ 10                                                         │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ eval_interval     │ 1                                                          │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ num_classes       │ 4                                                          │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ depth             │ 0.33                                                       │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ width             │ 0.25                                                       │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ act               │ 'silu'                                                     │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ data_num_workers  │ 4                                                          │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ input_size        │ (416, 416)                                                 │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ multiscale_range  │ 5                                                          │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ data_dir          │ '/root/ML/dataset/images'                                  │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ train_ann         │ '/root/ML/dataset/annotations/train_annotations.json'      │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ val_ann           │ '/root/ML/dataset/annotations/validation_annotations.json' │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ test_ann          │ 'instances_test2017.json'                                  │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ mosaic_prob       │ 0.5                                                        │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ mixup_prob        │ 1.0                                                        │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ hsv_prob          │ 1.0                                                        │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ flip_prob         │ 0.5                                                        │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ degrees           │ 10.0                                                       │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ translate         │ 0.1                                                        │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ mosaic_scale      │ (0.5, 1.5)                                                 │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ enable_mixup      │ False                                                      │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ mixup_scale       │ (0.5, 1.5)                                                 │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ shear             │ 2.0                                                        │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ warmup_epochs     │ 5                                                          │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ max_epoch         │ 20                                                         │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ warmup_lr         │ 0                                                          │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ min_lr_ratio      │ 0.05                                                       │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ basic_lr_per_img  │ 0.00015625                                                 │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ scheduler         │ 'yoloxwarmcos'                                             │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ no_aug_epochs     │ 15                                                         │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ ema               │ True                                                       │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ weight_decay      │ 0.0005                                                     │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ momentum          │ 0.9                                                        │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ save_history_ckpt │ True                                                       │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ exp_name          │ 'yolox_nano'                                               │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ test_size         │ (416, 416)                                                 │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ test_conf         │ 0.01                                                       │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ nmsthre           │ 0.65                                                       │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ random_size       │ (10, 20)                                                   │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ data_num_worker   │ 4                                                          │
╘═══════════════════╧════════════════════════════════════════════════════════════╛
2022-12-23 16:09:49.026 | INFO     | yolox.core.trainer:before_train:136 - Model Summary: Params: 0.90M, Gflops: 1.08
2022-12-23 16:09:49.044 | INFO     | yolox.core.trainer:resume_train:311 - loading checkpoint for fine tuning
2022-12-23 16:09:49.165 | WARNING  | yolox.utils.checkpoint:load_ckpt:24 - Shape of head.cls_preds.0.weight in checkpoint is torch.Size([80, 64, 1, 1]), while shape of head.cls_preds.0.weight in model is torch.Size([4, 64, 1, 1]).
2022-12-23 16:09:49.165 | WARNING  | yolox.utils.checkpoint:load_ckpt:24 - Shape of head.cls_preds.0.bias in checkpoint is torch.Size([80]), while shape of head.cls_preds.0.bias in model is torch.Size([4]).
2022-12-23 16:09:49.166 | WARNING  | yolox.utils.checkpoint:load_ckpt:24 - Shape of head.cls_preds.1.weight in checkpoint is torch.Size([80, 64, 1, 1]), while shape of head.cls_preds.1.weight in model is torch.Size([4, 64, 1, 1]).
2022-12-23 16:09:49.166 | WARNING  | yolox.utils.checkpoint:load_ckpt:24 - Shape of head.cls_preds.1.bias in checkpoint is torch.Size([80]), while shape of head.cls_preds.1.bias in model is torch.Size([4]).
2022-12-23 16:09:49.166 | WARNING  | yolox.utils.checkpoint:load_ckpt:24 - Shape of head.cls_preds.2.weight in checkpoint is torch.Size([80, 64, 1, 1]), while shape of head.cls_preds.2.weight in model is torch.Size([4, 64, 1, 1]).
2022-12-23 16:09:49.166 | WARNING  | yolox.utils.checkpoint:load_ckpt:24 - Shape of head.cls_preds.2.bias in checkpoint is torch.Size([80]), while shape of head.cls_preds.2.bias in model is torch.Size([4]).
2022-12-23 16:09:49.180 | INFO     | yolox.data.datasets.coco:__init__:64 - loading annotations into memory...
2022-12-23 16:09:49.181 | INFO     | yolox.data.datasets.coco:__init__:64 - Done (t=0.00s)
2022-12-23 16:09:49.182 | INFO     | pycocotools.coco:__init__:86 - creating index...
2022-12-23 16:09:49.182 | INFO     | pycocotools.coco:__init__:86 - index created!
2022-12-23 16:09:49.196 | INFO     | yolox.core.trainer:before_train:155 - init prefetcher, this might take one minute or less...
2022-12-23 16:10:00.337 | INFO     | yolox.data.datasets.coco:__init__:64 - loading annotations into memory...
2022-12-23 16:10:00.338 | INFO     | yolox.data.datasets.coco:__init__:64 - Done (t=0.00s)
2022-12-23 16:10:00.338 | INFO     | pycocotools.coco:__init__:86 - creating index...
2022-12-23 16:10:00.338 | INFO     | pycocotools.coco:__init__:86 - index created!
2022-12-23 16:10:00.343 | INFO     | yolox.core.trainer:before_train:191 - Training start...
2022-12-23 16:10:00.346 | INFO     | yolox.core.trainer:before_train:192 - 
DistributedDataParallel(
  (module): YOLOX(
    (backbone): YOLOPAFPN(
      (backbone): CSPDarknet(
        (stem): Focus(
          (conv): BaseConv(
            (conv): Conv2d(12, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn): BatchNorm2d(16, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
            (act): SiLU(inplace=True)
          )
        )
        (dark2): Sequential(
          (0): DWConv(
            (dconv): BaseConv(
              (conv): Conv2d(16, 16, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=16, bias=False)
              (bn): BatchNorm2d(16, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): SiLU(inplace=True)
            )
            (pconv): BaseConv(
              (conv): Conv2d(16, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (bn): BatchNorm2d(32, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): SiLU(inplace=True)
            )
          )
          (1): CSPLayer(
            (conv1): BaseConv(
              (conv): Conv2d(32, 16, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (bn): BatchNorm2d(16, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): SiLU(inplace=True)
            )
            (conv2): BaseConv(
              (conv): Conv2d(32, 16, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (bn): BatchNorm2d(16, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): SiLU(inplace=True)
            )
            (conv3): BaseConv(
              (conv): Conv2d(32, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (bn): BatchNorm2d(32, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): SiLU(inplace=True)
            )
            (m): Sequential(
              (0): Bottleneck(
                (conv1): BaseConv(
                  (conv): Conv2d(16, 16, kernel_size=(1, 1), stride=(1, 1), bias=False)
                  (bn): BatchNorm2d(16, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                  (act): SiLU(inplace=True)
                )
                (conv2): DWConv(
                  (dconv): BaseConv(
                    (conv): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=16, bias=False)
                    (bn): BatchNorm2d(16, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                    (act): SiLU(inplace=True)
                  )
                  (pconv): BaseConv(
                    (conv): Conv2d(16, 16, kernel_size=(1, 1), stride=(1, 1), bias=False)
                    (bn): BatchNorm2d(16, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                    (act): SiLU(inplace=True)
                  )
                )
              )
            )
          )
        )
        (dark3): Sequential(
          (0): DWConv(
            (dconv): BaseConv(
              (conv): Conv2d(32, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=32, bias=False)
              (bn): BatchNorm2d(32, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): SiLU(inplace=True)
            )
            (pconv): BaseConv(
              (conv): Conv2d(32, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): SiLU(inplace=True)
            )
          )
          (1): CSPLayer(
            (conv1): BaseConv(
              (conv): Conv2d(64, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (bn): BatchNorm2d(32, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): SiLU(inplace=True)
            )
            (conv2): BaseConv(
              (conv): Conv2d(64, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (bn): BatchNorm2d(32, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): SiLU(inplace=True)
            )
            (conv3): BaseConv(
              (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): SiLU(inplace=True)
            )
            (m): Sequential(
              (0): Bottleneck(
                (conv1): BaseConv(
                  (conv): Conv2d(32, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)
                  (bn): BatchNorm2d(32, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                  (act): SiLU(inplace=True)
                )
                (conv2): DWConv(
                  (dconv): BaseConv(
                    (conv): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False)
                    (bn): BatchNorm2d(32, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                    (act): SiLU(inplace=True)
                  )
                  (pconv): BaseConv(
                    (conv): Conv2d(32, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)
                    (bn): BatchNorm2d(32, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                    (act): SiLU(inplace=True)
                  )
                )
              )
              (1): Bottleneck(
                (conv1): BaseConv(
                  (conv): Conv2d(32, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)
                  (bn): BatchNorm2d(32, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                  (act): SiLU(inplace=True)
                )
                (conv2): DWConv(
                  (dconv): BaseConv(
                    (conv): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False)
                    (bn): BatchNorm2d(32, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                    (act): SiLU(inplace=True)
                  )
                  (pconv): BaseConv(
                    (conv): Conv2d(32, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)
                    (bn): BatchNorm2d(32, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                    (act): SiLU(inplace=True)
                  )
                )
              )
              (2): Bottleneck(
                (conv1): BaseConv(
                  (conv): Conv2d(32, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)
                  (bn): BatchNorm2d(32, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                  (act): SiLU(inplace=True)
                )
                (conv2): DWConv(
                  (dconv): BaseConv(
                    (conv): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False)
                    (bn): BatchNorm2d(32, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                    (act): SiLU(inplace=True)
                  )
                  (pconv): BaseConv(
                    (conv): Conv2d(32, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)
                    (bn): BatchNorm2d(32, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                    (act): SiLU(inplace=True)
                  )
                )
              )
            )
          )
        )
        (dark4): Sequential(
          (0): DWConv(
            (dconv): BaseConv(
              (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=64, bias=False)
              (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): SiLU(inplace=True)
            )
            (pconv): BaseConv(
              (conv): Conv2d(64, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (bn): BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): SiLU(inplace=True)
            )
          )
          (1): CSPLayer(
            (conv1): BaseConv(
              (conv): Conv2d(128, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): SiLU(inplace=True)
            )
            (conv2): BaseConv(
              (conv): Conv2d(128, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): SiLU(inplace=True)
            )
            (conv3): BaseConv(
              (conv): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (bn): BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): SiLU(inplace=True)
            )
            (m): Sequential(
              (0): Bottleneck(
                (conv1): BaseConv(
                  (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
                  (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                  (act): SiLU(inplace=True)
                )
                (conv2): DWConv(
                  (dconv): BaseConv(
                    (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=64, bias=False)
                    (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                    (act): SiLU(inplace=True)
                  )
                  (pconv): BaseConv(
                    (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
                    (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                    (act): SiLU(inplace=True)
                  )
                )
              )
              (1): Bottleneck(
                (conv1): BaseConv(
                  (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
                  (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                  (act): SiLU(inplace=True)
                )
                (conv2): DWConv(
                  (dconv): BaseConv(
                    (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=64, bias=False)
                    (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                    (act): SiLU(inplace=True)
                  )
                  (pconv): BaseConv(
                    (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
                    (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                    (act): SiLU(inplace=True)
                  )
                )
              )
              (2): Bottleneck(
                (conv1): BaseConv(
                  (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
                  (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                  (act): SiLU(inplace=True)
                )
                (conv2): DWConv(
                  (dconv): BaseConv(
                    (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=64, bias=False)
                    (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                    (act): SiLU(inplace=True)
                  )
                  (pconv): BaseConv(
                    (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
                    (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                    (act): SiLU(inplace=True)
                  )
                )
              )
            )
          )
        )
        (dark5): Sequential(
          (0): DWConv(
            (dconv): BaseConv(
              (conv): Conv2d(128, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=128, bias=False)
              (bn): BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): SiLU(inplace=True)
            )
            (pconv): BaseConv(
              (conv): Conv2d(128, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (bn): BatchNorm2d(256, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): SiLU(inplace=True)
            )
          )
          (1): SPPBottleneck(
            (conv1): BaseConv(
              (conv): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (bn): BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): SiLU(inplace=True)
            )
            (m): ModuleList(
              (0): MaxPool2d(kernel_size=5, stride=1, padding=2, dilation=1, ceil_mode=False)
              (1): MaxPool2d(kernel_size=9, stride=1, padding=4, dilation=1, ceil_mode=False)
              (2): MaxPool2d(kernel_size=13, stride=1, padding=6, dilation=1, ceil_mode=False)
            )
            (conv2): BaseConv(
              (conv): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (bn): BatchNorm2d(256, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): SiLU(inplace=True)
            )
          )
          (2): CSPLayer(
            (conv1): BaseConv(
              (conv): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (bn): BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): SiLU(inplace=True)
            )
            (conv2): BaseConv(
              (conv): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (bn): BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): SiLU(inplace=True)
            )
            (conv3): BaseConv(
              (conv): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (bn): BatchNorm2d(256, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): SiLU(inplace=True)
            )
            (m): Sequential(
              (0): Bottleneck(
                (conv1): BaseConv(
                  (conv): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
                  (bn): BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                  (act): SiLU(inplace=True)
                )
                (conv2): DWConv(
                  (dconv): BaseConv(
                    (conv): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=128, bias=False)
                    (bn): BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                    (act): SiLU(inplace=True)
                  )
                  (pconv): BaseConv(
                    (conv): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
                    (bn): BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                    (act): SiLU(inplace=True)
                  )
                )
              )
            )
          )
        )
      )
      (upsample): Upsample(scale_factor=2.0, mode=nearest)
      (lateral_conv0): BaseConv(
        (conv): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn): BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
        (act): SiLU(inplace=True)
      )
      (C3_p4): CSPLayer(
        (conv1): BaseConv(
          (conv): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
          (act): SiLU(inplace=True)
        )
        (conv2): BaseConv(
          (conv): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
          (act): SiLU(inplace=True)
        )
        (conv3): BaseConv(
          (conv): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn): BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
          (act): SiLU(inplace=True)
        )
        (m): Sequential(
          (0): Bottleneck(
            (conv1): BaseConv(
              (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): SiLU(inplace=True)
            )
            (conv2): DWConv(
              (dconv): BaseConv(
                (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=64, bias=False)
                (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                (act): SiLU(inplace=True)
              )
              (pconv): BaseConv(
                (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                (act): SiLU(inplace=True)
              )
            )
          )
        )
      )
      (reduce_conv1): BaseConv(
        (conv): Conv2d(128, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
        (act): SiLU(inplace=True)
      )
      (C3_p3): CSPLayer(
        (conv1): BaseConv(
          (conv): Conv2d(128, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn): BatchNorm2d(32, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
          (act): SiLU(inplace=True)
        )
        (conv2): BaseConv(
          (conv): Conv2d(128, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn): BatchNorm2d(32, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
          (act): SiLU(inplace=True)
        )
        (conv3): BaseConv(
          (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
          (act): SiLU(inplace=True)
        )
        (m): Sequential(
          (0): Bottleneck(
            (conv1): BaseConv(
              (conv): Conv2d(32, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (bn): BatchNorm2d(32, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): SiLU(inplace=True)
            )
            (conv2): DWConv(
              (dconv): BaseConv(
                (conv): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False)
                (bn): BatchNorm2d(32, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                (act): SiLU(inplace=True)
              )
              (pconv): BaseConv(
                (conv): Conv2d(32, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (bn): BatchNorm2d(32, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                (act): SiLU(inplace=True)
              )
            )
          )
        )
      )
      (bu_conv2): DWConv(
        (dconv): BaseConv(
          (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=64, bias=False)
          (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
          (act): SiLU(inplace=True)
        )
        (pconv): BaseConv(
          (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
          (act): SiLU(inplace=True)
        )
      )
      (C3_n3): CSPLayer(
        (conv1): BaseConv(
          (conv): Conv2d(128, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
          (act): SiLU(inplace=True)
        )
        (conv2): BaseConv(
          (conv): Conv2d(128, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
          (act): SiLU(inplace=True)
        )
        (conv3): BaseConv(
          (conv): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn): BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
          (act): SiLU(inplace=True)
        )
        (m): Sequential(
          (0): Bottleneck(
            (conv1): BaseConv(
              (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): SiLU(inplace=True)
            )
            (conv2): DWConv(
              (dconv): BaseConv(
                (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=64, bias=False)
                (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                (act): SiLU(inplace=True)
              )
              (pconv): BaseConv(
                (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                (act): SiLU(inplace=True)
              )
            )
          )
        )
      )
      (bu_conv1): DWConv(
        (dconv): BaseConv(
          (conv): Conv2d(128, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=128, bias=False)
          (bn): BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
          (act): SiLU(inplace=True)
        )
        (pconv): BaseConv(
          (conv): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn): BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
          (act): SiLU(inplace=True)
        )
      )
      (C3_n4): CSPLayer(
        (conv1): BaseConv(
          (conv): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn): BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
          (act): SiLU(inplace=True)
        )
        (conv2): BaseConv(
          (conv): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn): BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
          (act): SiLU(inplace=True)
        )
        (conv3): BaseConv(
          (conv): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn): BatchNorm2d(256, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
          (act): SiLU(inplace=True)
        )
        (m): Sequential(
          (0): Bottleneck(
            (conv1): BaseConv(
              (conv): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (bn): BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): SiLU(inplace=True)
            )
            (conv2): DWConv(
              (dconv): BaseConv(
                (conv): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=128, bias=False)
                (bn): BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                (act): SiLU(inplace=True)
              )
              (pconv): BaseConv(
                (conv): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (bn): BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                (act): SiLU(inplace=True)
              )
            )
          )
        )
      )
    )
    (head): YOLOXHead(
      (cls_convs): ModuleList(
        (0): Sequential(
          (0): DWConv(
            (dconv): BaseConv(
              (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=64, bias=False)
              (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): SiLU(inplace=True)
            )
            (pconv): BaseConv(
              (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): SiLU(inplace=True)
            )
          )
          (1): DWConv(
            (dconv): BaseConv(
              (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=64, bias=False)
              (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): SiLU(inplace=True)
            )
            (pconv): BaseConv(
              (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): SiLU(inplace=True)
            )
          )
        )
        (1): Sequential(
          (0): DWConv(
            (dconv): BaseConv(
              (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=64, bias=False)
              (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): SiLU(inplace=True)
            )
            (pconv): BaseConv(
              (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): SiLU(inplace=True)
            )
          )
          (1): DWConv(
            (dconv): BaseConv(
              (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=64, bias=False)
              (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): SiLU(inplace=True)
            )
            (pconv): BaseConv(
              (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): SiLU(inplace=True)
            )
          )
        )
        (2): Sequential(
          (0): DWConv(
            (dconv): BaseConv(
              (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=64, bias=False)
              (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): SiLU(inplace=True)
            )
            (pconv): BaseConv(
              (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): SiLU(inplace=True)
            )
          )
          (1): DWConv(
            (dconv): BaseConv(
              (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=64, bias=False)
              (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): SiLU(inplace=True)
            )
            (pconv): BaseConv(
              (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): SiLU(inplace=True)
            )
          )
        )
      )
      (reg_convs): ModuleList(
        (0): Sequential(
          (0): DWConv(
            (dconv): BaseConv(
              (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=64, bias=False)
              (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): SiLU(inplace=True)
            )
            (pconv): BaseConv(
              (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): SiLU(inplace=True)
            )
          )
          (1): DWConv(
            (dconv): BaseConv(
              (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=64, bias=False)
              (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): SiLU(inplace=True)
            )
            (pconv): BaseConv(
              (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): SiLU(inplace=True)
            )
          )
        )
        (1): Sequential(
          (0): DWConv(
            (dconv): BaseConv(
              (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=64, bias=False)
              (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): SiLU(inplace=True)
            )
            (pconv): BaseConv(
              (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): SiLU(inplace=True)
            )
          )
          (1): DWConv(
            (dconv): BaseConv(
              (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=64, bias=False)
              (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): SiLU(inplace=True)
            )
            (pconv): BaseConv(
              (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): SiLU(inplace=True)
            )
          )
        )
        (2): Sequential(
          (0): DWConv(
            (dconv): BaseConv(
              (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=64, bias=False)
              (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): SiLU(inplace=True)
            )
            (pconv): BaseConv(
              (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): SiLU(inplace=True)
            )
          )
          (1): DWConv(
            (dconv): BaseConv(
              (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=64, bias=False)
              (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): SiLU(inplace=True)
            )
            (pconv): BaseConv(
              (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): SiLU(inplace=True)
            )
          )
        )
      )
      (cls_preds): ModuleList(
        (0): Conv2d(64, 4, kernel_size=(1, 1), stride=(1, 1))
        (1): Conv2d(64, 4, kernel_size=(1, 1), stride=(1, 1))
        (2): Conv2d(64, 4, kernel_size=(1, 1), stride=(1, 1))
      )
      (reg_preds): ModuleList(
        (0): Conv2d(64, 4, kernel_size=(1, 1), stride=(1, 1))
        (1): Conv2d(64, 4, kernel_size=(1, 1), stride=(1, 1))
        (2): Conv2d(64, 4, kernel_size=(1, 1), stride=(1, 1))
      )
      (obj_preds): ModuleList(
        (0): Conv2d(64, 1, kernel_size=(1, 1), stride=(1, 1))
        (1): Conv2d(64, 1, kernel_size=(1, 1), stride=(1, 1))
        (2): Conv2d(64, 1, kernel_size=(1, 1), stride=(1, 1))
      )
      (stems): ModuleList(
        (0): BaseConv(
          (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
          (act): SiLU(inplace=True)
        )
        (1): BaseConv(
          (conv): Conv2d(128, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
          (act): SiLU(inplace=True)
        )
        (2): BaseConv(
          (conv): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
          (act): SiLU(inplace=True)
        )
      )
      (l1_loss): L1Loss()
      (bcewithlog_loss): BCEWithLogitsLoss()
      (iou_loss): IOUloss()
    )
  )
)
2022-12-23 16:10:00.346 | INFO     | yolox.core.trainer:before_epoch:203 - ---> start train epoch1
2022-12-23 16:10:06.807 | INFO     | yolox.core.trainer:after_train:195 - Training of experiment is done and the best AP is 0.00
2022-12-23 16:10:06.808 | ERROR    | yolox.core.launch:_distributed_worker:147 - An error has been caught in function '_distributed_worker', process 'SpawnProcess-1' (9979), thread 'MainThread' (140602294048576):
Traceback (most recent call last):

  File "<string>", line 1, in <module>
  File "/usr/lib/python3.8/multiprocessing/spawn.py", line 116, in spawn_main
    exitcode = _main(fd, parent_sentinel)
               │     │   └ 5
               │     └ 8
               └ <function _main at 0x7fe085948ee0>
  File "/usr/lib/python3.8/multiprocessing/spawn.py", line 129, in _main
    return self._bootstrap(parent_sentinel)
           │    │          └ 5
           │    └ <function BaseProcess._bootstrap at 0x7fe085a479d0>
           └ <SpawnProcess name='SpawnProcess-1' parent=9930 started>
  File "/usr/lib/python3.8/multiprocessing/process.py", line 315, in _bootstrap
    self.run()
    │    └ <function BaseProcess.run at 0x7fe085a47040>
    └ <SpawnProcess name='SpawnProcess-1' parent=9930 started>
  File "/usr/lib/python3.8/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
    │    │        │    │        │    └ {}
    │    │        │    │        └ <SpawnProcess name='SpawnProcess-1' parent=9930 started>
    │    │        │    └ (<function _distributed_worker at 0x7fdfebc14040>, 0, (<function main at 0x7fdfded43700>, 2, 2, 0, 'nccl', 'tcp://127.0.0.1:5...
    │    │        └ <SpawnProcess name='SpawnProcess-1' parent=9930 started>
    │    └ <function _wrap at 0x7fdfec8f48b0>
    └ <SpawnProcess name='SpawnProcess-1' parent=9930 started>

  File "/usr/local/lib/python3.8/dist-packages/torch/multiprocessing/spawn.py", line 69, in _wrap
    fn(i, *args)
    │  │   └ (<function main at 0x7fdfded43700>, 2, 2, 0, 'nccl', 'tcp://127.0.0.1:52919', (╒═══════════════════╤═════════════════════════...
    │  └ 0
    └ <function _distributed_worker at 0x7fdfebc14040>

> File "/root/YOLOX/yolox/core/launch.py", line 147, in _distributed_worker
    main_func(*args)
    │          └ (╒═══════════════════╤═══════════════════════════════════════════════════════════════════════════════════════════════════════...
    └ <function main at 0x7fdfded43700>

  File "/root/YOLOX/tools/train.py", line 118, in main
    trainer.train()
    │       └ <function Trainer.train at 0x7fdfde345430>
    └ <yolox.core.trainer.Trainer object at 0x7fdfde35cca0>

  File "/root/YOLOX/yolox/core/trainer.py", line 76, in train
    self.train_in_epoch()
    │    └ <function Trainer.train_in_epoch at 0x7fdfde345af0>
    └ <yolox.core.trainer.Trainer object at 0x7fdfde35cca0>

  File "/root/YOLOX/yolox/core/trainer.py", line 85, in train_in_epoch
    self.train_in_iter()
    │    └ <function Trainer.train_in_iter at 0x7fdfde345b80>
    └ <yolox.core.trainer.Trainer object at 0x7fdfde35cca0>

  File "/root/YOLOX/yolox/core/trainer.py", line 91, in train_in_iter
    self.train_one_iter()
    │    └ <function Trainer.train_one_iter at 0x7fdfde345c10>
    └ <yolox.core.trainer.Trainer object at 0x7fdfde35cca0>

  File "/root/YOLOX/yolox/core/trainer.py", line 110, in train_one_iter
    self.scaler.scale(loss).backward()
    │    │      │     └ tensor(17.6493, device='cuda:0', grad_fn=<AddBackward0>)
    │    │      └ <function GradScaler.scale at 0x7fdfecece430>
    │    └ <torch.cuda.amp.grad_scaler.GradScaler object at 0x7fdfde35cd30>
    └ <yolox.core.trainer.Trainer object at 0x7fdfde35cca0>

  File "/usr/local/lib/python3.8/dist-packages/torch/_tensor.py", line 487, in backward
    torch.autograd.backward(
    │     │        └ <function backward at 0x7fdfecc44280>
    │     └ <module 'torch.autograd' from '/usr/local/lib/python3.8/dist-packages/torch/autograd/__init__.py'>
    └ <module 'torch' from '/usr/local/lib/python3.8/dist-packages/torch/__init__.py'>

  File "/usr/local/lib/python3.8/dist-packages/torch/autograd/__init__.py", line 197, in backward
    Variable._execution_engine.run_backward(  # Calls into the C++ engine to run the backward pass
    │        │                 └ <method 'run_backward' of 'torch._C._EngineBase' objects>
    │        └ <torch._C._EngineBase object at 0x7fdff1020c60>
    └ <class 'torch.autograd.variable.Variable'>

RuntimeError: cuDNN error: CUDNN_STATUS_INTERNAL_ERROR
2022-12-23 16:11:08.299 | INFO     | yolox.core.trainer:before_train:130 - args: Namespace(batch_size=1, cache=False, ckpt='/root/YOLOX/yolox_nano.pth', devices=2, dist_backend='nccl', dist_url=None, exp_file='/root/YOLOX/yolox_nano.py', experiment_name='yolox_nano', fp16=True, logger='tensorboard', machine_rank=0, name=None, num_machines=1, occupy=True, opts=[], resume=False, start_epoch=None)
2022-12-23 16:11:08.301 | INFO     | yolox.core.trainer:before_train:131 - exp value:
╒═══════════════════╤════════════════════════════════════════════════════════════╕
│ keys              │ values                                                     │
╞═══════════════════╪════════════════════════════════════════════════════════════╡
│ seed              │ None                                                       │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ output_dir        │ './YOLOX_outputs'                                          │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ print_interval    │ 10                                                         │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ eval_interval     │ 1                                                          │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ num_classes       │ 4                                                          │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ depth             │ 0.33                                                       │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ width             │ 0.25                                                       │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ act               │ 'silu'                                                     │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ data_num_workers  │ 4                                                          │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ input_size        │ (416, 416)                                                 │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ multiscale_range  │ 5                                                          │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ data_dir          │ '/root/ML/dataset/images'                                  │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ train_ann         │ '/root/ML/dataset/annotations/train_annotations.json'      │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ val_ann           │ '/root/ML/dataset/annotations/validation_annotations.json' │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ test_ann          │ 'instances_test2017.json'                                  │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ mosaic_prob       │ 0.5                                                        │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ mixup_prob        │ 1.0                                                        │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ hsv_prob          │ 1.0                                                        │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ flip_prob         │ 0.5                                                        │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ degrees           │ 10.0                                                       │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ translate         │ 0.1                                                        │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ mosaic_scale      │ (0.5, 1.5)                                                 │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ enable_mixup      │ False                                                      │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ mixup_scale       │ (0.5, 1.5)                                                 │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ shear             │ 2.0                                                        │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ warmup_epochs     │ 5                                                          │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ max_epoch         │ 20                                                         │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ warmup_lr         │ 0                                                          │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ min_lr_ratio      │ 0.05                                                       │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ basic_lr_per_img  │ 0.00015625                                                 │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ scheduler         │ 'yoloxwarmcos'                                             │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ no_aug_epochs     │ 15                                                         │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ ema               │ True                                                       │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ weight_decay      │ 0.0005                                                     │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ momentum          │ 0.9                                                        │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ save_history_ckpt │ True                                                       │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ exp_name          │ 'yolox_nano'                                               │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ test_size         │ (416, 416)                                                 │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ test_conf         │ 0.01                                                       │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ nmsthre           │ 0.65                                                       │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ random_size       │ (10, 20)                                                   │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ data_num_worker   │ 4                                                          │
╘═══════════════════╧════════════════════════════════════════════════════════════╛
2022-12-23 16:11:08.540 | INFO     | yolox.core.trainer:before_train:136 - Model Summary: Params: 0.90M, Gflops: 1.08
2022-12-23 16:11:08.557 | INFO     | yolox.core.trainer:resume_train:311 - loading checkpoint for fine tuning
2022-12-23 16:11:08.661 | WARNING  | yolox.utils.checkpoint:load_ckpt:24 - Shape of head.cls_preds.0.weight in checkpoint is torch.Size([80, 64, 1, 1]), while shape of head.cls_preds.0.weight in model is torch.Size([4, 64, 1, 1]).
2022-12-23 16:11:08.661 | WARNING  | yolox.utils.checkpoint:load_ckpt:24 - Shape of head.cls_preds.0.bias in checkpoint is torch.Size([80]), while shape of head.cls_preds.0.bias in model is torch.Size([4]).
2022-12-23 16:11:08.661 | WARNING  | yolox.utils.checkpoint:load_ckpt:24 - Shape of head.cls_preds.1.weight in checkpoint is torch.Size([80, 64, 1, 1]), while shape of head.cls_preds.1.weight in model is torch.Size([4, 64, 1, 1]).
2022-12-23 16:11:08.661 | WARNING  | yolox.utils.checkpoint:load_ckpt:24 - Shape of head.cls_preds.1.bias in checkpoint is torch.Size([80]), while shape of head.cls_preds.1.bias in model is torch.Size([4]).
2022-12-23 16:11:08.662 | WARNING  | yolox.utils.checkpoint:load_ckpt:24 - Shape of head.cls_preds.2.weight in checkpoint is torch.Size([80, 64, 1, 1]), while shape of head.cls_preds.2.weight in model is torch.Size([4, 64, 1, 1]).
2022-12-23 16:11:08.662 | WARNING  | yolox.utils.checkpoint:load_ckpt:24 - Shape of head.cls_preds.2.bias in checkpoint is torch.Size([80]), while shape of head.cls_preds.2.bias in model is torch.Size([4]).
2022-12-23 16:11:08.680 | INFO     | yolox.data.datasets.coco:__init__:64 - loading annotations into memory...
2022-12-23 16:11:08.681 | INFO     | yolox.data.datasets.coco:__init__:64 - Done (t=0.00s)
2022-12-23 16:11:08.681 | INFO     | pycocotools.coco:__init__:86 - creating index...
2022-12-23 16:11:08.682 | INFO     | pycocotools.coco:__init__:86 - index created!
2022-12-23 16:11:08.699 | ERROR    | yolox.core.launch:_distributed_worker:147 - An error has been caught in function '_distributed_worker', process 'SpawnProcess-1' (11137), thread 'MainThread' (140533375027008):
Traceback (most recent call last):

  File "<string>", line 1, in <module>
  File "/usr/lib/python3.8/multiprocessing/spawn.py", line 116, in spawn_main
    exitcode = _main(fd, parent_sentinel)
               │     │   └ 5
               │     └ 8
               └ <function _main at 0x7fd079afbee0>
  File "/usr/lib/python3.8/multiprocessing/spawn.py", line 129, in _main
    return self._bootstrap(parent_sentinel)
           │    │          └ 5
           │    └ <function BaseProcess._bootstrap at 0x7fd079bfa9d0>
           └ <SpawnProcess name='SpawnProcess-1' parent=11101 started>
  File "/usr/lib/python3.8/multiprocessing/process.py", line 315, in _bootstrap
    self.run()
    │    └ <function BaseProcess.run at 0x7fd079bfa040>
    └ <SpawnProcess name='SpawnProcess-1' parent=11101 started>
  File "/usr/lib/python3.8/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
    │    │        │    │        │    └ {}
    │    │        │    │        └ <SpawnProcess name='SpawnProcess-1' parent=11101 started>
    │    │        │    └ (<function _distributed_worker at 0x7fcfdfdc7040>, 0, (<function main at 0x7fcfd2eec700>, 2, 2, 0, 'nccl', 'tcp://127.0.0.1:4...
    │    │        └ <SpawnProcess name='SpawnProcess-1' parent=11101 started>
    │    └ <function _wrap at 0x7fcfe0aa78b0>
    └ <SpawnProcess name='SpawnProcess-1' parent=11101 started>

  File "/usr/local/lib/python3.8/dist-packages/torch/multiprocessing/spawn.py", line 69, in _wrap
    fn(i, *args)
    │  │   └ (<function main at 0x7fcfd2eec700>, 2, 2, 0, 'nccl', 'tcp://127.0.0.1:41897', (╒═══════════════════╤═════════════════════════...
    │  └ 0
    └ <function _distributed_worker at 0x7fcfdfdc7040>

> File "/root/YOLOX/yolox/core/launch.py", line 147, in _distributed_worker
    main_func(*args)
    │          └ (╒═══════════════════╤═══════════════════════════════════════════════════════════════════════════════════════════════════════...
    └ <function main at 0x7fcfd2eec700>

  File "/root/YOLOX/tools/train.py", line 118, in main
    trainer.train()
    │       └ <function Trainer.train at 0x7fcfd24e5430>
    └ <yolox.core.trainer.Trainer object at 0x7fcfd24fcca0>

  File "/root/YOLOX/yolox/core/trainer.py", line 74, in train
    self.before_train()
    │    └ <function Trainer.before_train at 0x7fcfd24e5ca0>
    └ <yolox.core.trainer.Trainer object at 0x7fcfd24fcca0>

  File "/root/YOLOX/yolox/core/trainer.py", line 149, in before_train
    self.train_loader = self.exp.get_data_loader(
    │                   │    │   └ <function Exp.get_data_loader at 0x7fcfd24e55e0>
    │                   │    └ ╒═══════════════════╤════════════════════════════════════════════════════════════════════════════════════════════════════════...
    │                   └ <yolox.core.trainer.Trainer object at 0x7fcfd24fcca0>
    └ <yolox.core.trainer.Trainer object at 0x7fcfd24fcca0>

  File "/root/YOLOX/yolox/exp/yolox_base.py", line 179, in get_data_loader
    batch_sampler = YoloBatchSampler(
                    └ <class 'yolox.data.samplers.YoloBatchSampler'>

  File "/root/YOLOX/yolox/data/samplers.py", line 22, in __init__
    super().__init__(*args, **kwargs)
                      │       └ {'sampler': <yolox.data.samplers.InfiniteSampler object at 0x7fcff8de8ac0>, 'batch_size': 0, 'drop_last': False}
                      └ ()

  File "/usr/local/lib/python3.8/dist-packages/torch/utils/data/sampler.py", line 232, in __init__
    raise ValueError("batch_size should be a positive integer value, "

ValueError: batch_size should be a positive integer value, but got batch_size=0
2022-12-23 16:11:50.969 | INFO     | yolox.core.trainer:before_train:130 - args: Namespace(batch_size=2, cache=False, ckpt='/root/YOLOX/yolox_nano.pth', devices=2, dist_backend='nccl', dist_url=None, exp_file='/root/YOLOX/yolox_nano.py', experiment_name='yolox_nano', fp16=True, logger='tensorboard', machine_rank=0, name=None, num_machines=1, occupy=True, opts=[], resume=False, start_epoch=None)
2022-12-23 16:11:50.971 | INFO     | yolox.core.trainer:before_train:131 - exp value:
╒═══════════════════╤════════════════════════════════════════════════════════════╕
│ keys              │ values                                                     │
╞═══════════════════╪════════════════════════════════════════════════════════════╡
│ seed              │ None                                                       │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ output_dir        │ './YOLOX_outputs'                                          │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ print_interval    │ 10                                                         │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ eval_interval     │ 1                                                          │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ num_classes       │ 4                                                          │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ depth             │ 0.33                                                       │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ width             │ 0.25                                                       │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ act               │ 'silu'                                                     │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ data_num_workers  │ 4                                                          │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ input_size        │ (416, 416)                                                 │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ multiscale_range  │ 5                                                          │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ data_dir          │ '/root/ML/dataset/images'                                  │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ train_ann         │ '/root/ML/dataset/annotations/train_annotations.json'      │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ val_ann           │ '/root/ML/dataset/annotations/validation_annotations.json' │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ test_ann          │ 'instances_test2017.json'                                  │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ mosaic_prob       │ 0.5                                                        │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ mixup_prob        │ 1.0                                                        │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ hsv_prob          │ 1.0                                                        │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ flip_prob         │ 0.5                                                        │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ degrees           │ 10.0                                                       │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ translate         │ 0.1                                                        │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ mosaic_scale      │ (0.5, 1.5)                                                 │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ enable_mixup      │ False                                                      │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ mixup_scale       │ (0.5, 1.5)                                                 │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ shear             │ 2.0                                                        │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ warmup_epochs     │ 5                                                          │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ max_epoch         │ 20                                                         │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ warmup_lr         │ 0                                                          │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ min_lr_ratio      │ 0.05                                                       │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ basic_lr_per_img  │ 0.00015625                                                 │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ scheduler         │ 'yoloxwarmcos'                                             │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ no_aug_epochs     │ 15                                                         │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ ema               │ True                                                       │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ weight_decay      │ 0.0005                                                     │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ momentum          │ 0.9                                                        │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ save_history_ckpt │ True                                                       │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ exp_name          │ 'yolox_nano'                                               │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ test_size         │ (416, 416)                                                 │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ test_conf         │ 0.01                                                       │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ nmsthre           │ 0.65                                                       │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ random_size       │ (10, 20)                                                   │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ data_num_worker   │ 4                                                          │
╘═══════════════════╧════════════════════════════════════════════════════════════╛
2022-12-23 16:11:51.123 | INFO     | yolox.core.trainer:before_train:136 - Model Summary: Params: 0.90M, Gflops: 1.08
2022-12-23 16:11:51.141 | INFO     | yolox.core.trainer:resume_train:311 - loading checkpoint for fine tuning
2022-12-23 16:11:51.262 | WARNING  | yolox.utils.checkpoint:load_ckpt:24 - Shape of head.cls_preds.0.weight in checkpoint is torch.Size([80, 64, 1, 1]), while shape of head.cls_preds.0.weight in model is torch.Size([4, 64, 1, 1]).
2022-12-23 16:11:51.263 | WARNING  | yolox.utils.checkpoint:load_ckpt:24 - Shape of head.cls_preds.0.bias in checkpoint is torch.Size([80]), while shape of head.cls_preds.0.bias in model is torch.Size([4]).
2022-12-23 16:11:51.263 | WARNING  | yolox.utils.checkpoint:load_ckpt:24 - Shape of head.cls_preds.1.weight in checkpoint is torch.Size([80, 64, 1, 1]), while shape of head.cls_preds.1.weight in model is torch.Size([4, 64, 1, 1]).
2022-12-23 16:11:51.263 | WARNING  | yolox.utils.checkpoint:load_ckpt:24 - Shape of head.cls_preds.1.bias in checkpoint is torch.Size([80]), while shape of head.cls_preds.1.bias in model is torch.Size([4]).
2022-12-23 16:11:51.264 | WARNING  | yolox.utils.checkpoint:load_ckpt:24 - Shape of head.cls_preds.2.weight in checkpoint is torch.Size([80, 64, 1, 1]), while shape of head.cls_preds.2.weight in model is torch.Size([4, 64, 1, 1]).
2022-12-23 16:11:51.264 | WARNING  | yolox.utils.checkpoint:load_ckpt:24 - Shape of head.cls_preds.2.bias in checkpoint is torch.Size([80]), while shape of head.cls_preds.2.bias in model is torch.Size([4]).
2022-12-23 16:11:51.286 | INFO     | yolox.data.datasets.coco:__init__:64 - loading annotations into memory...
2022-12-23 16:11:51.287 | INFO     | yolox.data.datasets.coco:__init__:64 - Done (t=0.00s)
2022-12-23 16:11:51.287 | INFO     | pycocotools.coco:__init__:86 - creating index...
2022-12-23 16:11:51.288 | INFO     | pycocotools.coco:__init__:86 - index created!
2022-12-23 16:11:51.339 | INFO     | yolox.core.trainer:before_train:155 - init prefetcher, this might take one minute or less...
2022-12-23 16:12:01.664 | INFO     | yolox.data.datasets.coco:__init__:64 - loading annotations into memory...
2022-12-23 16:12:01.665 | INFO     | yolox.data.datasets.coco:__init__:64 - Done (t=0.00s)
2022-12-23 16:12:01.666 | INFO     | pycocotools.coco:__init__:86 - creating index...
2022-12-23 16:12:01.666 | INFO     | pycocotools.coco:__init__:86 - index created!
2022-12-23 16:12:01.670 | INFO     | yolox.core.trainer:before_train:191 - Training start...
2022-12-23 16:12:01.673 | INFO     | yolox.core.trainer:before_train:192 - 
DistributedDataParallel(
  (module): YOLOX(
    (backbone): YOLOPAFPN(
      (backbone): CSPDarknet(
        (stem): Focus(
          (conv): BaseConv(
            (conv): Conv2d(12, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn): BatchNorm2d(16, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
            (act): SiLU(inplace=True)
          )
        )
        (dark2): Sequential(
          (0): DWConv(
            (dconv): BaseConv(
              (conv): Conv2d(16, 16, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=16, bias=False)
              (bn): BatchNorm2d(16, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): SiLU(inplace=True)
            )
            (pconv): BaseConv(
              (conv): Conv2d(16, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (bn): BatchNorm2d(32, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): SiLU(inplace=True)
            )
          )
          (1): CSPLayer(
            (conv1): BaseConv(
              (conv): Conv2d(32, 16, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (bn): BatchNorm2d(16, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): SiLU(inplace=True)
            )
            (conv2): BaseConv(
              (conv): Conv2d(32, 16, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (bn): BatchNorm2d(16, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): SiLU(inplace=True)
            )
            (conv3): BaseConv(
              (conv): Conv2d(32, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (bn): BatchNorm2d(32, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): SiLU(inplace=True)
            )
            (m): Sequential(
              (0): Bottleneck(
                (conv1): BaseConv(
                  (conv): Conv2d(16, 16, kernel_size=(1, 1), stride=(1, 1), bias=False)
                  (bn): BatchNorm2d(16, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                  (act): SiLU(inplace=True)
                )
                (conv2): DWConv(
                  (dconv): BaseConv(
                    (conv): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=16, bias=False)
                    (bn): BatchNorm2d(16, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                    (act): SiLU(inplace=True)
                  )
                  (pconv): BaseConv(
                    (conv): Conv2d(16, 16, kernel_size=(1, 1), stride=(1, 1), bias=False)
                    (bn): BatchNorm2d(16, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                    (act): SiLU(inplace=True)
                  )
                )
              )
            )
          )
        )
        (dark3): Sequential(
          (0): DWConv(
            (dconv): BaseConv(
              (conv): Conv2d(32, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=32, bias=False)
              (bn): BatchNorm2d(32, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): SiLU(inplace=True)
            )
            (pconv): BaseConv(
              (conv): Conv2d(32, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): SiLU(inplace=True)
            )
          )
          (1): CSPLayer(
            (conv1): BaseConv(
              (conv): Conv2d(64, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (bn): BatchNorm2d(32, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): SiLU(inplace=True)
            )
            (conv2): BaseConv(
              (conv): Conv2d(64, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (bn): BatchNorm2d(32, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): SiLU(inplace=True)
            )
            (conv3): BaseConv(
              (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): SiLU(inplace=True)
            )
            (m): Sequential(
              (0): Bottleneck(
                (conv1): BaseConv(
                  (conv): Conv2d(32, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)
                  (bn): BatchNorm2d(32, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                  (act): SiLU(inplace=True)
                )
                (conv2): DWConv(
                  (dconv): BaseConv(
                    (conv): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False)
                    (bn): BatchNorm2d(32, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                    (act): SiLU(inplace=True)
                  )
                  (pconv): BaseConv(
                    (conv): Conv2d(32, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)
                    (bn): BatchNorm2d(32, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                    (act): SiLU(inplace=True)
                  )
                )
              )
              (1): Bottleneck(
                (conv1): BaseConv(
                  (conv): Conv2d(32, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)
                  (bn): BatchNorm2d(32, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                  (act): SiLU(inplace=True)
                )
                (conv2): DWConv(
                  (dconv): BaseConv(
                    (conv): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False)
                    (bn): BatchNorm2d(32, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                    (act): SiLU(inplace=True)
                  )
                  (pconv): BaseConv(
                    (conv): Conv2d(32, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)
                    (bn): BatchNorm2d(32, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                    (act): SiLU(inplace=True)
                  )
                )
              )
              (2): Bottleneck(
                (conv1): BaseConv(
                  (conv): Conv2d(32, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)
                  (bn): BatchNorm2d(32, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                  (act): SiLU(inplace=True)
                )
                (conv2): DWConv(
                  (dconv): BaseConv(
                    (conv): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False)
                    (bn): BatchNorm2d(32, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                    (act): SiLU(inplace=True)
                  )
                  (pconv): BaseConv(
                    (conv): Conv2d(32, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)
                    (bn): BatchNorm2d(32, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                    (act): SiLU(inplace=True)
                  )
                )
              )
            )
          )
        )
        (dark4): Sequential(
          (0): DWConv(
            (dconv): BaseConv(
              (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=64, bias=False)
              (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): SiLU(inplace=True)
            )
            (pconv): BaseConv(
              (conv): Conv2d(64, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (bn): BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): SiLU(inplace=True)
            )
          )
          (1): CSPLayer(
            (conv1): BaseConv(
              (conv): Conv2d(128, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): SiLU(inplace=True)
            )
            (conv2): BaseConv(
              (conv): Conv2d(128, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): SiLU(inplace=True)
            )
            (conv3): BaseConv(
              (conv): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (bn): BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): SiLU(inplace=True)
            )
            (m): Sequential(
              (0): Bottleneck(
                (conv1): BaseConv(
                  (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
                  (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                  (act): SiLU(inplace=True)
                )
                (conv2): DWConv(
                  (dconv): BaseConv(
                    (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=64, bias=False)
                    (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                    (act): SiLU(inplace=True)
                  )
                  (pconv): BaseConv(
                    (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
                    (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                    (act): SiLU(inplace=True)
                  )
                )
              )
              (1): Bottleneck(
                (conv1): BaseConv(
                  (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
                  (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                  (act): SiLU(inplace=True)
                )
                (conv2): DWConv(
                  (dconv): BaseConv(
                    (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=64, bias=False)
                    (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                    (act): SiLU(inplace=True)
                  )
                  (pconv): BaseConv(
                    (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
                    (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                    (act): SiLU(inplace=True)
                  )
                )
              )
              (2): Bottleneck(
                (conv1): BaseConv(
                  (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
                  (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                  (act): SiLU(inplace=True)
                )
                (conv2): DWConv(
                  (dconv): BaseConv(
                    (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=64, bias=False)
                    (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                    (act): SiLU(inplace=True)
                  )
                  (pconv): BaseConv(
                    (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
                    (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                    (act): SiLU(inplace=True)
                  )
                )
              )
            )
          )
        )
        (dark5): Sequential(
          (0): DWConv(
            (dconv): BaseConv(
              (conv): Conv2d(128, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=128, bias=False)
              (bn): BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): SiLU(inplace=True)
            )
            (pconv): BaseConv(
              (conv): Conv2d(128, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (bn): BatchNorm2d(256, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): SiLU(inplace=True)
            )
          )
          (1): SPPBottleneck(
            (conv1): BaseConv(
              (conv): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (bn): BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): SiLU(inplace=True)
            )
            (m): ModuleList(
              (0): MaxPool2d(kernel_size=5, stride=1, padding=2, dilation=1, ceil_mode=False)
              (1): MaxPool2d(kernel_size=9, stride=1, padding=4, dilation=1, ceil_mode=False)
              (2): MaxPool2d(kernel_size=13, stride=1, padding=6, dilation=1, ceil_mode=False)
            )
            (conv2): BaseConv(
              (conv): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (bn): BatchNorm2d(256, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): SiLU(inplace=True)
            )
          )
          (2): CSPLayer(
            (conv1): BaseConv(
              (conv): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (bn): BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): SiLU(inplace=True)
            )
            (conv2): BaseConv(
              (conv): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (bn): BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): SiLU(inplace=True)
            )
            (conv3): BaseConv(
              (conv): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (bn): BatchNorm2d(256, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): SiLU(inplace=True)
            )
            (m): Sequential(
              (0): Bottleneck(
                (conv1): BaseConv(
                  (conv): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
                  (bn): BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                  (act): SiLU(inplace=True)
                )
                (conv2): DWConv(
                  (dconv): BaseConv(
                    (conv): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=128, bias=False)
                    (bn): BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                    (act): SiLU(inplace=True)
                  )
                  (pconv): BaseConv(
                    (conv): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
                    (bn): BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                    (act): SiLU(inplace=True)
                  )
                )
              )
            )
          )
        )
      )
      (upsample): Upsample(scale_factor=2.0, mode=nearest)
      (lateral_conv0): BaseConv(
        (conv): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn): BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
        (act): SiLU(inplace=True)
      )
      (C3_p4): CSPLayer(
        (conv1): BaseConv(
          (conv): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
          (act): SiLU(inplace=True)
        )
        (conv2): BaseConv(
          (conv): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
          (act): SiLU(inplace=True)
        )
        (conv3): BaseConv(
          (conv): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn): BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
          (act): SiLU(inplace=True)
        )
        (m): Sequential(
          (0): Bottleneck(
            (conv1): BaseConv(
              (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): SiLU(inplace=True)
            )
            (conv2): DWConv(
              (dconv): BaseConv(
                (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=64, bias=False)
                (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                (act): SiLU(inplace=True)
              )
              (pconv): BaseConv(
                (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                (act): SiLU(inplace=True)
              )
            )
          )
        )
      )
      (reduce_conv1): BaseConv(
        (conv): Conv2d(128, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
        (act): SiLU(inplace=True)
      )
      (C3_p3): CSPLayer(
        (conv1): BaseConv(
          (conv): Conv2d(128, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn): BatchNorm2d(32, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
          (act): SiLU(inplace=True)
        )
        (conv2): BaseConv(
          (conv): Conv2d(128, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn): BatchNorm2d(32, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
          (act): SiLU(inplace=True)
        )
        (conv3): BaseConv(
          (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
          (act): SiLU(inplace=True)
        )
        (m): Sequential(
          (0): Bottleneck(
            (conv1): BaseConv(
              (conv): Conv2d(32, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (bn): BatchNorm2d(32, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): SiLU(inplace=True)
            )
            (conv2): DWConv(
              (dconv): BaseConv(
                (conv): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False)
                (bn): BatchNorm2d(32, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                (act): SiLU(inplace=True)
              )
              (pconv): BaseConv(
                (conv): Conv2d(32, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (bn): BatchNorm2d(32, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                (act): SiLU(inplace=True)
              )
            )
          )
        )
      )
      (bu_conv2): DWConv(
        (dconv): BaseConv(
          (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=64, bias=False)
          (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
          (act): SiLU(inplace=True)
        )
        (pconv): BaseConv(
          (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
          (act): SiLU(inplace=True)
        )
      )
      (C3_n3): CSPLayer(
        (conv1): BaseConv(
          (conv): Conv2d(128, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
          (act): SiLU(inplace=True)
        )
        (conv2): BaseConv(
          (conv): Conv2d(128, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
          (act): SiLU(inplace=True)
        )
        (conv3): BaseConv(
          (conv): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn): BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
          (act): SiLU(inplace=True)
        )
        (m): Sequential(
          (0): Bottleneck(
            (conv1): BaseConv(
              (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): SiLU(inplace=True)
            )
            (conv2): DWConv(
              (dconv): BaseConv(
                (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=64, bias=False)
                (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                (act): SiLU(inplace=True)
              )
              (pconv): BaseConv(
                (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                (act): SiLU(inplace=True)
              )
            )
          )
        )
      )
      (bu_conv1): DWConv(
        (dconv): BaseConv(
          (conv): Conv2d(128, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=128, bias=False)
          (bn): BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
          (act): SiLU(inplace=True)
        )
        (pconv): BaseConv(
          (conv): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn): BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
          (act): SiLU(inplace=True)
        )
      )
      (C3_n4): CSPLayer(
        (conv1): BaseConv(
          (conv): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn): BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
          (act): SiLU(inplace=True)
        )
        (conv2): BaseConv(
          (conv): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn): BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
          (act): SiLU(inplace=True)
        )
        (conv3): BaseConv(
          (conv): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn): BatchNorm2d(256, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
          (act): SiLU(inplace=True)
        )
        (m): Sequential(
          (0): Bottleneck(
            (conv1): BaseConv(
              (conv): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (bn): BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): SiLU(inplace=True)
            )
            (conv2): DWConv(
              (dconv): BaseConv(
                (conv): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=128, bias=False)
                (bn): BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                (act): SiLU(inplace=True)
              )
              (pconv): BaseConv(
                (conv): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (bn): BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                (act): SiLU(inplace=True)
              )
            )
          )
        )
      )
    )
    (head): YOLOXHead(
      (cls_convs): ModuleList(
        (0): Sequential(
          (0): DWConv(
            (dconv): BaseConv(
              (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=64, bias=False)
              (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): SiLU(inplace=True)
            )
            (pconv): BaseConv(
              (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): SiLU(inplace=True)
            )
          )
          (1): DWConv(
            (dconv): BaseConv(
              (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=64, bias=False)
              (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): SiLU(inplace=True)
            )
            (pconv): BaseConv(
              (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): SiLU(inplace=True)
            )
          )
        )
        (1): Sequential(
          (0): DWConv(
            (dconv): BaseConv(
              (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=64, bias=False)
              (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): SiLU(inplace=True)
            )
            (pconv): BaseConv(
              (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): SiLU(inplace=True)
            )
          )
          (1): DWConv(
            (dconv): BaseConv(
              (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=64, bias=False)
              (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): SiLU(inplace=True)
            )
            (pconv): BaseConv(
              (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): SiLU(inplace=True)
            )
          )
        )
        (2): Sequential(
          (0): DWConv(
            (dconv): BaseConv(
              (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=64, bias=False)
              (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): SiLU(inplace=True)
            )
            (pconv): BaseConv(
              (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): SiLU(inplace=True)
            )
          )
          (1): DWConv(
            (dconv): BaseConv(
              (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=64, bias=False)
              (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): SiLU(inplace=True)
            )
            (pconv): BaseConv(
              (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): SiLU(inplace=True)
            )
          )
        )
      )
      (reg_convs): ModuleList(
        (0): Sequential(
          (0): DWConv(
            (dconv): BaseConv(
              (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=64, bias=False)
              (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): SiLU(inplace=True)
            )
            (pconv): BaseConv(
              (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): SiLU(inplace=True)
            )
          )
          (1): DWConv(
            (dconv): BaseConv(
              (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=64, bias=False)
              (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): SiLU(inplace=True)
            )
            (pconv): BaseConv(
              (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): SiLU(inplace=True)
            )
          )
        )
        (1): Sequential(
          (0): DWConv(
            (dconv): BaseConv(
              (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=64, bias=False)
              (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): SiLU(inplace=True)
            )
            (pconv): BaseConv(
              (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): SiLU(inplace=True)
            )
          )
          (1): DWConv(
            (dconv): BaseConv(
              (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=64, bias=False)
              (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): SiLU(inplace=True)
            )
            (pconv): BaseConv(
              (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): SiLU(inplace=True)
            )
          )
        )
        (2): Sequential(
          (0): DWConv(
            (dconv): BaseConv(
              (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=64, bias=False)
              (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): SiLU(inplace=True)
            )
            (pconv): BaseConv(
              (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): SiLU(inplace=True)
            )
          )
          (1): DWConv(
            (dconv): BaseConv(
              (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=64, bias=False)
              (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): SiLU(inplace=True)
            )
            (pconv): BaseConv(
              (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): SiLU(inplace=True)
            )
          )
        )
      )
      (cls_preds): ModuleList(
        (0): Conv2d(64, 4, kernel_size=(1, 1), stride=(1, 1))
        (1): Conv2d(64, 4, kernel_size=(1, 1), stride=(1, 1))
        (2): Conv2d(64, 4, kernel_size=(1, 1), stride=(1, 1))
      )
      (reg_preds): ModuleList(
        (0): Conv2d(64, 4, kernel_size=(1, 1), stride=(1, 1))
        (1): Conv2d(64, 4, kernel_size=(1, 1), stride=(1, 1))
        (2): Conv2d(64, 4, kernel_size=(1, 1), stride=(1, 1))
      )
      (obj_preds): ModuleList(
        (0): Conv2d(64, 1, kernel_size=(1, 1), stride=(1, 1))
        (1): Conv2d(64, 1, kernel_size=(1, 1), stride=(1, 1))
        (2): Conv2d(64, 1, kernel_size=(1, 1), stride=(1, 1))
      )
      (stems): ModuleList(
        (0): BaseConv(
          (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
          (act): SiLU(inplace=True)
        )
        (1): BaseConv(
          (conv): Conv2d(128, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
          (act): SiLU(inplace=True)
        )
        (2): BaseConv(
          (conv): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
          (act): SiLU(inplace=True)
        )
      )
      (l1_loss): L1Loss()
      (bcewithlog_loss): BCEWithLogitsLoss()
      (iou_loss): IOUloss()
    )
  )
)
2022-12-23 16:12:01.674 | INFO     | yolox.core.trainer:before_epoch:203 - ---> start train epoch1
2022-12-23 16:12:04.840 | INFO     | yolox.core.trainer:after_train:195 - Training of experiment is done and the best AP is 0.00
2022-12-23 16:12:04.840 | ERROR    | yolox.core.launch:_distributed_worker:147 - An error has been caught in function '_distributed_worker', process 'SpawnProcess-1' (11660), thread 'MainThread' (140023927646016):
Traceback (most recent call last):

  File "<string>", line 1, in <module>
  File "/usr/lib/python3.8/multiprocessing/spawn.py", line 116, in spawn_main
    exitcode = _main(fd, parent_sentinel)
               │     │   └ 5
               │     └ 8
               └ <function _main at 0x7f59dc419ee0>
  File "/usr/lib/python3.8/multiprocessing/spawn.py", line 129, in _main
    return self._bootstrap(parent_sentinel)
           │    │          └ 5
           │    └ <function BaseProcess._bootstrap at 0x7f59dc5189d0>
           └ <SpawnProcess name='SpawnProcess-1' parent=11617 started>
  File "/usr/lib/python3.8/multiprocessing/process.py", line 315, in _bootstrap
    self.run()
    │    └ <function BaseProcess.run at 0x7f59dc518040>
    └ <SpawnProcess name='SpawnProcess-1' parent=11617 started>
  File "/usr/lib/python3.8/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
    │    │        │    │        │    └ {}
    │    │        │    │        └ <SpawnProcess name='SpawnProcess-1' parent=11617 started>
    │    │        │    └ (<function _distributed_worker at 0x7f59426e5040>, 0, (<function main at 0x7f5935814700>, 2, 2, 0, 'nccl', 'tcp://127.0.0.1:4...
    │    │        └ <SpawnProcess name='SpawnProcess-1' parent=11617 started>
    │    └ <function _wrap at 0x7f59433c38b0>
    └ <SpawnProcess name='SpawnProcess-1' parent=11617 started>

  File "/usr/local/lib/python3.8/dist-packages/torch/multiprocessing/spawn.py", line 69, in _wrap
    fn(i, *args)
    │  │   └ (<function main at 0x7f5935814700>, 2, 2, 0, 'nccl', 'tcp://127.0.0.1:41007', (╒═══════════════════╤═════════════════════════...
    │  └ 0
    └ <function _distributed_worker at 0x7f59426e5040>

> File "/root/YOLOX/yolox/core/launch.py", line 147, in _distributed_worker
    main_func(*args)
    │          └ (╒═══════════════════╤═══════════════════════════════════════════════════════════════════════════════════════════════════════...
    └ <function main at 0x7f5935814700>

  File "/root/YOLOX/tools/train.py", line 118, in main
    trainer.train()
    │       └ <function Trainer.train at 0x7f5934e16430>
    └ <yolox.core.trainer.Trainer object at 0x7f5934e2dca0>

  File "/root/YOLOX/yolox/core/trainer.py", line 76, in train
    self.train_in_epoch()
    │    └ <function Trainer.train_in_epoch at 0x7f5934e16af0>
    └ <yolox.core.trainer.Trainer object at 0x7f5934e2dca0>

  File "/root/YOLOX/yolox/core/trainer.py", line 85, in train_in_epoch
    self.train_in_iter()
    │    └ <function Trainer.train_in_iter at 0x7f5934e16b80>
    └ <yolox.core.trainer.Trainer object at 0x7f5934e2dca0>

  File "/root/YOLOX/yolox/core/trainer.py", line 91, in train_in_iter
    self.train_one_iter()
    │    └ <function Trainer.train_one_iter at 0x7f5934e16c10>
    └ <yolox.core.trainer.Trainer object at 0x7f5934e2dca0>

  File "/root/YOLOX/yolox/core/trainer.py", line 105, in train_one_iter
    outputs = self.model(inps, targets)
              │    │     │     └ tensor([[[  1.0000, 214.2500, 313.2500,  27.0156,  58.5312],
              │    │     │                [  0.0000,   0.0000,   0.0000,   0.0000,   0.0000],
              │    │     │          ...
              │    │     └ tensor([[[[114., 114., 114.,  ..., 114., 114., 114.],
              │    │                 [114., 114., 114.,  ..., 114., 114., 114.],
              │    │                 [114., ...
              │    └ DistributedDataParallel(
              │        (module): YOLOX(
              │          (backbone): YOLOPAFPN(
              │            (backbone): CSPDarknet(
              │              (stem): Focus(
              │       ...
              └ <yolox.core.trainer.Trainer object at 0x7f5934e2dca0>

  File "/usr/local/lib/python3.8/dist-packages/torch/nn/modules/module.py", line 1190, in _call_impl
    return forward_call(*input, **kwargs)
           │             │        └ {}
           │             └ (tensor([[[[114., 114., 114.,  ..., 114., 114., 114.],
           │                         [114., 114., 114.,  ..., 114., 114., 114.],
           │                         [114.,...
           └ <bound method DistributedDataParallel.forward of DistributedDataParallel(
               (module): YOLOX(
                 (backbone): YOLOPAFPN(
                  ...

  File "/usr/local/lib/python3.8/dist-packages/torch/nn/parallel/distributed.py", line 1040, in forward
    output = self._run_ddp_forward(*inputs, **kwargs)
             │    │                 │         └ {}
             │    │                 └ (tensor([[[[114., 114., 114.,  ..., 114., 114., 114.],
             │    │                             [114., 114., 114.,  ..., 114., 114., 114.],
             │    │                             [114.,...
             │    └ <function DistributedDataParallel._run_ddp_forward at 0x7f594341d5e0>
             └ DistributedDataParallel(
                 (module): YOLOX(
                   (backbone): YOLOPAFPN(
                     (backbone): CSPDarknet(
                       (stem): Focus(
                ...

  File "/usr/local/lib/python3.8/dist-packages/torch/nn/parallel/distributed.py", line 1000, in _run_ddp_forward
    return module_to_run(*inputs[0], **kwargs[0])
           │              │            └ ({},)
           │              └ ((tensor([[[[114., 114., 114.,  ..., 114., 114., 114.],
           │                          [114., 114., 114.,  ..., 114., 114., 114.],
           │                          [114....
           └ YOLOX(
               (backbone): YOLOPAFPN(
                 (backbone): CSPDarknet(
                   (stem): Focus(
                     (conv): BaseConv(
                       (conv): ...

  File "/usr/local/lib/python3.8/dist-packages/torch/nn/modules/module.py", line 1190, in _call_impl
    return forward_call(*input, **kwargs)
           │             │        └ {}
           │             └ (tensor([[[[114., 114., 114.,  ..., 114., 114., 114.],
           │                         [114., 114., 114.,  ..., 114., 114., 114.],
           │                         [114.,...
           └ <bound method YOLOX.forward of YOLOX(
               (backbone): YOLOPAFPN(
                 (backbone): CSPDarknet(
                   (stem): Focus(
                     (conv...

  File "/root/YOLOX/yolox/models/yolox.py", line 34, in forward
    loss, iou_loss, conf_loss, cls_loss, l1_loss, num_fg = self.head(
                                                           └ YOLOX(
                                                               (backbone): YOLOPAFPN(
                                                                 (backbone): CSPDarknet(
                                                                   (stem): Focus(
                                                                     (conv): BaseConv(
                                                                       (conv): ...

  File "/usr/local/lib/python3.8/dist-packages/torch/nn/modules/module.py", line 1190, in _call_impl
    return forward_call(*input, **kwargs)
           │             │        └ {}
           │             └ <unprintable tuple object>
           └ <bound method YOLOXHead.forward of YOLOXHead(
               (cls_convs): ModuleList(
                 (0): Sequential(
                   (0): DWConv(
                     (dco...

  File "/root/YOLOX/yolox/models/yolo_head.py", line 157, in forward
    cls_feat = cls_conv(cls_x)
               │        └ <unprintable Tensor object>
               └ Sequential(
                   (0): DWConv(
                     (dconv): BaseConv(
                       (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1,...

  File "/usr/local/lib/python3.8/dist-packages/torch/nn/modules/module.py", line 1190, in _call_impl
    return forward_call(*input, **kwargs)
           │             │        └ {}
           │             └ <unprintable tuple object>
           └ <bound method Sequential.forward of Sequential(
               (0): DWConv(
                 (dconv): BaseConv(
                   (conv): Conv2d(64, 64, kernel_siz...

  File "/usr/local/lib/python3.8/dist-packages/torch/nn/modules/container.py", line 204, in forward
    input = module(input)
            │      └ <unprintable Tensor object>
            └ DWConv(
                (dconv): BaseConv(
                  (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=64, bias=Fa...

  File "/usr/local/lib/python3.8/dist-packages/torch/nn/modules/module.py", line 1190, in _call_impl
    return forward_call(*input, **kwargs)
           │             │        └ {}
           │             └ <unprintable tuple object>
           └ <bound method DWConv.forward of DWConv(
               (dconv): BaseConv(
                 (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), pa...

  File "/root/YOLOX/yolox/models/network_blocks.py", line 75, in forward
    x = self.dconv(x)
        │          └ <unprintable Tensor object>
        └ DWConv(
            (dconv): BaseConv(
              (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=64, bias=Fa...

  File "/usr/local/lib/python3.8/dist-packages/torch/nn/modules/module.py", line 1190, in _call_impl
    return forward_call(*input, **kwargs)
           │             │        └ {}
           │             └ <unprintable tuple object>
           └ <bound method BaseConv.forward of BaseConv(
               (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), group...

  File "/root/YOLOX/yolox/models/network_blocks.py", line 51, in forward
    return self.act(self.bn(self.conv(x)))
           │        │       │         └ <unprintable Tensor object>
           │        │       └ BaseConv(
           │        │           (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=64, bias=False)
           │        │           (bn): BatchNor...
           │        └ BaseConv(
           │            (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=64, bias=False)
           │            (bn): BatchNor...
           └ BaseConv(
               (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=64, bias=False)
               (bn): BatchNor...

  File "/usr/local/lib/python3.8/dist-packages/torch/nn/modules/module.py", line 1190, in _call_impl
    return forward_call(*input, **kwargs)
           │             │        └ {}
           │             └ <unprintable tuple object>
           └ <bound method _BatchNorm.forward of BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)>

  File "/usr/local/lib/python3.8/dist-packages/torch/nn/modules/batchnorm.py", line 171, in forward
    return F.batch_norm(
           │ └ <function batch_norm at 0x7f5943643dc0>
           └ <module 'torch.nn.functional' from '/usr/local/lib/python3.8/dist-packages/torch/nn/functional.py'>

  File "/usr/local/lib/python3.8/dist-packages/torch/nn/functional.py", line 2450, in batch_norm
    return torch.batch_norm(
           │     └ <built-in method batch_norm of type object at 0x7f59bac7e980>
           └ <module 'torch' from '/usr/local/lib/python3.8/dist-packages/torch/__init__.py'>

torch.cuda.OutOfMemoryError: CUDA out of memory. Tried to allocate 2.00 MiB (GPU 0; 7.79 GiB total capacity; 69.32 MiB already allocated; 2.50 MiB free; 6.68 GiB reserved in total by PyTorch) If reserved memory is >> allocated memory try setting max_split_size_mb to avoid fragmentation.  See documentation for Memory Management and PYTORCH_CUDA_ALLOC_CONF
2022-12-23 16:16:03.616 | INFO     | yolox.core.trainer:before_train:130 - args: Namespace(batch_size=16, cache=False, ckpt='/root/YOLOX/yolox_nano.pth', devices=2, dist_backend='nccl', dist_url=None, exp_file='/root/YOLOX/yolox_nano.py', experiment_name='yolox_nano', fp16=True, logger='tensorboard', machine_rank=0, name=None, num_machines=1, occupy=True, opts=[], resume=False, start_epoch=None)
2022-12-23 16:16:03.618 | INFO     | yolox.core.trainer:before_train:131 - exp value:
╒═══════════════════╤════════════════════════════════════════════════════════════╕
│ keys              │ values                                                     │
╞═══════════════════╪════════════════════════════════════════════════════════════╡
│ seed              │ None                                                       │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ output_dir        │ './YOLOX_outputs'                                          │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ print_interval    │ 10                                                         │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ eval_interval     │ 1                                                          │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ num_classes       │ 4                                                          │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ depth             │ 0.33                                                       │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ width             │ 0.25                                                       │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ act               │ 'silu'                                                     │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ data_num_workers  │ 4                                                          │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ input_size        │ (416, 416)                                                 │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ multiscale_range  │ 5                                                          │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ data_dir          │ '/root/ML/dataset/images'                                  │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ train_ann         │ '/root/ML/dataset/annotations/train_annotations.json'      │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ val_ann           │ '/root/ML/dataset/annotations/validation_annotations.json' │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ test_ann          │ 'instances_test2017.json'                                  │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ mosaic_prob       │ 0.5                                                        │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ mixup_prob        │ 1.0                                                        │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ hsv_prob          │ 1.0                                                        │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ flip_prob         │ 0.5                                                        │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ degrees           │ 10.0                                                       │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ translate         │ 0.1                                                        │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ mosaic_scale      │ (0.5, 1.5)                                                 │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ enable_mixup      │ False                                                      │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ mixup_scale       │ (0.5, 1.5)                                                 │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ shear             │ 2.0                                                        │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ warmup_epochs     │ 5                                                          │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ max_epoch         │ 20                                                         │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ warmup_lr         │ 0                                                          │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ min_lr_ratio      │ 0.05                                                       │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ basic_lr_per_img  │ 0.00015625                                                 │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ scheduler         │ 'yoloxwarmcos'                                             │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ no_aug_epochs     │ 15                                                         │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ ema               │ True                                                       │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ weight_decay      │ 0.0005                                                     │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ momentum          │ 0.9                                                        │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ save_history_ckpt │ True                                                       │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ exp_name          │ 'yolox_nano'                                               │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ test_size         │ (416, 416)                                                 │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ test_conf         │ 0.01                                                       │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ nmsthre           │ 0.65                                                       │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ random_size       │ (10, 20)                                                   │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ data_num_worker   │ 4                                                          │
╘═══════════════════╧════════════════════════════════════════════════════════════╛
2022-12-23 16:16:03.813 | INFO     | yolox.core.trainer:before_train:136 - Model Summary: Params: 0.90M, Gflops: 1.08
2022-12-23 16:16:03.835 | INFO     | yolox.core.trainer:resume_train:311 - loading checkpoint for fine tuning
2022-12-23 16:16:03.943 | WARNING  | yolox.utils.checkpoint:load_ckpt:24 - Shape of head.cls_preds.0.weight in checkpoint is torch.Size([80, 64, 1, 1]), while shape of head.cls_preds.0.weight in model is torch.Size([4, 64, 1, 1]).
2022-12-23 16:16:03.944 | WARNING  | yolox.utils.checkpoint:load_ckpt:24 - Shape of head.cls_preds.0.bias in checkpoint is torch.Size([80]), while shape of head.cls_preds.0.bias in model is torch.Size([4]).
2022-12-23 16:16:03.944 | WARNING  | yolox.utils.checkpoint:load_ckpt:24 - Shape of head.cls_preds.1.weight in checkpoint is torch.Size([80, 64, 1, 1]), while shape of head.cls_preds.1.weight in model is torch.Size([4, 64, 1, 1]).
2022-12-23 16:16:03.944 | WARNING  | yolox.utils.checkpoint:load_ckpt:24 - Shape of head.cls_preds.1.bias in checkpoint is torch.Size([80]), while shape of head.cls_preds.1.bias in model is torch.Size([4]).
2022-12-23 16:16:03.944 | WARNING  | yolox.utils.checkpoint:load_ckpt:24 - Shape of head.cls_preds.2.weight in checkpoint is torch.Size([80, 64, 1, 1]), while shape of head.cls_preds.2.weight in model is torch.Size([4, 64, 1, 1]).
2022-12-23 16:16:03.944 | WARNING  | yolox.utils.checkpoint:load_ckpt:24 - Shape of head.cls_preds.2.bias in checkpoint is torch.Size([80]), while shape of head.cls_preds.2.bias in model is torch.Size([4]).
2022-12-23 16:16:03.960 | INFO     | yolox.data.datasets.coco:__init__:64 - loading annotations into memory...
2022-12-23 16:16:03.961 | INFO     | yolox.data.datasets.coco:__init__:64 - Done (t=0.00s)
2022-12-23 16:16:03.961 | INFO     | pycocotools.coco:__init__:86 - creating index...
2022-12-23 16:16:03.962 | INFO     | pycocotools.coco:__init__:86 - index created!
2022-12-23 16:16:03.971 | INFO     | yolox.core.trainer:before_train:155 - init prefetcher, this might take one minute or less...
2022-12-23 16:16:14.742 | INFO     | yolox.data.datasets.coco:__init__:64 - loading annotations into memory...
2022-12-23 16:16:14.743 | INFO     | yolox.data.datasets.coco:__init__:64 - Done (t=0.00s)
2022-12-23 16:16:14.744 | INFO     | pycocotools.coco:__init__:86 - creating index...
2022-12-23 16:16:14.744 | INFO     | pycocotools.coco:__init__:86 - index created!
2022-12-23 16:16:14.750 | INFO     | yolox.core.trainer:before_train:191 - Training start...
2022-12-23 16:16:14.756 | INFO     | yolox.core.trainer:before_train:192 - 
DistributedDataParallel(
  (module): YOLOX(
    (backbone): YOLOPAFPN(
      (backbone): CSPDarknet(
        (stem): Focus(
          (conv): BaseConv(
            (conv): Conv2d(12, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn): BatchNorm2d(16, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
            (act): SiLU(inplace=True)
          )
        )
        (dark2): Sequential(
          (0): DWConv(
            (dconv): BaseConv(
              (conv): Conv2d(16, 16, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=16, bias=False)
              (bn): BatchNorm2d(16, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): SiLU(inplace=True)
            )
            (pconv): BaseConv(
              (conv): Conv2d(16, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (bn): BatchNorm2d(32, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): SiLU(inplace=True)
            )
          )
          (1): CSPLayer(
            (conv1): BaseConv(
              (conv): Conv2d(32, 16, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (bn): BatchNorm2d(16, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): SiLU(inplace=True)
            )
            (conv2): BaseConv(
              (conv): Conv2d(32, 16, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (bn): BatchNorm2d(16, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): SiLU(inplace=True)
            )
            (conv3): BaseConv(
              (conv): Conv2d(32, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (bn): BatchNorm2d(32, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): SiLU(inplace=True)
            )
            (m): Sequential(
              (0): Bottleneck(
                (conv1): BaseConv(
                  (conv): Conv2d(16, 16, kernel_size=(1, 1), stride=(1, 1), bias=False)
                  (bn): BatchNorm2d(16, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                  (act): SiLU(inplace=True)
                )
                (conv2): DWConv(
                  (dconv): BaseConv(
                    (conv): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=16, bias=False)
                    (bn): BatchNorm2d(16, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                    (act): SiLU(inplace=True)
                  )
                  (pconv): BaseConv(
                    (conv): Conv2d(16, 16, kernel_size=(1, 1), stride=(1, 1), bias=False)
                    (bn): BatchNorm2d(16, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                    (act): SiLU(inplace=True)
                  )
                )
              )
            )
          )
        )
        (dark3): Sequential(
          (0): DWConv(
            (dconv): BaseConv(
              (conv): Conv2d(32, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=32, bias=False)
              (bn): BatchNorm2d(32, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): SiLU(inplace=True)
            )
            (pconv): BaseConv(
              (conv): Conv2d(32, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): SiLU(inplace=True)
            )
          )
          (1): CSPLayer(
            (conv1): BaseConv(
              (conv): Conv2d(64, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (bn): BatchNorm2d(32, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): SiLU(inplace=True)
            )
            (conv2): BaseConv(
              (conv): Conv2d(64, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (bn): BatchNorm2d(32, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): SiLU(inplace=True)
            )
            (conv3): BaseConv(
              (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): SiLU(inplace=True)
            )
            (m): Sequential(
              (0): Bottleneck(
                (conv1): BaseConv(
                  (conv): Conv2d(32, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)
                  (bn): BatchNorm2d(32, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                  (act): SiLU(inplace=True)
                )
                (conv2): DWConv(
                  (dconv): BaseConv(
                    (conv): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False)
                    (bn): BatchNorm2d(32, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                    (act): SiLU(inplace=True)
                  )
                  (pconv): BaseConv(
                    (conv): Conv2d(32, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)
                    (bn): BatchNorm2d(32, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                    (act): SiLU(inplace=True)
                  )
                )
              )
              (1): Bottleneck(
                (conv1): BaseConv(
                  (conv): Conv2d(32, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)
                  (bn): BatchNorm2d(32, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                  (act): SiLU(inplace=True)
                )
                (conv2): DWConv(
                  (dconv): BaseConv(
                    (conv): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False)
                    (bn): BatchNorm2d(32, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                    (act): SiLU(inplace=True)
                  )
                  (pconv): BaseConv(
                    (conv): Conv2d(32, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)
                    (bn): BatchNorm2d(32, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                    (act): SiLU(inplace=True)
                  )
                )
              )
              (2): Bottleneck(
                (conv1): BaseConv(
                  (conv): Conv2d(32, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)
                  (bn): BatchNorm2d(32, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                  (act): SiLU(inplace=True)
                )
                (conv2): DWConv(
                  (dconv): BaseConv(
                    (conv): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False)
                    (bn): BatchNorm2d(32, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                    (act): SiLU(inplace=True)
                  )
                  (pconv): BaseConv(
                    (conv): Conv2d(32, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)
                    (bn): BatchNorm2d(32, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                    (act): SiLU(inplace=True)
                  )
                )
              )
            )
          )
        )
        (dark4): Sequential(
          (0): DWConv(
            (dconv): BaseConv(
              (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=64, bias=False)
              (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): SiLU(inplace=True)
            )
            (pconv): BaseConv(
              (conv): Conv2d(64, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (bn): BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): SiLU(inplace=True)
            )
          )
          (1): CSPLayer(
            (conv1): BaseConv(
              (conv): Conv2d(128, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): SiLU(inplace=True)
            )
            (conv2): BaseConv(
              (conv): Conv2d(128, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): SiLU(inplace=True)
            )
            (conv3): BaseConv(
              (conv): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (bn): BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): SiLU(inplace=True)
            )
            (m): Sequential(
              (0): Bottleneck(
                (conv1): BaseConv(
                  (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
                  (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                  (act): SiLU(inplace=True)
                )
                (conv2): DWConv(
                  (dconv): BaseConv(
                    (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=64, bias=False)
                    (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                    (act): SiLU(inplace=True)
                  )
                  (pconv): BaseConv(
                    (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
                    (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                    (act): SiLU(inplace=True)
                  )
                )
              )
              (1): Bottleneck(
                (conv1): BaseConv(
                  (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
                  (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                  (act): SiLU(inplace=True)
                )
                (conv2): DWConv(
                  (dconv): BaseConv(
                    (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=64, bias=False)
                    (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                    (act): SiLU(inplace=True)
                  )
                  (pconv): BaseConv(
                    (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
                    (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                    (act): SiLU(inplace=True)
                  )
                )
              )
              (2): Bottleneck(
                (conv1): BaseConv(
                  (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
                  (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                  (act): SiLU(inplace=True)
                )
                (conv2): DWConv(
                  (dconv): BaseConv(
                    (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=64, bias=False)
                    (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                    (act): SiLU(inplace=True)
                  )
                  (pconv): BaseConv(
                    (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
                    (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                    (act): SiLU(inplace=True)
                  )
                )
              )
            )
          )
        )
        (dark5): Sequential(
          (0): DWConv(
            (dconv): BaseConv(
              (conv): Conv2d(128, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=128, bias=False)
              (bn): BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): SiLU(inplace=True)
            )
            (pconv): BaseConv(
              (conv): Conv2d(128, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (bn): BatchNorm2d(256, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): SiLU(inplace=True)
            )
          )
          (1): SPPBottleneck(
            (conv1): BaseConv(
              (conv): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (bn): BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): SiLU(inplace=True)
            )
            (m): ModuleList(
              (0): MaxPool2d(kernel_size=5, stride=1, padding=2, dilation=1, ceil_mode=False)
              (1): MaxPool2d(kernel_size=9, stride=1, padding=4, dilation=1, ceil_mode=False)
              (2): MaxPool2d(kernel_size=13, stride=1, padding=6, dilation=1, ceil_mode=False)
            )
            (conv2): BaseConv(
              (conv): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (bn): BatchNorm2d(256, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): SiLU(inplace=True)
            )
          )
          (2): CSPLayer(
            (conv1): BaseConv(
              (conv): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (bn): BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): SiLU(inplace=True)
            )
            (conv2): BaseConv(
              (conv): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (bn): BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): SiLU(inplace=True)
            )
            (conv3): BaseConv(
              (conv): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (bn): BatchNorm2d(256, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): SiLU(inplace=True)
            )
            (m): Sequential(
              (0): Bottleneck(
                (conv1): BaseConv(
                  (conv): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
                  (bn): BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                  (act): SiLU(inplace=True)
                )
                (conv2): DWConv(
                  (dconv): BaseConv(
                    (conv): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=128, bias=False)
                    (bn): BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                    (act): SiLU(inplace=True)
                  )
                  (pconv): BaseConv(
                    (conv): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
                    (bn): BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                    (act): SiLU(inplace=True)
                  )
                )
              )
            )
          )
        )
      )
      (upsample): Upsample(scale_factor=2.0, mode=nearest)
      (lateral_conv0): BaseConv(
        (conv): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn): BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
        (act): SiLU(inplace=True)
      )
      (C3_p4): CSPLayer(
        (conv1): BaseConv(
          (conv): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
          (act): SiLU(inplace=True)
        )
        (conv2): BaseConv(
          (conv): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
          (act): SiLU(inplace=True)
        )
        (conv3): BaseConv(
          (conv): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn): BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
          (act): SiLU(inplace=True)
        )
        (m): Sequential(
          (0): Bottleneck(
            (conv1): BaseConv(
              (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): SiLU(inplace=True)
            )
            (conv2): DWConv(
              (dconv): BaseConv(
                (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=64, bias=False)
                (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                (act): SiLU(inplace=True)
              )
              (pconv): BaseConv(
                (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                (act): SiLU(inplace=True)
              )
            )
          )
        )
      )
      (reduce_conv1): BaseConv(
        (conv): Conv2d(128, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
        (act): SiLU(inplace=True)
      )
      (C3_p3): CSPLayer(
        (conv1): BaseConv(
          (conv): Conv2d(128, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn): BatchNorm2d(32, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
          (act): SiLU(inplace=True)
        )
        (conv2): BaseConv(
          (conv): Conv2d(128, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn): BatchNorm2d(32, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
          (act): SiLU(inplace=True)
        )
        (conv3): BaseConv(
          (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
          (act): SiLU(inplace=True)
        )
        (m): Sequential(
          (0): Bottleneck(
            (conv1): BaseConv(
              (conv): Conv2d(32, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (bn): BatchNorm2d(32, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): SiLU(inplace=True)
            )
            (conv2): DWConv(
              (dconv): BaseConv(
                (conv): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False)
                (bn): BatchNorm2d(32, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                (act): SiLU(inplace=True)
              )
              (pconv): BaseConv(
                (conv): Conv2d(32, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (bn): BatchNorm2d(32, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                (act): SiLU(inplace=True)
              )
            )
          )
        )
      )
      (bu_conv2): DWConv(
        (dconv): BaseConv(
          (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=64, bias=False)
          (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
          (act): SiLU(inplace=True)
        )
        (pconv): BaseConv(
          (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
          (act): SiLU(inplace=True)
        )
      )
      (C3_n3): CSPLayer(
        (conv1): BaseConv(
          (conv): Conv2d(128, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
          (act): SiLU(inplace=True)
        )
        (conv2): BaseConv(
          (conv): Conv2d(128, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
          (act): SiLU(inplace=True)
        )
        (conv3): BaseConv(
          (conv): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn): BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
          (act): SiLU(inplace=True)
        )
        (m): Sequential(
          (0): Bottleneck(
            (conv1): BaseConv(
              (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): SiLU(inplace=True)
            )
            (conv2): DWConv(
              (dconv): BaseConv(
                (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=64, bias=False)
                (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                (act): SiLU(inplace=True)
              )
              (pconv): BaseConv(
                (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                (act): SiLU(inplace=True)
              )
            )
          )
        )
      )
      (bu_conv1): DWConv(
        (dconv): BaseConv(
          (conv): Conv2d(128, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=128, bias=False)
          (bn): BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
          (act): SiLU(inplace=True)
        )
        (pconv): BaseConv(
          (conv): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn): BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
          (act): SiLU(inplace=True)
        )
      )
      (C3_n4): CSPLayer(
        (conv1): BaseConv(
          (conv): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn): BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
          (act): SiLU(inplace=True)
        )
        (conv2): BaseConv(
          (conv): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn): BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
          (act): SiLU(inplace=True)
        )
        (conv3): BaseConv(
          (conv): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn): BatchNorm2d(256, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
          (act): SiLU(inplace=True)
        )
        (m): Sequential(
          (0): Bottleneck(
            (conv1): BaseConv(
              (conv): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (bn): BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): SiLU(inplace=True)
            )
            (conv2): DWConv(
              (dconv): BaseConv(
                (conv): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=128, bias=False)
                (bn): BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                (act): SiLU(inplace=True)
              )
              (pconv): BaseConv(
                (conv): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (bn): BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                (act): SiLU(inplace=True)
              )
            )
          )
        )
      )
    )
    (head): YOLOXHead(
      (cls_convs): ModuleList(
        (0): Sequential(
          (0): DWConv(
            (dconv): BaseConv(
              (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=64, bias=False)
              (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): SiLU(inplace=True)
            )
            (pconv): BaseConv(
              (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): SiLU(inplace=True)
            )
          )
          (1): DWConv(
            (dconv): BaseConv(
              (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=64, bias=False)
              (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): SiLU(inplace=True)
            )
            (pconv): BaseConv(
              (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): SiLU(inplace=True)
            )
          )
        )
        (1): Sequential(
          (0): DWConv(
            (dconv): BaseConv(
              (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=64, bias=False)
              (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): SiLU(inplace=True)
            )
            (pconv): BaseConv(
              (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): SiLU(inplace=True)
            )
          )
          (1): DWConv(
            (dconv): BaseConv(
              (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=64, bias=False)
              (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): SiLU(inplace=True)
            )
            (pconv): BaseConv(
              (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): SiLU(inplace=True)
            )
          )
        )
        (2): Sequential(
          (0): DWConv(
            (dconv): BaseConv(
              (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=64, bias=False)
              (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): SiLU(inplace=True)
            )
            (pconv): BaseConv(
              (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): SiLU(inplace=True)
            )
          )
          (1): DWConv(
            (dconv): BaseConv(
              (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=64, bias=False)
              (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): SiLU(inplace=True)
            )
            (pconv): BaseConv(
              (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): SiLU(inplace=True)
            )
          )
        )
      )
      (reg_convs): ModuleList(
        (0): Sequential(
          (0): DWConv(
            (dconv): BaseConv(
              (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=64, bias=False)
              (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): SiLU(inplace=True)
            )
            (pconv): BaseConv(
              (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): SiLU(inplace=True)
            )
          )
          (1): DWConv(
            (dconv): BaseConv(
              (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=64, bias=False)
              (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): SiLU(inplace=True)
            )
            (pconv): BaseConv(
              (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): SiLU(inplace=True)
            )
          )
        )
        (1): Sequential(
          (0): DWConv(
            (dconv): BaseConv(
              (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=64, bias=False)
              (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): SiLU(inplace=True)
            )
            (pconv): BaseConv(
              (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): SiLU(inplace=True)
            )
          )
          (1): DWConv(
            (dconv): BaseConv(
              (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=64, bias=False)
              (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): SiLU(inplace=True)
            )
            (pconv): BaseConv(
              (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): SiLU(inplace=True)
            )
          )
        )
        (2): Sequential(
          (0): DWConv(
            (dconv): BaseConv(
              (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=64, bias=False)
              (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): SiLU(inplace=True)
            )
            (pconv): BaseConv(
              (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): SiLU(inplace=True)
            )
          )
          (1): DWConv(
            (dconv): BaseConv(
              (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=64, bias=False)
              (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): SiLU(inplace=True)
            )
            (pconv): BaseConv(
              (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): SiLU(inplace=True)
            )
          )
        )
      )
      (cls_preds): ModuleList(
        (0): Conv2d(64, 4, kernel_size=(1, 1), stride=(1, 1))
        (1): Conv2d(64, 4, kernel_size=(1, 1), stride=(1, 1))
        (2): Conv2d(64, 4, kernel_size=(1, 1), stride=(1, 1))
      )
      (reg_preds): ModuleList(
        (0): Conv2d(64, 4, kernel_size=(1, 1), stride=(1, 1))
        (1): Conv2d(64, 4, kernel_size=(1, 1), stride=(1, 1))
        (2): Conv2d(64, 4, kernel_size=(1, 1), stride=(1, 1))
      )
      (obj_preds): ModuleList(
        (0): Conv2d(64, 1, kernel_size=(1, 1), stride=(1, 1))
        (1): Conv2d(64, 1, kernel_size=(1, 1), stride=(1, 1))
        (2): Conv2d(64, 1, kernel_size=(1, 1), stride=(1, 1))
      )
      (stems): ModuleList(
        (0): BaseConv(
          (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
          (act): SiLU(inplace=True)
        )
        (1): BaseConv(
          (conv): Conv2d(128, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
          (act): SiLU(inplace=True)
        )
        (2): BaseConv(
          (conv): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
          (act): SiLU(inplace=True)
        )
      )
      (l1_loss): L1Loss()
      (bcewithlog_loss): BCEWithLogitsLoss()
      (iou_loss): IOUloss()
    )
  )
)
2022-12-23 16:16:14.757 | INFO     | yolox.core.trainer:before_epoch:203 - ---> start train epoch1
2022-12-23 16:16:16.977 | INFO     | yolox.core.trainer:after_train:195 - Training of experiment is done and the best AP is 0.00
2022-12-23 16:16:16.977 | ERROR    | yolox.core.launch:_distributed_worker:147 - An error has been caught in function '_distributed_worker', process 'SpawnProcess-1' (14552), thread 'MainThread' (139909974669120):
Traceback (most recent call last):

  File "<string>", line 1, in <module>
  File "/usr/lib/python3.8/multiprocessing/spawn.py", line 116, in spawn_main
    exitcode = _main(fd, parent_sentinel)
               │     │   └ 5
               │     └ 8
               └ <function _main at 0x7f3f54212ee0>
  File "/usr/lib/python3.8/multiprocessing/spawn.py", line 129, in _main
    return self._bootstrap(parent_sentinel)
           │    │          └ 5
           │    └ <function BaseProcess._bootstrap at 0x7f3f543119d0>
           └ <SpawnProcess name='SpawnProcess-1' parent=14503 started>
  File "/usr/lib/python3.8/multiprocessing/process.py", line 315, in _bootstrap
    self.run()
    │    └ <function BaseProcess.run at 0x7f3f54311040>
    └ <SpawnProcess name='SpawnProcess-1' parent=14503 started>
  File "/usr/lib/python3.8/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
    │    │        │    │        │    └ {}
    │    │        │    │        └ <SpawnProcess name='SpawnProcess-1' parent=14503 started>
    │    │        │    └ (<function _distributed_worker at 0x7f3eba4de040>, 0, (<function main at 0x7f3ead60d700>, 2, 2, 0, 'nccl', 'tcp://127.0.0.1:5...
    │    │        └ <SpawnProcess name='SpawnProcess-1' parent=14503 started>
    │    └ <function _wrap at 0x7f3ebb1be8b0>
    └ <SpawnProcess name='SpawnProcess-1' parent=14503 started>

  File "/usr/local/lib/python3.8/dist-packages/torch/multiprocessing/spawn.py", line 69, in _wrap
    fn(i, *args)
    │  │   └ (<function main at 0x7f3ead60d700>, 2, 2, 0, 'nccl', 'tcp://127.0.0.1:57673', (╒═══════════════════╤═════════════════════════...
    │  └ 0
    └ <function _distributed_worker at 0x7f3eba4de040>

> File "/root/YOLOX/yolox/core/launch.py", line 147, in _distributed_worker
    main_func(*args)
    │          └ (╒═══════════════════╤═══════════════════════════════════════════════════════════════════════════════════════════════════════...
    └ <function main at 0x7f3ead60d700>

  File "/root/YOLOX/tools/train.py", line 118, in main
    trainer.train()
    │       └ <function Trainer.train at 0x7f3eacc0f430>
    └ <yolox.core.trainer.Trainer object at 0x7f3eacc25ca0>

  File "/root/YOLOX/yolox/core/trainer.py", line 76, in train
    self.train_in_epoch()
    │    └ <function Trainer.train_in_epoch at 0x7f3eacc0faf0>
    └ <yolox.core.trainer.Trainer object at 0x7f3eacc25ca0>

  File "/root/YOLOX/yolox/core/trainer.py", line 85, in train_in_epoch
    self.train_in_iter()
    │    └ <function Trainer.train_in_iter at 0x7f3eacc0fb80>
    └ <yolox.core.trainer.Trainer object at 0x7f3eacc25ca0>

  File "/root/YOLOX/yolox/core/trainer.py", line 91, in train_in_iter
    self.train_one_iter()
    │    └ <function Trainer.train_one_iter at 0x7f3eacc0fc10>
    └ <yolox.core.trainer.Trainer object at 0x7f3eacc25ca0>

  File "/root/YOLOX/yolox/core/trainer.py", line 105, in train_one_iter
    outputs = self.model(inps, targets)
              │    │     │     └ tensor([[[  0.0000, 145.0000, 111.7500,  27.6719,  45.1250],
              │    │     │                [  1.0000, 406.5000,  73.3750,  18.7656, 146.7500],
              │    │     │          ...
              │    │     └ tensor([[[[107., 107., 107.,  ..., 179., 185., 183.],
              │    │                 [107., 107., 107.,  ..., 170., 182., 183.],
              │    │                 [107., ...
              │    └ DistributedDataParallel(
              │        (module): YOLOX(
              │          (backbone): YOLOPAFPN(
              │            (backbone): CSPDarknet(
              │              (stem): Focus(
              │       ...
              └ <yolox.core.trainer.Trainer object at 0x7f3eacc25ca0>

  File "/usr/local/lib/python3.8/dist-packages/torch/nn/modules/module.py", line 1190, in _call_impl
    return forward_call(*input, **kwargs)
           │             │        └ {}
           │             └ (tensor([[[[107., 107., 107.,  ..., 179., 185., 183.],
           │                         [107., 107., 107.,  ..., 170., 182., 183.],
           │                         [107.,...
           └ <bound method DistributedDataParallel.forward of DistributedDataParallel(
               (module): YOLOX(
                 (backbone): YOLOPAFPN(
                  ...

  File "/usr/local/lib/python3.8/dist-packages/torch/nn/parallel/distributed.py", line 1040, in forward
    output = self._run_ddp_forward(*inputs, **kwargs)
             │    │                 │         └ {}
             │    │                 └ (tensor([[[[107., 107., 107.,  ..., 179., 185., 183.],
             │    │                             [107., 107., 107.,  ..., 170., 182., 183.],
             │    │                             [107.,...
             │    └ <function DistributedDataParallel._run_ddp_forward at 0x7f3ebb2185e0>
             └ DistributedDataParallel(
                 (module): YOLOX(
                   (backbone): YOLOPAFPN(
                     (backbone): CSPDarknet(
                       (stem): Focus(
                ...

  File "/usr/local/lib/python3.8/dist-packages/torch/nn/parallel/distributed.py", line 1000, in _run_ddp_forward
    return module_to_run(*inputs[0], **kwargs[0])
           │              │            └ ({},)
           │              └ ((tensor([[[[107., 107., 107.,  ..., 179., 185., 183.],
           │                          [107., 107., 107.,  ..., 170., 182., 183.],
           │                          [107....
           └ YOLOX(
               (backbone): YOLOPAFPN(
                 (backbone): CSPDarknet(
                   (stem): Focus(
                     (conv): BaseConv(
                       (conv): ...

  File "/usr/local/lib/python3.8/dist-packages/torch/nn/modules/module.py", line 1190, in _call_impl
    return forward_call(*input, **kwargs)
           │             │        └ {}
           │             └ (tensor([[[[107., 107., 107.,  ..., 179., 185., 183.],
           │                         [107., 107., 107.,  ..., 170., 182., 183.],
           │                         [107.,...
           └ <bound method YOLOX.forward of YOLOX(
               (backbone): YOLOPAFPN(
                 (backbone): CSPDarknet(
                   (stem): Focus(
                     (conv...

  File "/root/YOLOX/yolox/models/yolox.py", line 34, in forward
    loss, iou_loss, conf_loss, cls_loss, l1_loss, num_fg = self.head(
                                                           └ YOLOX(
                                                               (backbone): YOLOPAFPN(
                                                                 (backbone): CSPDarknet(
                                                                   (stem): Focus(
                                                                     (conv): BaseConv(
                                                                       (conv): ...

  File "/usr/local/lib/python3.8/dist-packages/torch/nn/modules/module.py", line 1190, in _call_impl
    return forward_call(*input, **kwargs)
           │             │        └ {}
           │             └ ((tensor([[[[ 1.1445e+00, -1.0101e-02, -2.5171e-01,  ...,  9.0625e-01,
           │                           2.0068e-01,  5.0879e-01],
           │                         [ 1.14...
           └ <bound method YOLOXHead.forward of YOLOXHead(
               (cls_convs): ModuleList(
                 (0): Sequential(
                   (0): DWConv(
                     (dco...

  File "/root/YOLOX/yolox/models/yolo_head.py", line 201, in forward
    torch.cat(outputs, 1),
    │     │   └ <unprintable list object>
    │     └ <built-in method cat of type object at 0x7f3f32a77980>
    └ <module 'torch' from '/usr/local/lib/python3.8/dist-packages/torch/__init__.py'>

torch.cuda.OutOfMemoryError: CUDA out of memory. Tried to allocate 2.00 MiB (GPU 0; 7.79 GiB total capacity; 442.05 MiB already allocated; 2.50 MiB free; 6.72 GiB reserved in total by PyTorch) If reserved memory is >> allocated memory try setting max_split_size_mb to avoid fragmentation.  See documentation for Memory Management and PYTORCH_CUDA_ALLOC_CONF
2022-12-23 16:17:16.693 | INFO     | yolox.core.trainer:before_train:130 - args: Namespace(batch_size=16, cache=False, ckpt='/root/YOLOX/yolox_nano.pth', devices=2, dist_backend='nccl', dist_url=None, exp_file='/root/YOLOX/yolox_nano.py', experiment_name='yolox_nano', fp16=True, logger='tensorboard', machine_rank=0, name=None, num_machines=1, occupy=True, opts=[], resume=False, start_epoch=None)
2022-12-23 16:17:16.697 | INFO     | yolox.core.trainer:before_train:131 - exp value:
╒═══════════════════╤════════════════════════════════════════════════════════════╕
│ keys              │ values                                                     │
╞═══════════════════╪════════════════════════════════════════════════════════════╡
│ seed              │ None                                                       │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ output_dir        │ './YOLOX_outputs'                                          │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ print_interval    │ 10                                                         │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ eval_interval     │ 1                                                          │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ num_classes       │ 4                                                          │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ depth             │ 0.33                                                       │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ width             │ 0.25                                                       │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ act               │ 'silu'                                                     │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ data_num_workers  │ 4                                                          │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ input_size        │ (416, 416)                                                 │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ multiscale_range  │ 5                                                          │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ data_dir          │ '/root/ML/dataset/images'                                  │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ train_ann         │ '/root/ML/dataset/annotations/train_annotations.json'      │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ val_ann           │ '/root/ML/dataset/annotations/validation_annotations.json' │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ test_ann          │ 'instances_test2017.json'                                  │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ mosaic_prob       │ 0.5                                                        │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ mixup_prob        │ 1.0                                                        │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ hsv_prob          │ 1.0                                                        │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ flip_prob         │ 0.5                                                        │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ degrees           │ 10.0                                                       │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ translate         │ 0.1                                                        │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ mosaic_scale      │ (0.5, 1.5)                                                 │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ enable_mixup      │ False                                                      │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ mixup_scale       │ (0.5, 1.5)                                                 │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ shear             │ 2.0                                                        │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ warmup_epochs     │ 5                                                          │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ max_epoch         │ 20                                                         │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ warmup_lr         │ 0                                                          │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ min_lr_ratio      │ 0.05                                                       │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ basic_lr_per_img  │ 0.00015625                                                 │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ scheduler         │ 'yoloxwarmcos'                                             │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ no_aug_epochs     │ 15                                                         │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ ema               │ True                                                       │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ weight_decay      │ 0.0005                                                     │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ momentum          │ 0.9                                                        │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ save_history_ckpt │ True                                                       │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ exp_name          │ 'yolox_nano'                                               │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ test_size         │ (416, 416)                                                 │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ test_conf         │ 0.01                                                       │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ nmsthre           │ 0.65                                                       │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ random_size       │ (10, 20)                                                   │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ data_num_worker   │ 4                                                          │
╘═══════════════════╧════════════════════════════════════════════════════════════╛
2022-12-23 16:17:16.895 | INFO     | yolox.core.trainer:before_train:136 - Model Summary: Params: 0.90M, Gflops: 1.08
2022-12-23 16:17:16.912 | INFO     | yolox.core.trainer:resume_train:311 - loading checkpoint for fine tuning
2022-12-23 16:17:17.049 | WARNING  | yolox.utils.checkpoint:load_ckpt:24 - Shape of head.cls_preds.0.weight in checkpoint is torch.Size([80, 64, 1, 1]), while shape of head.cls_preds.0.weight in model is torch.Size([4, 64, 1, 1]).
2022-12-23 16:17:17.050 | WARNING  | yolox.utils.checkpoint:load_ckpt:24 - Shape of head.cls_preds.0.bias in checkpoint is torch.Size([80]), while shape of head.cls_preds.0.bias in model is torch.Size([4]).
2022-12-23 16:17:17.050 | WARNING  | yolox.utils.checkpoint:load_ckpt:24 - Shape of head.cls_preds.1.weight in checkpoint is torch.Size([80, 64, 1, 1]), while shape of head.cls_preds.1.weight in model is torch.Size([4, 64, 1, 1]).
2022-12-23 16:17:17.050 | WARNING  | yolox.utils.checkpoint:load_ckpt:24 - Shape of head.cls_preds.1.bias in checkpoint is torch.Size([80]), while shape of head.cls_preds.1.bias in model is torch.Size([4]).
2022-12-23 16:17:17.050 | WARNING  | yolox.utils.checkpoint:load_ckpt:24 - Shape of head.cls_preds.2.weight in checkpoint is torch.Size([80, 64, 1, 1]), while shape of head.cls_preds.2.weight in model is torch.Size([4, 64, 1, 1]).
2022-12-23 16:17:17.051 | WARNING  | yolox.utils.checkpoint:load_ckpt:24 - Shape of head.cls_preds.2.bias in checkpoint is torch.Size([80]), while shape of head.cls_preds.2.bias in model is torch.Size([4]).
2022-12-23 16:17:17.074 | INFO     | yolox.data.datasets.coco:__init__:64 - loading annotations into memory...
2022-12-23 16:17:17.075 | INFO     | yolox.data.datasets.coco:__init__:64 - Done (t=0.00s)
2022-12-23 16:17:17.076 | INFO     | pycocotools.coco:__init__:86 - creating index...
2022-12-23 16:17:17.077 | INFO     | pycocotools.coco:__init__:86 - index created!
2022-12-23 16:17:17.094 | INFO     | yolox.core.trainer:before_train:155 - init prefetcher, this might take one minute or less...
2022-12-23 16:17:28.272 | INFO     | yolox.data.datasets.coco:__init__:64 - loading annotations into memory...
2022-12-23 16:17:28.272 | INFO     | yolox.data.datasets.coco:__init__:64 - Done (t=0.00s)
2022-12-23 16:17:28.273 | INFO     | pycocotools.coco:__init__:86 - creating index...
2022-12-23 16:17:28.273 | INFO     | pycocotools.coco:__init__:86 - index created!
2022-12-23 16:17:28.277 | INFO     | yolox.core.trainer:before_train:191 - Training start...
2022-12-23 16:17:28.280 | INFO     | yolox.core.trainer:before_train:192 - 
DistributedDataParallel(
  (module): YOLOX(
    (backbone): YOLOPAFPN(
      (backbone): CSPDarknet(
        (stem): Focus(
          (conv): BaseConv(
            (conv): Conv2d(12, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn): BatchNorm2d(16, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
            (act): SiLU(inplace=True)
          )
        )
        (dark2): Sequential(
          (0): DWConv(
            (dconv): BaseConv(
              (conv): Conv2d(16, 16, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=16, bias=False)
              (bn): BatchNorm2d(16, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): SiLU(inplace=True)
            )
            (pconv): BaseConv(
              (conv): Conv2d(16, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (bn): BatchNorm2d(32, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): SiLU(inplace=True)
            )
          )
          (1): CSPLayer(
            (conv1): BaseConv(
              (conv): Conv2d(32, 16, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (bn): BatchNorm2d(16, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): SiLU(inplace=True)
            )
            (conv2): BaseConv(
              (conv): Conv2d(32, 16, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (bn): BatchNorm2d(16, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): SiLU(inplace=True)
            )
            (conv3): BaseConv(
              (conv): Conv2d(32, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (bn): BatchNorm2d(32, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): SiLU(inplace=True)
            )
            (m): Sequential(
              (0): Bottleneck(
                (conv1): BaseConv(
                  (conv): Conv2d(16, 16, kernel_size=(1, 1), stride=(1, 1), bias=False)
                  (bn): BatchNorm2d(16, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                  (act): SiLU(inplace=True)
                )
                (conv2): DWConv(
                  (dconv): BaseConv(
                    (conv): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=16, bias=False)
                    (bn): BatchNorm2d(16, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                    (act): SiLU(inplace=True)
                  )
                  (pconv): BaseConv(
                    (conv): Conv2d(16, 16, kernel_size=(1, 1), stride=(1, 1), bias=False)
                    (bn): BatchNorm2d(16, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                    (act): SiLU(inplace=True)
                  )
                )
              )
            )
          )
        )
        (dark3): Sequential(
          (0): DWConv(
            (dconv): BaseConv(
              (conv): Conv2d(32, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=32, bias=False)
              (bn): BatchNorm2d(32, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): SiLU(inplace=True)
            )
            (pconv): BaseConv(
              (conv): Conv2d(32, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): SiLU(inplace=True)
            )
          )
          (1): CSPLayer(
            (conv1): BaseConv(
              (conv): Conv2d(64, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (bn): BatchNorm2d(32, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): SiLU(inplace=True)
            )
            (conv2): BaseConv(
              (conv): Conv2d(64, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (bn): BatchNorm2d(32, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): SiLU(inplace=True)
            )
            (conv3): BaseConv(
              (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): SiLU(inplace=True)
            )
            (m): Sequential(
              (0): Bottleneck(
                (conv1): BaseConv(
                  (conv): Conv2d(32, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)
                  (bn): BatchNorm2d(32, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                  (act): SiLU(inplace=True)
                )
                (conv2): DWConv(
                  (dconv): BaseConv(
                    (conv): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False)
                    (bn): BatchNorm2d(32, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                    (act): SiLU(inplace=True)
                  )
                  (pconv): BaseConv(
                    (conv): Conv2d(32, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)
                    (bn): BatchNorm2d(32, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                    (act): SiLU(inplace=True)
                  )
                )
              )
              (1): Bottleneck(
                (conv1): BaseConv(
                  (conv): Conv2d(32, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)
                  (bn): BatchNorm2d(32, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                  (act): SiLU(inplace=True)
                )
                (conv2): DWConv(
                  (dconv): BaseConv(
                    (conv): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False)
                    (bn): BatchNorm2d(32, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                    (act): SiLU(inplace=True)
                  )
                  (pconv): BaseConv(
                    (conv): Conv2d(32, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)
                    (bn): BatchNorm2d(32, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                    (act): SiLU(inplace=True)
                  )
                )
              )
              (2): Bottleneck(
                (conv1): BaseConv(
                  (conv): Conv2d(32, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)
                  (bn): BatchNorm2d(32, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                  (act): SiLU(inplace=True)
                )
                (conv2): DWConv(
                  (dconv): BaseConv(
                    (conv): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False)
                    (bn): BatchNorm2d(32, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                    (act): SiLU(inplace=True)
                  )
                  (pconv): BaseConv(
                    (conv): Conv2d(32, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)
                    (bn): BatchNorm2d(32, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                    (act): SiLU(inplace=True)
                  )
                )
              )
            )
          )
        )
        (dark4): Sequential(
          (0): DWConv(
            (dconv): BaseConv(
              (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=64, bias=False)
              (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): SiLU(inplace=True)
            )
            (pconv): BaseConv(
              (conv): Conv2d(64, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (bn): BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): SiLU(inplace=True)
            )
          )
          (1): CSPLayer(
            (conv1): BaseConv(
              (conv): Conv2d(128, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): SiLU(inplace=True)
            )
            (conv2): BaseConv(
              (conv): Conv2d(128, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): SiLU(inplace=True)
            )
            (conv3): BaseConv(
              (conv): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (bn): BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): SiLU(inplace=True)
            )
            (m): Sequential(
              (0): Bottleneck(
                (conv1): BaseConv(
                  (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
                  (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                  (act): SiLU(inplace=True)
                )
                (conv2): DWConv(
                  (dconv): BaseConv(
                    (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=64, bias=False)
                    (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                    (act): SiLU(inplace=True)
                  )
                  (pconv): BaseConv(
                    (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
                    (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                    (act): SiLU(inplace=True)
                  )
                )
              )
              (1): Bottleneck(
                (conv1): BaseConv(
                  (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
                  (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                  (act): SiLU(inplace=True)
                )
                (conv2): DWConv(
                  (dconv): BaseConv(
                    (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=64, bias=False)
                    (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                    (act): SiLU(inplace=True)
                  )
                  (pconv): BaseConv(
                    (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
                    (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                    (act): SiLU(inplace=True)
                  )
                )
              )
              (2): Bottleneck(
                (conv1): BaseConv(
                  (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
                  (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                  (act): SiLU(inplace=True)
                )
                (conv2): DWConv(
                  (dconv): BaseConv(
                    (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=64, bias=False)
                    (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                    (act): SiLU(inplace=True)
                  )
                  (pconv): BaseConv(
                    (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
                    (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                    (act): SiLU(inplace=True)
                  )
                )
              )
            )
          )
        )
        (dark5): Sequential(
          (0): DWConv(
            (dconv): BaseConv(
              (conv): Conv2d(128, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=128, bias=False)
              (bn): BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): SiLU(inplace=True)
            )
            (pconv): BaseConv(
              (conv): Conv2d(128, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (bn): BatchNorm2d(256, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): SiLU(inplace=True)
            )
          )
          (1): SPPBottleneck(
            (conv1): BaseConv(
              (conv): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (bn): BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): SiLU(inplace=True)
            )
            (m): ModuleList(
              (0): MaxPool2d(kernel_size=5, stride=1, padding=2, dilation=1, ceil_mode=False)
              (1): MaxPool2d(kernel_size=9, stride=1, padding=4, dilation=1, ceil_mode=False)
              (2): MaxPool2d(kernel_size=13, stride=1, padding=6, dilation=1, ceil_mode=False)
            )
            (conv2): BaseConv(
              (conv): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (bn): BatchNorm2d(256, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): SiLU(inplace=True)
            )
          )
          (2): CSPLayer(
            (conv1): BaseConv(
              (conv): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (bn): BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): SiLU(inplace=True)
            )
            (conv2): BaseConv(
              (conv): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (bn): BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): SiLU(inplace=True)
            )
            (conv3): BaseConv(
              (conv): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (bn): BatchNorm2d(256, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): SiLU(inplace=True)
            )
            (m): Sequential(
              (0): Bottleneck(
                (conv1): BaseConv(
                  (conv): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
                  (bn): BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                  (act): SiLU(inplace=True)
                )
                (conv2): DWConv(
                  (dconv): BaseConv(
                    (conv): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=128, bias=False)
                    (bn): BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                    (act): SiLU(inplace=True)
                  )
                  (pconv): BaseConv(
                    (conv): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
                    (bn): BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                    (act): SiLU(inplace=True)
                  )
                )
              )
            )
          )
        )
      )
      (upsample): Upsample(scale_factor=2.0, mode=nearest)
      (lateral_conv0): BaseConv(
        (conv): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn): BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
        (act): SiLU(inplace=True)
      )
      (C3_p4): CSPLayer(
        (conv1): BaseConv(
          (conv): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
          (act): SiLU(inplace=True)
        )
        (conv2): BaseConv(
          (conv): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
          (act): SiLU(inplace=True)
        )
        (conv3): BaseConv(
          (conv): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn): BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
          (act): SiLU(inplace=True)
        )
        (m): Sequential(
          (0): Bottleneck(
            (conv1): BaseConv(
              (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): SiLU(inplace=True)
            )
            (conv2): DWConv(
              (dconv): BaseConv(
                (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=64, bias=False)
                (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                (act): SiLU(inplace=True)
              )
              (pconv): BaseConv(
                (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                (act): SiLU(inplace=True)
              )
            )
          )
        )
      )
      (reduce_conv1): BaseConv(
        (conv): Conv2d(128, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
        (act): SiLU(inplace=True)
      )
      (C3_p3): CSPLayer(
        (conv1): BaseConv(
          (conv): Conv2d(128, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn): BatchNorm2d(32, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
          (act): SiLU(inplace=True)
        )
        (conv2): BaseConv(
          (conv): Conv2d(128, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn): BatchNorm2d(32, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
          (act): SiLU(inplace=True)
        )
        (conv3): BaseConv(
          (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
          (act): SiLU(inplace=True)
        )
        (m): Sequential(
          (0): Bottleneck(
            (conv1): BaseConv(
              (conv): Conv2d(32, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (bn): BatchNorm2d(32, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): SiLU(inplace=True)
            )
            (conv2): DWConv(
              (dconv): BaseConv(
                (conv): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False)
                (bn): BatchNorm2d(32, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                (act): SiLU(inplace=True)
              )
              (pconv): BaseConv(
                (conv): Conv2d(32, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (bn): BatchNorm2d(32, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                (act): SiLU(inplace=True)
              )
            )
          )
        )
      )
      (bu_conv2): DWConv(
        (dconv): BaseConv(
          (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=64, bias=False)
          (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
          (act): SiLU(inplace=True)
        )
        (pconv): BaseConv(
          (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
          (act): SiLU(inplace=True)
        )
      )
      (C3_n3): CSPLayer(
        (conv1): BaseConv(
          (conv): Conv2d(128, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
          (act): SiLU(inplace=True)
        )
        (conv2): BaseConv(
          (conv): Conv2d(128, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
          (act): SiLU(inplace=True)
        )
        (conv3): BaseConv(
          (conv): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn): BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
          (act): SiLU(inplace=True)
        )
        (m): Sequential(
          (0): Bottleneck(
            (conv1): BaseConv(
              (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): SiLU(inplace=True)
            )
            (conv2): DWConv(
              (dconv): BaseConv(
                (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=64, bias=False)
                (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                (act): SiLU(inplace=True)
              )
              (pconv): BaseConv(
                (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                (act): SiLU(inplace=True)
              )
            )
          )
        )
      )
      (bu_conv1): DWConv(
        (dconv): BaseConv(
          (conv): Conv2d(128, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=128, bias=False)
          (bn): BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
          (act): SiLU(inplace=True)
        )
        (pconv): BaseConv(
          (conv): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn): BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
          (act): SiLU(inplace=True)
        )
      )
      (C3_n4): CSPLayer(
        (conv1): BaseConv(
          (conv): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn): BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
          (act): SiLU(inplace=True)
        )
        (conv2): BaseConv(
          (conv): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn): BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
          (act): SiLU(inplace=True)
        )
        (conv3): BaseConv(
          (conv): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn): BatchNorm2d(256, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
          (act): SiLU(inplace=True)
        )
        (m): Sequential(
          (0): Bottleneck(
            (conv1): BaseConv(
              (conv): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (bn): BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): SiLU(inplace=True)
            )
            (conv2): DWConv(
              (dconv): BaseConv(
                (conv): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=128, bias=False)
                (bn): BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                (act): SiLU(inplace=True)
              )
              (pconv): BaseConv(
                (conv): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (bn): BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                (act): SiLU(inplace=True)
              )
            )
          )
        )
      )
    )
    (head): YOLOXHead(
      (cls_convs): ModuleList(
        (0): Sequential(
          (0): DWConv(
            (dconv): BaseConv(
              (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=64, bias=False)
              (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): SiLU(inplace=True)
            )
            (pconv): BaseConv(
              (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): SiLU(inplace=True)
            )
          )
          (1): DWConv(
            (dconv): BaseConv(
              (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=64, bias=False)
              (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): SiLU(inplace=True)
            )
            (pconv): BaseConv(
              (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): SiLU(inplace=True)
            )
          )
        )
        (1): Sequential(
          (0): DWConv(
            (dconv): BaseConv(
              (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=64, bias=False)
              (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): SiLU(inplace=True)
            )
            (pconv): BaseConv(
              (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): SiLU(inplace=True)
            )
          )
          (1): DWConv(
            (dconv): BaseConv(
              (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=64, bias=False)
              (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): SiLU(inplace=True)
            )
            (pconv): BaseConv(
              (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): SiLU(inplace=True)
            )
          )
        )
        (2): Sequential(
          (0): DWConv(
            (dconv): BaseConv(
              (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=64, bias=False)
              (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): SiLU(inplace=True)
            )
            (pconv): BaseConv(
              (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): SiLU(inplace=True)
            )
          )
          (1): DWConv(
            (dconv): BaseConv(
              (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=64, bias=False)
              (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): SiLU(inplace=True)
            )
            (pconv): BaseConv(
              (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): SiLU(inplace=True)
            )
          )
        )
      )
      (reg_convs): ModuleList(
        (0): Sequential(
          (0): DWConv(
            (dconv): BaseConv(
              (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=64, bias=False)
              (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): SiLU(inplace=True)
            )
            (pconv): BaseConv(
              (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): SiLU(inplace=True)
            )
          )
          (1): DWConv(
            (dconv): BaseConv(
              (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=64, bias=False)
              (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): SiLU(inplace=True)
            )
            (pconv): BaseConv(
              (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): SiLU(inplace=True)
            )
          )
        )
        (1): Sequential(
          (0): DWConv(
            (dconv): BaseConv(
              (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=64, bias=False)
              (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): SiLU(inplace=True)
            )
            (pconv): BaseConv(
              (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): SiLU(inplace=True)
            )
          )
          (1): DWConv(
            (dconv): BaseConv(
              (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=64, bias=False)
              (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): SiLU(inplace=True)
            )
            (pconv): BaseConv(
              (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): SiLU(inplace=True)
            )
          )
        )
        (2): Sequential(
          (0): DWConv(
            (dconv): BaseConv(
              (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=64, bias=False)
              (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): SiLU(inplace=True)
            )
            (pconv): BaseConv(
              (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): SiLU(inplace=True)
            )
          )
          (1): DWConv(
            (dconv): BaseConv(
              (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=64, bias=False)
              (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): SiLU(inplace=True)
            )
            (pconv): BaseConv(
              (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): SiLU(inplace=True)
            )
          )
        )
      )
      (cls_preds): ModuleList(
        (0): Conv2d(64, 4, kernel_size=(1, 1), stride=(1, 1))
        (1): Conv2d(64, 4, kernel_size=(1, 1), stride=(1, 1))
        (2): Conv2d(64, 4, kernel_size=(1, 1), stride=(1, 1))
      )
      (reg_preds): ModuleList(
        (0): Conv2d(64, 4, kernel_size=(1, 1), stride=(1, 1))
        (1): Conv2d(64, 4, kernel_size=(1, 1), stride=(1, 1))
        (2): Conv2d(64, 4, kernel_size=(1, 1), stride=(1, 1))
      )
      (obj_preds): ModuleList(
        (0): Conv2d(64, 1, kernel_size=(1, 1), stride=(1, 1))
        (1): Conv2d(64, 1, kernel_size=(1, 1), stride=(1, 1))
        (2): Conv2d(64, 1, kernel_size=(1, 1), stride=(1, 1))
      )
      (stems): ModuleList(
        (0): BaseConv(
          (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
          (act): SiLU(inplace=True)
        )
        (1): BaseConv(
          (conv): Conv2d(128, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
          (act): SiLU(inplace=True)
        )
        (2): BaseConv(
          (conv): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
          (act): SiLU(inplace=True)
        )
      )
      (l1_loss): L1Loss()
      (bcewithlog_loss): BCEWithLogitsLoss()
      (iou_loss): IOUloss()
    )
  )
)
2022-12-23 16:17:28.281 | INFO     | yolox.core.trainer:before_epoch:203 - ---> start train epoch1
2022-12-23 16:17:30.242 | INFO     | yolox.core.trainer:after_train:195 - Training of experiment is done and the best AP is 0.00
2022-12-23 16:17:30.243 | ERROR    | yolox.core.launch:_distributed_worker:147 - An error has been caught in function '_distributed_worker', process 'SpawnProcess-1' (15622), thread 'MainThread' (140335297775424):
Traceback (most recent call last):

  File "<string>", line 1, in <module>
  File "/usr/lib/python3.8/multiprocessing/spawn.py", line 116, in spawn_main
    exitcode = _main(fd, parent_sentinel)
               │     │   └ 5
               │     └ 8
               └ <function _main at 0x7fa25b5cbee0>
  File "/usr/lib/python3.8/multiprocessing/spawn.py", line 129, in _main
    return self._bootstrap(parent_sentinel)
           │    │          └ 5
           │    └ <function BaseProcess._bootstrap at 0x7fa25b6ca9d0>
           └ <SpawnProcess name='SpawnProcess-1' parent=15573 started>
  File "/usr/lib/python3.8/multiprocessing/process.py", line 315, in _bootstrap
    self.run()
    │    └ <function BaseProcess.run at 0x7fa25b6ca040>
    └ <SpawnProcess name='SpawnProcess-1' parent=15573 started>
  File "/usr/lib/python3.8/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
    │    │        │    │        │    └ {}
    │    │        │    │        └ <SpawnProcess name='SpawnProcess-1' parent=15573 started>
    │    │        │    └ (<function _distributed_worker at 0x7fa1c1897040>, 0, (<function main at 0x7fa1b49c6700>, 2, 2, 0, 'nccl', 'tcp://127.0.0.1:4...
    │    │        └ <SpawnProcess name='SpawnProcess-1' parent=15573 started>
    │    └ <function _wrap at 0x7fa1c25778b0>
    └ <SpawnProcess name='SpawnProcess-1' parent=15573 started>

  File "/usr/local/lib/python3.8/dist-packages/torch/multiprocessing/spawn.py", line 69, in _wrap
    fn(i, *args)
    │  │   └ (<function main at 0x7fa1b49c6700>, 2, 2, 0, 'nccl', 'tcp://127.0.0.1:49845', (╒═══════════════════╤═════════════════════════...
    │  └ 0
    └ <function _distributed_worker at 0x7fa1c1897040>

> File "/root/YOLOX/yolox/core/launch.py", line 147, in _distributed_worker
    main_func(*args)
    │          └ (╒═══════════════════╤═══════════════════════════════════════════════════════════════════════════════════════════════════════...
    └ <function main at 0x7fa1b49c6700>

  File "/root/YOLOX/tools/train.py", line 118, in main
    trainer.train()
    │       └ <function Trainer.train at 0x7fa1b3fc8430>
    └ <yolox.core.trainer.Trainer object at 0x7fa1b3fdeca0>

  File "/root/YOLOX/yolox/core/trainer.py", line 76, in train
    self.train_in_epoch()
    │    └ <function Trainer.train_in_epoch at 0x7fa1b3fc8af0>
    └ <yolox.core.trainer.Trainer object at 0x7fa1b3fdeca0>

  File "/root/YOLOX/yolox/core/trainer.py", line 85, in train_in_epoch
    self.train_in_iter()
    │    └ <function Trainer.train_in_iter at 0x7fa1b3fc8b80>
    └ <yolox.core.trainer.Trainer object at 0x7fa1b3fdeca0>

  File "/root/YOLOX/yolox/core/trainer.py", line 91, in train_in_iter
    self.train_one_iter()
    │    └ <function Trainer.train_one_iter at 0x7fa1b3fc8c10>
    └ <yolox.core.trainer.Trainer object at 0x7fa1b3fdeca0>

  File "/root/YOLOX/yolox/core/trainer.py", line 105, in train_one_iter
    outputs = self.model(inps, targets)
              │    │     │     └ tensor([[[  0.0000, 196.2500, 161.2500,  19.5000,  35.0938],
              │    │     │                [  0.0000,   0.0000,   0.0000,   0.0000,   0.0000],
              │    │     │          ...
              │    │     └ tensor([[[[183., 183., 183.,  ..., 165., 165., 165.],
              │    │                 [183., 183., 183.,  ..., 162., 163., 166.],
              │    │                 [183., ...
              │    └ DistributedDataParallel(
              │        (module): YOLOX(
              │          (backbone): YOLOPAFPN(
              │            (backbone): CSPDarknet(
              │              (stem): Focus(
              │       ...
              └ <yolox.core.trainer.Trainer object at 0x7fa1b3fdeca0>

  File "/usr/local/lib/python3.8/dist-packages/torch/nn/modules/module.py", line 1190, in _call_impl
    return forward_call(*input, **kwargs)
           │             │        └ {}
           │             └ (tensor([[[[183., 183., 183.,  ..., 165., 165., 165.],
           │                         [183., 183., 183.,  ..., 162., 163., 166.],
           │                         [183.,...
           └ <bound method DistributedDataParallel.forward of DistributedDataParallel(
               (module): YOLOX(
                 (backbone): YOLOPAFPN(
                  ...

  File "/usr/local/lib/python3.8/dist-packages/torch/nn/parallel/distributed.py", line 1040, in forward
    output = self._run_ddp_forward(*inputs, **kwargs)
             │    │                 │         └ {}
             │    │                 └ (tensor([[[[183., 183., 183.,  ..., 165., 165., 165.],
             │    │                             [183., 183., 183.,  ..., 162., 163., 166.],
             │    │                             [183.,...
             │    └ <function DistributedDataParallel._run_ddp_forward at 0x7fa1c25d15e0>
             └ DistributedDataParallel(
                 (module): YOLOX(
                   (backbone): YOLOPAFPN(
                     (backbone): CSPDarknet(
                       (stem): Focus(
                ...

  File "/usr/local/lib/python3.8/dist-packages/torch/nn/parallel/distributed.py", line 1000, in _run_ddp_forward
    return module_to_run(*inputs[0], **kwargs[0])
           │              │            └ ({},)
           │              └ ((tensor([[[[183., 183., 183.,  ..., 165., 165., 165.],
           │                          [183., 183., 183.,  ..., 162., 163., 166.],
           │                          [183....
           └ YOLOX(
               (backbone): YOLOPAFPN(
                 (backbone): CSPDarknet(
                   (stem): Focus(
                     (conv): BaseConv(
                       (conv): ...

  File "/usr/local/lib/python3.8/dist-packages/torch/nn/modules/module.py", line 1190, in _call_impl
    return forward_call(*input, **kwargs)
           │             │        └ {}
           │             └ (tensor([[[[183., 183., 183.,  ..., 165., 165., 165.],
           │                         [183., 183., 183.,  ..., 162., 163., 166.],
           │                         [183.,...
           └ <bound method YOLOX.forward of YOLOX(
               (backbone): YOLOPAFPN(
                 (backbone): CSPDarknet(
                   (stem): Focus(
                     (conv...

  File "/root/YOLOX/yolox/models/yolox.py", line 34, in forward
    loss, iou_loss, conf_loss, cls_loss, l1_loss, num_fg = self.head(
                                                           └ YOLOX(
                                                               (backbone): YOLOPAFPN(
                                                                 (backbone): CSPDarknet(
                                                                   (stem): Focus(
                                                                     (conv): BaseConv(
                                                                       (conv): ...

  File "/usr/local/lib/python3.8/dist-packages/torch/nn/modules/module.py", line 1190, in _call_impl
    return forward_call(*input, **kwargs)
           │             │        └ {}
           │             └ ((tensor([[[[ 1.2783e+00, -2.7637e-01, -2.7808e-01,  ...,  1.6221e+00,
           │                          -2.7515e-01, -2.1777e-01],
           │                         [ 1.01...
           └ <bound method YOLOXHead.forward of YOLOXHead(
               (cls_convs): ModuleList(
                 (0): Sequential(
                   (0): DWConv(
                     (dco...

  File "/root/YOLOX/yolox/models/yolo_head.py", line 201, in forward
    torch.cat(outputs, 1),
    │     │   └ <unprintable list object>
    │     └ <built-in method cat of type object at 0x7fa239e30980>
    └ <module 'torch' from '/usr/local/lib/python3.8/dist-packages/torch/__init__.py'>

torch.cuda.OutOfMemoryError: CUDA out of memory. Tried to allocate 2.00 MiB (GPU 0; 7.79 GiB total capacity; 442.05 MiB already allocated; 2.50 MiB free; 6.72 GiB reserved in total by PyTorch) If reserved memory is >> allocated memory try setting max_split_size_mb to avoid fragmentation.  See documentation for Memory Management and PYTORCH_CUDA_ALLOC_CONF
2022-12-23 16:18:12.410 | INFO     | yolox.core.trainer:before_train:130 - args: Namespace(batch_size=8, cache=False, ckpt='/root/YOLOX/yolox_nano.pth', devices=2, dist_backend='nccl', dist_url=None, exp_file='/root/YOLOX/yolox_nano.py', experiment_name='yolox_nano', fp16=True, logger='tensorboard', machine_rank=0, name=None, num_machines=1, occupy=True, opts=[], resume=False, start_epoch=None)
2022-12-23 16:18:12.414 | INFO     | yolox.core.trainer:before_train:131 - exp value:
╒═══════════════════╤════════════════════════════════════════════════════════════╕
│ keys              │ values                                                     │
╞═══════════════════╪════════════════════════════════════════════════════════════╡
│ seed              │ None                                                       │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ output_dir        │ './YOLOX_outputs'                                          │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ print_interval    │ 10                                                         │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ eval_interval     │ 1                                                          │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ num_classes       │ 4                                                          │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ depth             │ 0.33                                                       │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ width             │ 0.25                                                       │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ act               │ 'silu'                                                     │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ data_num_workers  │ 4                                                          │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ input_size        │ (416, 416)                                                 │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ multiscale_range  │ 5                                                          │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ data_dir          │ '/root/ML/dataset/images'                                  │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ train_ann         │ '/root/ML/dataset/annotations/train_annotations.json'      │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ val_ann           │ '/root/ML/dataset/annotations/validation_annotations.json' │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ test_ann          │ 'instances_test2017.json'                                  │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ mosaic_prob       │ 0.5                                                        │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ mixup_prob        │ 1.0                                                        │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ hsv_prob          │ 1.0                                                        │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ flip_prob         │ 0.5                                                        │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ degrees           │ 10.0                                                       │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ translate         │ 0.1                                                        │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ mosaic_scale      │ (0.5, 1.5)                                                 │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ enable_mixup      │ False                                                      │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ mixup_scale       │ (0.5, 1.5)                                                 │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ shear             │ 2.0                                                        │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ warmup_epochs     │ 5                                                          │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ max_epoch         │ 20                                                         │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ warmup_lr         │ 0                                                          │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ min_lr_ratio      │ 0.05                                                       │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ basic_lr_per_img  │ 0.00015625                                                 │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ scheduler         │ 'yoloxwarmcos'                                             │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ no_aug_epochs     │ 15                                                         │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ ema               │ True                                                       │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ weight_decay      │ 0.0005                                                     │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ momentum          │ 0.9                                                        │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ save_history_ckpt │ True                                                       │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ exp_name          │ 'yolox_nano'                                               │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ test_size         │ (416, 416)                                                 │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ test_conf         │ 0.01                                                       │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ nmsthre           │ 0.65                                                       │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ random_size       │ (10, 20)                                                   │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ data_num_worker   │ 4                                                          │
╘═══════════════════╧════════════════════════════════════════════════════════════╛
2022-12-23 16:18:12.614 | INFO     | yolox.core.trainer:before_train:136 - Model Summary: Params: 0.90M, Gflops: 1.08
2022-12-23 16:18:12.635 | INFO     | yolox.core.trainer:resume_train:311 - loading checkpoint for fine tuning
2022-12-23 16:18:12.745 | WARNING  | yolox.utils.checkpoint:load_ckpt:24 - Shape of head.cls_preds.0.weight in checkpoint is torch.Size([80, 64, 1, 1]), while shape of head.cls_preds.0.weight in model is torch.Size([4, 64, 1, 1]).
2022-12-23 16:18:12.746 | WARNING  | yolox.utils.checkpoint:load_ckpt:24 - Shape of head.cls_preds.0.bias in checkpoint is torch.Size([80]), while shape of head.cls_preds.0.bias in model is torch.Size([4]).
2022-12-23 16:18:12.746 | WARNING  | yolox.utils.checkpoint:load_ckpt:24 - Shape of head.cls_preds.1.weight in checkpoint is torch.Size([80, 64, 1, 1]), while shape of head.cls_preds.1.weight in model is torch.Size([4, 64, 1, 1]).
2022-12-23 16:18:12.747 | WARNING  | yolox.utils.checkpoint:load_ckpt:24 - Shape of head.cls_preds.1.bias in checkpoint is torch.Size([80]), while shape of head.cls_preds.1.bias in model is torch.Size([4]).
2022-12-23 16:18:12.747 | WARNING  | yolox.utils.checkpoint:load_ckpt:24 - Shape of head.cls_preds.2.weight in checkpoint is torch.Size([80, 64, 1, 1]), while shape of head.cls_preds.2.weight in model is torch.Size([4, 64, 1, 1]).
2022-12-23 16:18:12.747 | WARNING  | yolox.utils.checkpoint:load_ckpt:24 - Shape of head.cls_preds.2.bias in checkpoint is torch.Size([80]), while shape of head.cls_preds.2.bias in model is torch.Size([4]).
2022-12-23 16:18:12.764 | INFO     | yolox.data.datasets.coco:__init__:64 - loading annotations into memory...
2022-12-23 16:18:12.765 | INFO     | yolox.data.datasets.coco:__init__:64 - Done (t=0.00s)
2022-12-23 16:18:12.765 | INFO     | pycocotools.coco:__init__:86 - creating index...
2022-12-23 16:18:12.766 | INFO     | pycocotools.coco:__init__:86 - index created!
2022-12-23 16:18:12.810 | INFO     | yolox.core.trainer:before_train:155 - init prefetcher, this might take one minute or less...
2022-12-23 16:18:23.397 | INFO     | yolox.data.datasets.coco:__init__:64 - loading annotations into memory...
2022-12-23 16:18:23.398 | INFO     | yolox.data.datasets.coco:__init__:64 - Done (t=0.00s)
2022-12-23 16:18:23.398 | INFO     | pycocotools.coco:__init__:86 - creating index...
2022-12-23 16:18:23.398 | INFO     | pycocotools.coco:__init__:86 - index created!
2022-12-23 16:18:23.402 | INFO     | yolox.core.trainer:before_train:191 - Training start...
2022-12-23 16:18:23.405 | INFO     | yolox.core.trainer:before_train:192 - 
DistributedDataParallel(
  (module): YOLOX(
    (backbone): YOLOPAFPN(
      (backbone): CSPDarknet(
        (stem): Focus(
          (conv): BaseConv(
            (conv): Conv2d(12, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn): BatchNorm2d(16, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
            (act): SiLU(inplace=True)
          )
        )
        (dark2): Sequential(
          (0): DWConv(
            (dconv): BaseConv(
              (conv): Conv2d(16, 16, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=16, bias=False)
              (bn): BatchNorm2d(16, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): SiLU(inplace=True)
            )
            (pconv): BaseConv(
              (conv): Conv2d(16, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (bn): BatchNorm2d(32, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): SiLU(inplace=True)
            )
          )
          (1): CSPLayer(
            (conv1): BaseConv(
              (conv): Conv2d(32, 16, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (bn): BatchNorm2d(16, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): SiLU(inplace=True)
            )
            (conv2): BaseConv(
              (conv): Conv2d(32, 16, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (bn): BatchNorm2d(16, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): SiLU(inplace=True)
            )
            (conv3): BaseConv(
              (conv): Conv2d(32, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (bn): BatchNorm2d(32, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): SiLU(inplace=True)
            )
            (m): Sequential(
              (0): Bottleneck(
                (conv1): BaseConv(
                  (conv): Conv2d(16, 16, kernel_size=(1, 1), stride=(1, 1), bias=False)
                  (bn): BatchNorm2d(16, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                  (act): SiLU(inplace=True)
                )
                (conv2): DWConv(
                  (dconv): BaseConv(
                    (conv): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=16, bias=False)
                    (bn): BatchNorm2d(16, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                    (act): SiLU(inplace=True)
                  )
                  (pconv): BaseConv(
                    (conv): Conv2d(16, 16, kernel_size=(1, 1), stride=(1, 1), bias=False)
                    (bn): BatchNorm2d(16, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                    (act): SiLU(inplace=True)
                  )
                )
              )
            )
          )
        )
        (dark3): Sequential(
          (0): DWConv(
            (dconv): BaseConv(
              (conv): Conv2d(32, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=32, bias=False)
              (bn): BatchNorm2d(32, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): SiLU(inplace=True)
            )
            (pconv): BaseConv(
              (conv): Conv2d(32, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): SiLU(inplace=True)
            )
          )
          (1): CSPLayer(
            (conv1): BaseConv(
              (conv): Conv2d(64, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (bn): BatchNorm2d(32, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): SiLU(inplace=True)
            )
            (conv2): BaseConv(
              (conv): Conv2d(64, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (bn): BatchNorm2d(32, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): SiLU(inplace=True)
            )
            (conv3): BaseConv(
              (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): SiLU(inplace=True)
            )
            (m): Sequential(
              (0): Bottleneck(
                (conv1): BaseConv(
                  (conv): Conv2d(32, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)
                  (bn): BatchNorm2d(32, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                  (act): SiLU(inplace=True)
                )
                (conv2): DWConv(
                  (dconv): BaseConv(
                    (conv): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False)
                    (bn): BatchNorm2d(32, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                    (act): SiLU(inplace=True)
                  )
                  (pconv): BaseConv(
                    (conv): Conv2d(32, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)
                    (bn): BatchNorm2d(32, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                    (act): SiLU(inplace=True)
                  )
                )
              )
              (1): Bottleneck(
                (conv1): BaseConv(
                  (conv): Conv2d(32, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)
                  (bn): BatchNorm2d(32, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                  (act): SiLU(inplace=True)
                )
                (conv2): DWConv(
                  (dconv): BaseConv(
                    (conv): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False)
                    (bn): BatchNorm2d(32, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                    (act): SiLU(inplace=True)
                  )
                  (pconv): BaseConv(
                    (conv): Conv2d(32, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)
                    (bn): BatchNorm2d(32, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                    (act): SiLU(inplace=True)
                  )
                )
              )
              (2): Bottleneck(
                (conv1): BaseConv(
                  (conv): Conv2d(32, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)
                  (bn): BatchNorm2d(32, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                  (act): SiLU(inplace=True)
                )
                (conv2): DWConv(
                  (dconv): BaseConv(
                    (conv): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False)
                    (bn): BatchNorm2d(32, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                    (act): SiLU(inplace=True)
                  )
                  (pconv): BaseConv(
                    (conv): Conv2d(32, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)
                    (bn): BatchNorm2d(32, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                    (act): SiLU(inplace=True)
                  )
                )
              )
            )
          )
        )
        (dark4): Sequential(
          (0): DWConv(
            (dconv): BaseConv(
              (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=64, bias=False)
              (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): SiLU(inplace=True)
            )
            (pconv): BaseConv(
              (conv): Conv2d(64, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (bn): BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): SiLU(inplace=True)
            )
          )
          (1): CSPLayer(
            (conv1): BaseConv(
              (conv): Conv2d(128, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): SiLU(inplace=True)
            )
            (conv2): BaseConv(
              (conv): Conv2d(128, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): SiLU(inplace=True)
            )
            (conv3): BaseConv(
              (conv): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (bn): BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): SiLU(inplace=True)
            )
            (m): Sequential(
              (0): Bottleneck(
                (conv1): BaseConv(
                  (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
                  (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                  (act): SiLU(inplace=True)
                )
                (conv2): DWConv(
                  (dconv): BaseConv(
                    (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=64, bias=False)
                    (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                    (act): SiLU(inplace=True)
                  )
                  (pconv): BaseConv(
                    (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
                    (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                    (act): SiLU(inplace=True)
                  )
                )
              )
              (1): Bottleneck(
                (conv1): BaseConv(
                  (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
                  (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                  (act): SiLU(inplace=True)
                )
                (conv2): DWConv(
                  (dconv): BaseConv(
                    (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=64, bias=False)
                    (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                    (act): SiLU(inplace=True)
                  )
                  (pconv): BaseConv(
                    (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
                    (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                    (act): SiLU(inplace=True)
                  )
                )
              )
              (2): Bottleneck(
                (conv1): BaseConv(
                  (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
                  (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                  (act): SiLU(inplace=True)
                )
                (conv2): DWConv(
                  (dconv): BaseConv(
                    (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=64, bias=False)
                    (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                    (act): SiLU(inplace=True)
                  )
                  (pconv): BaseConv(
                    (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
                    (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                    (act): SiLU(inplace=True)
                  )
                )
              )
            )
          )
        )
        (dark5): Sequential(
          (0): DWConv(
            (dconv): BaseConv(
              (conv): Conv2d(128, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=128, bias=False)
              (bn): BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): SiLU(inplace=True)
            )
            (pconv): BaseConv(
              (conv): Conv2d(128, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (bn): BatchNorm2d(256, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): SiLU(inplace=True)
            )
          )
          (1): SPPBottleneck(
            (conv1): BaseConv(
              (conv): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (bn): BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): SiLU(inplace=True)
            )
            (m): ModuleList(
              (0): MaxPool2d(kernel_size=5, stride=1, padding=2, dilation=1, ceil_mode=False)
              (1): MaxPool2d(kernel_size=9, stride=1, padding=4, dilation=1, ceil_mode=False)
              (2): MaxPool2d(kernel_size=13, stride=1, padding=6, dilation=1, ceil_mode=False)
            )
            (conv2): BaseConv(
              (conv): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (bn): BatchNorm2d(256, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): SiLU(inplace=True)
            )
          )
          (2): CSPLayer(
            (conv1): BaseConv(
              (conv): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (bn): BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): SiLU(inplace=True)
            )
            (conv2): BaseConv(
              (conv): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (bn): BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): SiLU(inplace=True)
            )
            (conv3): BaseConv(
              (conv): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (bn): BatchNorm2d(256, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): SiLU(inplace=True)
            )
            (m): Sequential(
              (0): Bottleneck(
                (conv1): BaseConv(
                  (conv): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
                  (bn): BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                  (act): SiLU(inplace=True)
                )
                (conv2): DWConv(
                  (dconv): BaseConv(
                    (conv): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=128, bias=False)
                    (bn): BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                    (act): SiLU(inplace=True)
                  )
                  (pconv): BaseConv(
                    (conv): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
                    (bn): BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                    (act): SiLU(inplace=True)
                  )
                )
              )
            )
          )
        )
      )
      (upsample): Upsample(scale_factor=2.0, mode=nearest)
      (lateral_conv0): BaseConv(
        (conv): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn): BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
        (act): SiLU(inplace=True)
      )
      (C3_p4): CSPLayer(
        (conv1): BaseConv(
          (conv): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
          (act): SiLU(inplace=True)
        )
        (conv2): BaseConv(
          (conv): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
          (act): SiLU(inplace=True)
        )
        (conv3): BaseConv(
          (conv): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn): BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
          (act): SiLU(inplace=True)
        )
        (m): Sequential(
          (0): Bottleneck(
            (conv1): BaseConv(
              (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): SiLU(inplace=True)
            )
            (conv2): DWConv(
              (dconv): BaseConv(
                (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=64, bias=False)
                (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                (act): SiLU(inplace=True)
              )
              (pconv): BaseConv(
                (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                (act): SiLU(inplace=True)
              )
            )
          )
        )
      )
      (reduce_conv1): BaseConv(
        (conv): Conv2d(128, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
        (act): SiLU(inplace=True)
      )
      (C3_p3): CSPLayer(
        (conv1): BaseConv(
          (conv): Conv2d(128, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn): BatchNorm2d(32, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
          (act): SiLU(inplace=True)
        )
        (conv2): BaseConv(
          (conv): Conv2d(128, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn): BatchNorm2d(32, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
          (act): SiLU(inplace=True)
        )
        (conv3): BaseConv(
          (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
          (act): SiLU(inplace=True)
        )
        (m): Sequential(
          (0): Bottleneck(
            (conv1): BaseConv(
              (conv): Conv2d(32, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (bn): BatchNorm2d(32, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): SiLU(inplace=True)
            )
            (conv2): DWConv(
              (dconv): BaseConv(
                (conv): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False)
                (bn): BatchNorm2d(32, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                (act): SiLU(inplace=True)
              )
              (pconv): BaseConv(
                (conv): Conv2d(32, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (bn): BatchNorm2d(32, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                (act): SiLU(inplace=True)
              )
            )
          )
        )
      )
      (bu_conv2): DWConv(
        (dconv): BaseConv(
          (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=64, bias=False)
          (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
          (act): SiLU(inplace=True)
        )
        (pconv): BaseConv(
          (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
          (act): SiLU(inplace=True)
        )
      )
      (C3_n3): CSPLayer(
        (conv1): BaseConv(
          (conv): Conv2d(128, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
          (act): SiLU(inplace=True)
        )
        (conv2): BaseConv(
          (conv): Conv2d(128, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
          (act): SiLU(inplace=True)
        )
        (conv3): BaseConv(
          (conv): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn): BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
          (act): SiLU(inplace=True)
        )
        (m): Sequential(
          (0): Bottleneck(
            (conv1): BaseConv(
              (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): SiLU(inplace=True)
            )
            (conv2): DWConv(
              (dconv): BaseConv(
                (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=64, bias=False)
                (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                (act): SiLU(inplace=True)
              )
              (pconv): BaseConv(
                (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                (act): SiLU(inplace=True)
              )
            )
          )
        )
      )
      (bu_conv1): DWConv(
        (dconv): BaseConv(
          (conv): Conv2d(128, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=128, bias=False)
          (bn): BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
          (act): SiLU(inplace=True)
        )
        (pconv): BaseConv(
          (conv): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn): BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
          (act): SiLU(inplace=True)
        )
      )
      (C3_n4): CSPLayer(
        (conv1): BaseConv(
          (conv): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn): BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
          (act): SiLU(inplace=True)
        )
        (conv2): BaseConv(
          (conv): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn): BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
          (act): SiLU(inplace=True)
        )
        (conv3): BaseConv(
          (conv): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn): BatchNorm2d(256, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
          (act): SiLU(inplace=True)
        )
        (m): Sequential(
          (0): Bottleneck(
            (conv1): BaseConv(
              (conv): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (bn): BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): SiLU(inplace=True)
            )
            (conv2): DWConv(
              (dconv): BaseConv(
                (conv): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=128, bias=False)
                (bn): BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                (act): SiLU(inplace=True)
              )
              (pconv): BaseConv(
                (conv): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (bn): BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                (act): SiLU(inplace=True)
              )
            )
          )
        )
      )
    )
    (head): YOLOXHead(
      (cls_convs): ModuleList(
        (0): Sequential(
          (0): DWConv(
            (dconv): BaseConv(
              (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=64, bias=False)
              (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): SiLU(inplace=True)
            )
            (pconv): BaseConv(
              (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): SiLU(inplace=True)
            )
          )
          (1): DWConv(
            (dconv): BaseConv(
              (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=64, bias=False)
              (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): SiLU(inplace=True)
            )
            (pconv): BaseConv(
              (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): SiLU(inplace=True)
            )
          )
        )
        (1): Sequential(
          (0): DWConv(
            (dconv): BaseConv(
              (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=64, bias=False)
              (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): SiLU(inplace=True)
            )
            (pconv): BaseConv(
              (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): SiLU(inplace=True)
            )
          )
          (1): DWConv(
            (dconv): BaseConv(
              (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=64, bias=False)
              (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): SiLU(inplace=True)
            )
            (pconv): BaseConv(
              (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): SiLU(inplace=True)
            )
          )
        )
        (2): Sequential(
          (0): DWConv(
            (dconv): BaseConv(
              (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=64, bias=False)
              (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): SiLU(inplace=True)
            )
            (pconv): BaseConv(
              (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): SiLU(inplace=True)
            )
          )
          (1): DWConv(
            (dconv): BaseConv(
              (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=64, bias=False)
              (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): SiLU(inplace=True)
            )
            (pconv): BaseConv(
              (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): SiLU(inplace=True)
            )
          )
        )
      )
      (reg_convs): ModuleList(
        (0): Sequential(
          (0): DWConv(
            (dconv): BaseConv(
              (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=64, bias=False)
              (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): SiLU(inplace=True)
            )
            (pconv): BaseConv(
              (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): SiLU(inplace=True)
            )
          )
          (1): DWConv(
            (dconv): BaseConv(
              (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=64, bias=False)
              (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): SiLU(inplace=True)
            )
            (pconv): BaseConv(
              (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): SiLU(inplace=True)
            )
          )
        )
        (1): Sequential(
          (0): DWConv(
            (dconv): BaseConv(
              (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=64, bias=False)
              (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): SiLU(inplace=True)
            )
            (pconv): BaseConv(
              (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): SiLU(inplace=True)
            )
          )
          (1): DWConv(
            (dconv): BaseConv(
              (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=64, bias=False)
              (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): SiLU(inplace=True)
            )
            (pconv): BaseConv(
              (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): SiLU(inplace=True)
            )
          )
        )
        (2): Sequential(
          (0): DWConv(
            (dconv): BaseConv(
              (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=64, bias=False)
              (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): SiLU(inplace=True)
            )
            (pconv): BaseConv(
              (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): SiLU(inplace=True)
            )
          )
          (1): DWConv(
            (dconv): BaseConv(
              (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=64, bias=False)
              (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): SiLU(inplace=True)
            )
            (pconv): BaseConv(
              (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): SiLU(inplace=True)
            )
          )
        )
      )
      (cls_preds): ModuleList(
        (0): Conv2d(64, 4, kernel_size=(1, 1), stride=(1, 1))
        (1): Conv2d(64, 4, kernel_size=(1, 1), stride=(1, 1))
        (2): Conv2d(64, 4, kernel_size=(1, 1), stride=(1, 1))
      )
      (reg_preds): ModuleList(
        (0): Conv2d(64, 4, kernel_size=(1, 1), stride=(1, 1))
        (1): Conv2d(64, 4, kernel_size=(1, 1), stride=(1, 1))
        (2): Conv2d(64, 4, kernel_size=(1, 1), stride=(1, 1))
      )
      (obj_preds): ModuleList(
        (0): Conv2d(64, 1, kernel_size=(1, 1), stride=(1, 1))
        (1): Conv2d(64, 1, kernel_size=(1, 1), stride=(1, 1))
        (2): Conv2d(64, 1, kernel_size=(1, 1), stride=(1, 1))
      )
      (stems): ModuleList(
        (0): BaseConv(
          (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
          (act): SiLU(inplace=True)
        )
        (1): BaseConv(
          (conv): Conv2d(128, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
          (act): SiLU(inplace=True)
        )
        (2): BaseConv(
          (conv): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
          (act): SiLU(inplace=True)
        )
      )
      (l1_loss): L1Loss()
      (bcewithlog_loss): BCEWithLogitsLoss()
      (iou_loss): IOUloss()
    )
  )
)
2022-12-23 16:18:23.405 | INFO     | yolox.core.trainer:before_epoch:203 - ---> start train epoch1
2022-12-23 16:18:25.394 | INFO     | yolox.core.trainer:after_train:195 - Training of experiment is done and the best AP is 0.00
2022-12-23 16:18:25.394 | ERROR    | yolox.core.launch:_distributed_worker:147 - An error has been caught in function '_distributed_worker', process 'SpawnProcess-1' (16753), thread 'MainThread' (139972181997376):
Traceback (most recent call last):

  File "<string>", line 1, in <module>
  File "/usr/lib/python3.8/multiprocessing/spawn.py", line 116, in spawn_main
    exitcode = _main(fd, parent_sentinel)
               │     │   └ 5
               │     └ 8
               └ <function _main at 0x7f4dcff9aee0>
  File "/usr/lib/python3.8/multiprocessing/spawn.py", line 129, in _main
    return self._bootstrap(parent_sentinel)
           │    │          └ 5
           │    └ <function BaseProcess._bootstrap at 0x7f4dd00999d0>
           └ <SpawnProcess name='SpawnProcess-1' parent=16709 started>
  File "/usr/lib/python3.8/multiprocessing/process.py", line 315, in _bootstrap
    self.run()
    │    └ <function BaseProcess.run at 0x7f4dd0099040>
    └ <SpawnProcess name='SpawnProcess-1' parent=16709 started>
  File "/usr/lib/python3.8/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
    │    │        │    │        │    └ {}
    │    │        │    │        └ <SpawnProcess name='SpawnProcess-1' parent=16709 started>
    │    │        │    └ (<function _distributed_worker at 0x7f4d36266040>, 0, (<function main at 0x7f4d2938b700>, 2, 2, 0, 'nccl', 'tcp://127.0.0.1:5...
    │    │        └ <SpawnProcess name='SpawnProcess-1' parent=16709 started>
    │    └ <function _wrap at 0x7f4d36f468b0>
    └ <SpawnProcess name='SpawnProcess-1' parent=16709 started>

  File "/usr/local/lib/python3.8/dist-packages/torch/multiprocessing/spawn.py", line 69, in _wrap
    fn(i, *args)
    │  │   └ (<function main at 0x7f4d2938b700>, 2, 2, 0, 'nccl', 'tcp://127.0.0.1:51153', (╒═══════════════════╤═════════════════════════...
    │  └ 0
    └ <function _distributed_worker at 0x7f4d36266040>

> File "/root/YOLOX/yolox/core/launch.py", line 147, in _distributed_worker
    main_func(*args)
    │          └ (╒═══════════════════╤═══════════════════════════════════════════════════════════════════════════════════════════════════════...
    └ <function main at 0x7f4d2938b700>

  File "/root/YOLOX/tools/train.py", line 118, in main
    trainer.train()
    │       └ <function Trainer.train at 0x7f4d28984430>
    └ <yolox.core.trainer.Trainer object at 0x7f4d2899bca0>

  File "/root/YOLOX/yolox/core/trainer.py", line 76, in train
    self.train_in_epoch()
    │    └ <function Trainer.train_in_epoch at 0x7f4d28984af0>
    └ <yolox.core.trainer.Trainer object at 0x7f4d2899bca0>

  File "/root/YOLOX/yolox/core/trainer.py", line 85, in train_in_epoch
    self.train_in_iter()
    │    └ <function Trainer.train_in_iter at 0x7f4d28984b80>
    └ <yolox.core.trainer.Trainer object at 0x7f4d2899bca0>

  File "/root/YOLOX/yolox/core/trainer.py", line 91, in train_in_iter
    self.train_one_iter()
    │    └ <function Trainer.train_one_iter at 0x7f4d28984c10>
    └ <yolox.core.trainer.Trainer object at 0x7f4d2899bca0>

  File "/root/YOLOX/yolox/core/trainer.py", line 110, in train_one_iter
    self.scaler.scale(loss).backward()
    │    │      │     └ tensor(18.5735, device='cuda:0', grad_fn=<AddBackward0>)
    │    │      └ <function GradScaler.scale at 0x7f4d3751e430>
    │    └ <torch.cuda.amp.grad_scaler.GradScaler object at 0x7f4d2899bd30>
    └ <yolox.core.trainer.Trainer object at 0x7f4d2899bca0>

  File "/usr/local/lib/python3.8/dist-packages/torch/_tensor.py", line 487, in backward
    torch.autograd.backward(
    │     │        └ <function backward at 0x7f4d37295280>
    │     └ <module 'torch.autograd' from '/usr/local/lib/python3.8/dist-packages/torch/autograd/__init__.py'>
    └ <module 'torch' from '/usr/local/lib/python3.8/dist-packages/torch/__init__.py'>

  File "/usr/local/lib/python3.8/dist-packages/torch/autograd/__init__.py", line 197, in backward
    Variable._execution_engine.run_backward(  # Calls into the C++ engine to run the backward pass
    │        │                 └ <method 'run_backward' of 'torch._C._EngineBase' objects>
    │        └ <torch._C._EngineBase object at 0x7f4d4f66dc60>
    └ <class 'torch.autograd.variable.Variable'>

RuntimeError: cuDNN error: CUDNN_STATUS_INTERNAL_ERROR
2022-12-23 16:18:48.672 | INFO     | yolox.core.trainer:before_train:130 - args: Namespace(batch_size=4, cache=False, ckpt='/root/YOLOX/yolox_nano.pth', devices=2, dist_backend='nccl', dist_url=None, exp_file='/root/YOLOX/yolox_nano.py', experiment_name='yolox_nano', fp16=True, logger='tensorboard', machine_rank=0, name=None, num_machines=1, occupy=True, opts=[], resume=False, start_epoch=None)
2022-12-23 16:18:48.676 | INFO     | yolox.core.trainer:before_train:131 - exp value:
╒═══════════════════╤════════════════════════════════════════════════════════════╕
│ keys              │ values                                                     │
╞═══════════════════╪════════════════════════════════════════════════════════════╡
│ seed              │ None                                                       │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ output_dir        │ './YOLOX_outputs'                                          │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ print_interval    │ 10                                                         │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ eval_interval     │ 1                                                          │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ num_classes       │ 4                                                          │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ depth             │ 0.33                                                       │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ width             │ 0.25                                                       │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ act               │ 'silu'                                                     │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ data_num_workers  │ 4                                                          │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ input_size        │ (416, 416)                                                 │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ multiscale_range  │ 5                                                          │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ data_dir          │ '/root/ML/dataset/images'                                  │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ train_ann         │ '/root/ML/dataset/annotations/train_annotations.json'      │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ val_ann           │ '/root/ML/dataset/annotations/validation_annotations.json' │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ test_ann          │ 'instances_test2017.json'                                  │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ mosaic_prob       │ 0.5                                                        │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ mixup_prob        │ 1.0                                                        │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ hsv_prob          │ 1.0                                                        │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ flip_prob         │ 0.5                                                        │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ degrees           │ 10.0                                                       │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ translate         │ 0.1                                                        │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ mosaic_scale      │ (0.5, 1.5)                                                 │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ enable_mixup      │ False                                                      │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ mixup_scale       │ (0.5, 1.5)                                                 │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ shear             │ 2.0                                                        │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ warmup_epochs     │ 5                                                          │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ max_epoch         │ 20                                                         │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ warmup_lr         │ 0                                                          │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ min_lr_ratio      │ 0.05                                                       │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ basic_lr_per_img  │ 0.00015625                                                 │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ scheduler         │ 'yoloxwarmcos'                                             │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ no_aug_epochs     │ 15                                                         │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ ema               │ True                                                       │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ weight_decay      │ 0.0005                                                     │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ momentum          │ 0.9                                                        │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ save_history_ckpt │ True                                                       │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ exp_name          │ 'yolox_nano'                                               │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ test_size         │ (416, 416)                                                 │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ test_conf         │ 0.01                                                       │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ nmsthre           │ 0.65                                                       │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ random_size       │ (10, 20)                                                   │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ data_num_worker   │ 4                                                          │
╘═══════════════════╧════════════════════════════════════════════════════════════╛
2022-12-23 16:18:48.892 | INFO     | yolox.core.trainer:before_train:136 - Model Summary: Params: 0.90M, Gflops: 1.08
2022-12-23 16:18:48.909 | INFO     | yolox.core.trainer:resume_train:311 - loading checkpoint for fine tuning
2022-12-23 16:18:49.022 | WARNING  | yolox.utils.checkpoint:load_ckpt:24 - Shape of head.cls_preds.0.weight in checkpoint is torch.Size([80, 64, 1, 1]), while shape of head.cls_preds.0.weight in model is torch.Size([4, 64, 1, 1]).
2022-12-23 16:18:49.022 | WARNING  | yolox.utils.checkpoint:load_ckpt:24 - Shape of head.cls_preds.0.bias in checkpoint is torch.Size([80]), while shape of head.cls_preds.0.bias in model is torch.Size([4]).
2022-12-23 16:18:49.023 | WARNING  | yolox.utils.checkpoint:load_ckpt:24 - Shape of head.cls_preds.1.weight in checkpoint is torch.Size([80, 64, 1, 1]), while shape of head.cls_preds.1.weight in model is torch.Size([4, 64, 1, 1]).
2022-12-23 16:18:49.023 | WARNING  | yolox.utils.checkpoint:load_ckpt:24 - Shape of head.cls_preds.1.bias in checkpoint is torch.Size([80]), while shape of head.cls_preds.1.bias in model is torch.Size([4]).
2022-12-23 16:18:49.023 | WARNING  | yolox.utils.checkpoint:load_ckpt:24 - Shape of head.cls_preds.2.weight in checkpoint is torch.Size([80, 64, 1, 1]), while shape of head.cls_preds.2.weight in model is torch.Size([4, 64, 1, 1]).
2022-12-23 16:18:49.023 | WARNING  | yolox.utils.checkpoint:load_ckpt:24 - Shape of head.cls_preds.2.bias in checkpoint is torch.Size([80]), while shape of head.cls_preds.2.bias in model is torch.Size([4]).
2022-12-23 16:18:49.040 | INFO     | yolox.data.datasets.coco:__init__:64 - loading annotations into memory...
2022-12-23 16:18:49.041 | INFO     | yolox.data.datasets.coco:__init__:64 - Done (t=0.00s)
2022-12-23 16:18:49.041 | INFO     | pycocotools.coco:__init__:86 - creating index...
2022-12-23 16:18:49.041 | INFO     | pycocotools.coco:__init__:86 - index created!
2022-12-23 16:18:49.052 | INFO     | yolox.core.trainer:before_train:155 - init prefetcher, this might take one minute or less...
2022-12-23 16:18:59.751 | INFO     | yolox.data.datasets.coco:__init__:64 - loading annotations into memory...
2022-12-23 16:18:59.752 | INFO     | yolox.data.datasets.coco:__init__:64 - Done (t=0.00s)
2022-12-23 16:18:59.752 | INFO     | pycocotools.coco:__init__:86 - creating index...
2022-12-23 16:18:59.752 | INFO     | pycocotools.coco:__init__:86 - index created!
2022-12-23 16:18:59.756 | INFO     | yolox.core.trainer:before_train:191 - Training start...
2022-12-23 16:18:59.759 | INFO     | yolox.core.trainer:before_train:192 - 
DistributedDataParallel(
  (module): YOLOX(
    (backbone): YOLOPAFPN(
      (backbone): CSPDarknet(
        (stem): Focus(
          (conv): BaseConv(
            (conv): Conv2d(12, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn): BatchNorm2d(16, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
            (act): SiLU(inplace=True)
          )
        )
        (dark2): Sequential(
          (0): DWConv(
            (dconv): BaseConv(
              (conv): Conv2d(16, 16, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=16, bias=False)
              (bn): BatchNorm2d(16, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): SiLU(inplace=True)
            )
            (pconv): BaseConv(
              (conv): Conv2d(16, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (bn): BatchNorm2d(32, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): SiLU(inplace=True)
            )
          )
          (1): CSPLayer(
            (conv1): BaseConv(
              (conv): Conv2d(32, 16, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (bn): BatchNorm2d(16, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): SiLU(inplace=True)
            )
            (conv2): BaseConv(
              (conv): Conv2d(32, 16, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (bn): BatchNorm2d(16, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): SiLU(inplace=True)
            )
            (conv3): BaseConv(
              (conv): Conv2d(32, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (bn): BatchNorm2d(32, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): SiLU(inplace=True)
            )
            (m): Sequential(
              (0): Bottleneck(
                (conv1): BaseConv(
                  (conv): Conv2d(16, 16, kernel_size=(1, 1), stride=(1, 1), bias=False)
                  (bn): BatchNorm2d(16, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                  (act): SiLU(inplace=True)
                )
                (conv2): DWConv(
                  (dconv): BaseConv(
                    (conv): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=16, bias=False)
                    (bn): BatchNorm2d(16, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                    (act): SiLU(inplace=True)
                  )
                  (pconv): BaseConv(
                    (conv): Conv2d(16, 16, kernel_size=(1, 1), stride=(1, 1), bias=False)
                    (bn): BatchNorm2d(16, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                    (act): SiLU(inplace=True)
                  )
                )
              )
            )
          )
        )
        (dark3): Sequential(
          (0): DWConv(
            (dconv): BaseConv(
              (conv): Conv2d(32, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=32, bias=False)
              (bn): BatchNorm2d(32, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): SiLU(inplace=True)
            )
            (pconv): BaseConv(
              (conv): Conv2d(32, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): SiLU(inplace=True)
            )
          )
          (1): CSPLayer(
            (conv1): BaseConv(
              (conv): Conv2d(64, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (bn): BatchNorm2d(32, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): SiLU(inplace=True)
            )
            (conv2): BaseConv(
              (conv): Conv2d(64, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (bn): BatchNorm2d(32, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): SiLU(inplace=True)
            )
            (conv3): BaseConv(
              (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): SiLU(inplace=True)
            )
            (m): Sequential(
              (0): Bottleneck(
                (conv1): BaseConv(
                  (conv): Conv2d(32, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)
                  (bn): BatchNorm2d(32, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                  (act): SiLU(inplace=True)
                )
                (conv2): DWConv(
                  (dconv): BaseConv(
                    (conv): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False)
                    (bn): BatchNorm2d(32, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                    (act): SiLU(inplace=True)
                  )
                  (pconv): BaseConv(
                    (conv): Conv2d(32, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)
                    (bn): BatchNorm2d(32, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                    (act): SiLU(inplace=True)
                  )
                )
              )
              (1): Bottleneck(
                (conv1): BaseConv(
                  (conv): Conv2d(32, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)
                  (bn): BatchNorm2d(32, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                  (act): SiLU(inplace=True)
                )
                (conv2): DWConv(
                  (dconv): BaseConv(
                    (conv): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False)
                    (bn): BatchNorm2d(32, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                    (act): SiLU(inplace=True)
                  )
                  (pconv): BaseConv(
                    (conv): Conv2d(32, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)
                    (bn): BatchNorm2d(32, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                    (act): SiLU(inplace=True)
                  )
                )
              )
              (2): Bottleneck(
                (conv1): BaseConv(
                  (conv): Conv2d(32, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)
                  (bn): BatchNorm2d(32, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                  (act): SiLU(inplace=True)
                )
                (conv2): DWConv(
                  (dconv): BaseConv(
                    (conv): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False)
                    (bn): BatchNorm2d(32, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                    (act): SiLU(inplace=True)
                  )
                  (pconv): BaseConv(
                    (conv): Conv2d(32, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)
                    (bn): BatchNorm2d(32, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                    (act): SiLU(inplace=True)
                  )
                )
              )
            )
          )
        )
        (dark4): Sequential(
          (0): DWConv(
            (dconv): BaseConv(
              (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=64, bias=False)
              (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): SiLU(inplace=True)
            )
            (pconv): BaseConv(
              (conv): Conv2d(64, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (bn): BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): SiLU(inplace=True)
            )
          )
          (1): CSPLayer(
            (conv1): BaseConv(
              (conv): Conv2d(128, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): SiLU(inplace=True)
            )
            (conv2): BaseConv(
              (conv): Conv2d(128, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): SiLU(inplace=True)
            )
            (conv3): BaseConv(
              (conv): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (bn): BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): SiLU(inplace=True)
            )
            (m): Sequential(
              (0): Bottleneck(
                (conv1): BaseConv(
                  (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
                  (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                  (act): SiLU(inplace=True)
                )
                (conv2): DWConv(
                  (dconv): BaseConv(
                    (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=64, bias=False)
                    (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                    (act): SiLU(inplace=True)
                  )
                  (pconv): BaseConv(
                    (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
                    (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                    (act): SiLU(inplace=True)
                  )
                )
              )
              (1): Bottleneck(
                (conv1): BaseConv(
                  (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
                  (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                  (act): SiLU(inplace=True)
                )
                (conv2): DWConv(
                  (dconv): BaseConv(
                    (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=64, bias=False)
                    (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                    (act): SiLU(inplace=True)
                  )
                  (pconv): BaseConv(
                    (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
                    (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                    (act): SiLU(inplace=True)
                  )
                )
              )
              (2): Bottleneck(
                (conv1): BaseConv(
                  (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
                  (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                  (act): SiLU(inplace=True)
                )
                (conv2): DWConv(
                  (dconv): BaseConv(
                    (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=64, bias=False)
                    (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                    (act): SiLU(inplace=True)
                  )
                  (pconv): BaseConv(
                    (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
                    (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                    (act): SiLU(inplace=True)
                  )
                )
              )
            )
          )
        )
        (dark5): Sequential(
          (0): DWConv(
            (dconv): BaseConv(
              (conv): Conv2d(128, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=128, bias=False)
              (bn): BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): SiLU(inplace=True)
            )
            (pconv): BaseConv(
              (conv): Conv2d(128, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (bn): BatchNorm2d(256, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): SiLU(inplace=True)
            )
          )
          (1): SPPBottleneck(
            (conv1): BaseConv(
              (conv): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (bn): BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): SiLU(inplace=True)
            )
            (m): ModuleList(
              (0): MaxPool2d(kernel_size=5, stride=1, padding=2, dilation=1, ceil_mode=False)
              (1): MaxPool2d(kernel_size=9, stride=1, padding=4, dilation=1, ceil_mode=False)
              (2): MaxPool2d(kernel_size=13, stride=1, padding=6, dilation=1, ceil_mode=False)
            )
            (conv2): BaseConv(
              (conv): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (bn): BatchNorm2d(256, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): SiLU(inplace=True)
            )
          )
          (2): CSPLayer(
            (conv1): BaseConv(
              (conv): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (bn): BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): SiLU(inplace=True)
            )
            (conv2): BaseConv(
              (conv): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (bn): BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): SiLU(inplace=True)
            )
            (conv3): BaseConv(
              (conv): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (bn): BatchNorm2d(256, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): SiLU(inplace=True)
            )
            (m): Sequential(
              (0): Bottleneck(
                (conv1): BaseConv(
                  (conv): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
                  (bn): BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                  (act): SiLU(inplace=True)
                )
                (conv2): DWConv(
                  (dconv): BaseConv(
                    (conv): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=128, bias=False)
                    (bn): BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                    (act): SiLU(inplace=True)
                  )
                  (pconv): BaseConv(
                    (conv): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
                    (bn): BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                    (act): SiLU(inplace=True)
                  )
                )
              )
            )
          )
        )
      )
      (upsample): Upsample(scale_factor=2.0, mode=nearest)
      (lateral_conv0): BaseConv(
        (conv): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn): BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
        (act): SiLU(inplace=True)
      )
      (C3_p4): CSPLayer(
        (conv1): BaseConv(
          (conv): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
          (act): SiLU(inplace=True)
        )
        (conv2): BaseConv(
          (conv): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
          (act): SiLU(inplace=True)
        )
        (conv3): BaseConv(
          (conv): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn): BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
          (act): SiLU(inplace=True)
        )
        (m): Sequential(
          (0): Bottleneck(
            (conv1): BaseConv(
              (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): SiLU(inplace=True)
            )
            (conv2): DWConv(
              (dconv): BaseConv(
                (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=64, bias=False)
                (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                (act): SiLU(inplace=True)
              )
              (pconv): BaseConv(
                (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                (act): SiLU(inplace=True)
              )
            )
          )
        )
      )
      (reduce_conv1): BaseConv(
        (conv): Conv2d(128, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
        (act): SiLU(inplace=True)
      )
      (C3_p3): CSPLayer(
        (conv1): BaseConv(
          (conv): Conv2d(128, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn): BatchNorm2d(32, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
          (act): SiLU(inplace=True)
        )
        (conv2): BaseConv(
          (conv): Conv2d(128, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn): BatchNorm2d(32, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
          (act): SiLU(inplace=True)
        )
        (conv3): BaseConv(
          (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
          (act): SiLU(inplace=True)
        )
        (m): Sequential(
          (0): Bottleneck(
            (conv1): BaseConv(
              (conv): Conv2d(32, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (bn): BatchNorm2d(32, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): SiLU(inplace=True)
            )
            (conv2): DWConv(
              (dconv): BaseConv(
                (conv): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False)
                (bn): BatchNorm2d(32, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                (act): SiLU(inplace=True)
              )
              (pconv): BaseConv(
                (conv): Conv2d(32, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (bn): BatchNorm2d(32, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                (act): SiLU(inplace=True)
              )
            )
          )
        )
      )
      (bu_conv2): DWConv(
        (dconv): BaseConv(
          (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=64, bias=False)
          (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
          (act): SiLU(inplace=True)
        )
        (pconv): BaseConv(
          (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
          (act): SiLU(inplace=True)
        )
      )
      (C3_n3): CSPLayer(
        (conv1): BaseConv(
          (conv): Conv2d(128, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
          (act): SiLU(inplace=True)
        )
        (conv2): BaseConv(
          (conv): Conv2d(128, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
          (act): SiLU(inplace=True)
        )
        (conv3): BaseConv(
          (conv): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn): BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
          (act): SiLU(inplace=True)
        )
        (m): Sequential(
          (0): Bottleneck(
            (conv1): BaseConv(
              (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): SiLU(inplace=True)
            )
            (conv2): DWConv(
              (dconv): BaseConv(
                (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=64, bias=False)
                (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                (act): SiLU(inplace=True)
              )
              (pconv): BaseConv(
                (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                (act): SiLU(inplace=True)
              )
            )
          )
        )
      )
      (bu_conv1): DWConv(
        (dconv): BaseConv(
          (conv): Conv2d(128, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=128, bias=False)
          (bn): BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
          (act): SiLU(inplace=True)
        )
        (pconv): BaseConv(
          (conv): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn): BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
          (act): SiLU(inplace=True)
        )
      )
      (C3_n4): CSPLayer(
        (conv1): BaseConv(
          (conv): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn): BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
          (act): SiLU(inplace=True)
        )
        (conv2): BaseConv(
          (conv): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn): BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
          (act): SiLU(inplace=True)
        )
        (conv3): BaseConv(
          (conv): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn): BatchNorm2d(256, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
          (act): SiLU(inplace=True)
        )
        (m): Sequential(
          (0): Bottleneck(
            (conv1): BaseConv(
              (conv): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (bn): BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): SiLU(inplace=True)
            )
            (conv2): DWConv(
              (dconv): BaseConv(
                (conv): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=128, bias=False)
                (bn): BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                (act): SiLU(inplace=True)
              )
              (pconv): BaseConv(
                (conv): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (bn): BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                (act): SiLU(inplace=True)
              )
            )
          )
        )
      )
    )
    (head): YOLOXHead(
      (cls_convs): ModuleList(
        (0): Sequential(
          (0): DWConv(
            (dconv): BaseConv(
              (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=64, bias=False)
              (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): SiLU(inplace=True)
            )
            (pconv): BaseConv(
              (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): SiLU(inplace=True)
            )
          )
          (1): DWConv(
            (dconv): BaseConv(
              (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=64, bias=False)
              (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): SiLU(inplace=True)
            )
            (pconv): BaseConv(
              (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): SiLU(inplace=True)
            )
          )
        )
        (1): Sequential(
          (0): DWConv(
            (dconv): BaseConv(
              (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=64, bias=False)
              (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): SiLU(inplace=True)
            )
            (pconv): BaseConv(
              (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): SiLU(inplace=True)
            )
          )
          (1): DWConv(
            (dconv): BaseConv(
              (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=64, bias=False)
              (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): SiLU(inplace=True)
            )
            (pconv): BaseConv(
              (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): SiLU(inplace=True)
            )
          )
        )
        (2): Sequential(
          (0): DWConv(
            (dconv): BaseConv(
              (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=64, bias=False)
              (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): SiLU(inplace=True)
            )
            (pconv): BaseConv(
              (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): SiLU(inplace=True)
            )
          )
          (1): DWConv(
            (dconv): BaseConv(
              (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=64, bias=False)
              (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): SiLU(inplace=True)
            )
            (pconv): BaseConv(
              (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): SiLU(inplace=True)
            )
          )
        )
      )
      (reg_convs): ModuleList(
        (0): Sequential(
          (0): DWConv(
            (dconv): BaseConv(
              (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=64, bias=False)
              (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): SiLU(inplace=True)
            )
            (pconv): BaseConv(
              (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): SiLU(inplace=True)
            )
          )
          (1): DWConv(
            (dconv): BaseConv(
              (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=64, bias=False)
              (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): SiLU(inplace=True)
            )
            (pconv): BaseConv(
              (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): SiLU(inplace=True)
            )
          )
        )
        (1): Sequential(
          (0): DWConv(
            (dconv): BaseConv(
              (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=64, bias=False)
              (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): SiLU(inplace=True)
            )
            (pconv): BaseConv(
              (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): SiLU(inplace=True)
            )
          )
          (1): DWConv(
            (dconv): BaseConv(
              (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=64, bias=False)
              (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): SiLU(inplace=True)
            )
            (pconv): BaseConv(
              (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): SiLU(inplace=True)
            )
          )
        )
        (2): Sequential(
          (0): DWConv(
            (dconv): BaseConv(
              (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=64, bias=False)
              (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): SiLU(inplace=True)
            )
            (pconv): BaseConv(
              (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): SiLU(inplace=True)
            )
          )
          (1): DWConv(
            (dconv): BaseConv(
              (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=64, bias=False)
              (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): SiLU(inplace=True)
            )
            (pconv): BaseConv(
              (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): SiLU(inplace=True)
            )
          )
        )
      )
      (cls_preds): ModuleList(
        (0): Conv2d(64, 4, kernel_size=(1, 1), stride=(1, 1))
        (1): Conv2d(64, 4, kernel_size=(1, 1), stride=(1, 1))
        (2): Conv2d(64, 4, kernel_size=(1, 1), stride=(1, 1))
      )
      (reg_preds): ModuleList(
        (0): Conv2d(64, 4, kernel_size=(1, 1), stride=(1, 1))
        (1): Conv2d(64, 4, kernel_size=(1, 1), stride=(1, 1))
        (2): Conv2d(64, 4, kernel_size=(1, 1), stride=(1, 1))
      )
      (obj_preds): ModuleList(
        (0): Conv2d(64, 1, kernel_size=(1, 1), stride=(1, 1))
        (1): Conv2d(64, 1, kernel_size=(1, 1), stride=(1, 1))
        (2): Conv2d(64, 1, kernel_size=(1, 1), stride=(1, 1))
      )
      (stems): ModuleList(
        (0): BaseConv(
          (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
          (act): SiLU(inplace=True)
        )
        (1): BaseConv(
          (conv): Conv2d(128, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
          (act): SiLU(inplace=True)
        )
        (2): BaseConv(
          (conv): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
          (act): SiLU(inplace=True)
        )
      )
      (l1_loss): L1Loss()
      (bcewithlog_loss): BCEWithLogitsLoss()
      (iou_loss): IOUloss()
    )
  )
)
2022-12-23 16:18:59.760 | INFO     | yolox.core.trainer:before_epoch:203 - ---> start train epoch1
2022-12-23 16:19:01.572 | INFO     | yolox.core.trainer:after_train:195 - Training of experiment is done and the best AP is 0.00
2022-12-23 16:19:01.572 | ERROR    | yolox.core.launch:_distributed_worker:147 - An error has been caught in function '_distributed_worker', process 'SpawnProcess-1' (17610), thread 'MainThread' (140306699335488):
Traceback (most recent call last):

  File "<string>", line 1, in <module>
  File "/usr/lib/python3.8/multiprocessing/spawn.py", line 116, in spawn_main
    exitcode = _main(fd, parent_sentinel)
               │     │   └ 5
               │     └ 8
               └ <function _main at 0x7f9bb2c32ee0>
  File "/usr/lib/python3.8/multiprocessing/spawn.py", line 129, in _main
    return self._bootstrap(parent_sentinel)
           │    │          └ 5
           │    └ <function BaseProcess._bootstrap at 0x7f9bb2d319d0>
           └ <SpawnProcess name='SpawnProcess-1' parent=17563 started>
  File "/usr/lib/python3.8/multiprocessing/process.py", line 315, in _bootstrap
    self.run()
    │    └ <function BaseProcess.run at 0x7f9bb2d31040>
    └ <SpawnProcess name='SpawnProcess-1' parent=17563 started>
  File "/usr/lib/python3.8/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
    │    │        │    │        │    └ {}
    │    │        │    │        └ <SpawnProcess name='SpawnProcess-1' parent=17563 started>
    │    │        │    └ (<function _distributed_worker at 0x7f9b18efe040>, 0, (<function main at 0x7f9b0c02d700>, 2, 2, 0, 'nccl', 'tcp://127.0.0.1:3...
    │    │        └ <SpawnProcess name='SpawnProcess-1' parent=17563 started>
    │    └ <function _wrap at 0x7f9b19bdf8b0>
    └ <SpawnProcess name='SpawnProcess-1' parent=17563 started>

  File "/usr/local/lib/python3.8/dist-packages/torch/multiprocessing/spawn.py", line 69, in _wrap
    fn(i, *args)
    │  │   └ (<function main at 0x7f9b0c02d700>, 2, 2, 0, 'nccl', 'tcp://127.0.0.1:33929', (╒═══════════════════╤═════════════════════════...
    │  └ 0
    └ <function _distributed_worker at 0x7f9b18efe040>

> File "/root/YOLOX/yolox/core/launch.py", line 147, in _distributed_worker
    main_func(*args)
    │          └ (╒═══════════════════╤═══════════════════════════════════════════════════════════════════════════════════════════════════════...
    └ <function main at 0x7f9b0c02d700>

  File "/root/YOLOX/tools/train.py", line 118, in main
    trainer.train()
    │       └ <function Trainer.train at 0x7f9b0b62f430>
    └ <yolox.core.trainer.Trainer object at 0x7f9b0b646ca0>

  File "/root/YOLOX/yolox/core/trainer.py", line 76, in train
    self.train_in_epoch()
    │    └ <function Trainer.train_in_epoch at 0x7f9b0b62faf0>
    └ <yolox.core.trainer.Trainer object at 0x7f9b0b646ca0>

  File "/root/YOLOX/yolox/core/trainer.py", line 85, in train_in_epoch
    self.train_in_iter()
    │    └ <function Trainer.train_in_iter at 0x7f9b0b62fb80>
    └ <yolox.core.trainer.Trainer object at 0x7f9b0b646ca0>

  File "/root/YOLOX/yolox/core/trainer.py", line 91, in train_in_iter
    self.train_one_iter()
    │    └ <function Trainer.train_one_iter at 0x7f9b0b62fc10>
    └ <yolox.core.trainer.Trainer object at 0x7f9b0b646ca0>

  File "/root/YOLOX/yolox/core/trainer.py", line 110, in train_one_iter
    self.scaler.scale(loss).backward()
    │    │      │     └ tensor(13.4917, device='cuda:0', grad_fn=<AddBackward0>)
    │    │      └ <function GradScaler.scale at 0x7f9b1a1b8430>
    │    └ <torch.cuda.amp.grad_scaler.GradScaler object at 0x7f9b0b646d30>
    └ <yolox.core.trainer.Trainer object at 0x7f9b0b646ca0>

  File "/usr/local/lib/python3.8/dist-packages/torch/_tensor.py", line 487, in backward
    torch.autograd.backward(
    │     │        └ <function backward at 0x7f9b19f2e280>
    │     └ <module 'torch.autograd' from '/usr/local/lib/python3.8/dist-packages/torch/autograd/__init__.py'>
    └ <module 'torch' from '/usr/local/lib/python3.8/dist-packages/torch/__init__.py'>

  File "/usr/local/lib/python3.8/dist-packages/torch/autograd/__init__.py", line 197, in backward
    Variable._execution_engine.run_backward(  # Calls into the C++ engine to run the backward pass
    │        │                 └ <method 'run_backward' of 'torch._C._EngineBase' objects>
    │        └ <torch._C._EngineBase object at 0x7f9b3230ac60>
    └ <class 'torch.autograd.variable.Variable'>

RuntimeError: cuDNN error: CUDNN_STATUS_NOT_INITIALIZED
2022-12-23 16:19:21.356 | INFO     | yolox.core.trainer:before_train:130 - args: Namespace(batch_size=2, cache=False, ckpt='/root/YOLOX/yolox_nano.pth', devices=2, dist_backend='nccl', dist_url=None, exp_file='/root/YOLOX/yolox_nano.py', experiment_name='yolox_nano', fp16=True, logger='tensorboard', machine_rank=0, name=None, num_machines=1, occupy=True, opts=[], resume=False, start_epoch=None)
2022-12-23 16:19:21.358 | INFO     | yolox.core.trainer:before_train:131 - exp value:
╒═══════════════════╤════════════════════════════════════════════════════════════╕
│ keys              │ values                                                     │
╞═══════════════════╪════════════════════════════════════════════════════════════╡
│ seed              │ None                                                       │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ output_dir        │ './YOLOX_outputs'                                          │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ print_interval    │ 10                                                         │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ eval_interval     │ 1                                                          │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ num_classes       │ 4                                                          │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ depth             │ 0.33                                                       │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ width             │ 0.25                                                       │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ act               │ 'silu'                                                     │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ data_num_workers  │ 4                                                          │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ input_size        │ (416, 416)                                                 │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ multiscale_range  │ 5                                                          │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ data_dir          │ '/root/ML/dataset/images'                                  │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ train_ann         │ '/root/ML/dataset/annotations/train_annotations.json'      │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ val_ann           │ '/root/ML/dataset/annotations/validation_annotations.json' │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ test_ann          │ 'instances_test2017.json'                                  │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ mosaic_prob       │ 0.5                                                        │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ mixup_prob        │ 1.0                                                        │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ hsv_prob          │ 1.0                                                        │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ flip_prob         │ 0.5                                                        │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ degrees           │ 10.0                                                       │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ translate         │ 0.1                                                        │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ mosaic_scale      │ (0.5, 1.5)                                                 │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ enable_mixup      │ False                                                      │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ mixup_scale       │ (0.5, 1.5)                                                 │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ shear             │ 2.0                                                        │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ warmup_epochs     │ 5                                                          │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ max_epoch         │ 20                                                         │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ warmup_lr         │ 0                                                          │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ min_lr_ratio      │ 0.05                                                       │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ basic_lr_per_img  │ 0.00015625                                                 │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ scheduler         │ 'yoloxwarmcos'                                             │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ no_aug_epochs     │ 15                                                         │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ ema               │ True                                                       │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ weight_decay      │ 0.0005                                                     │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ momentum          │ 0.9                                                        │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ save_history_ckpt │ True                                                       │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ exp_name          │ 'yolox_nano'                                               │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ test_size         │ (416, 416)                                                 │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ test_conf         │ 0.01                                                       │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ nmsthre           │ 0.65                                                       │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ random_size       │ (10, 20)                                                   │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ data_num_worker   │ 4                                                          │
╘═══════════════════╧════════════════════════════════════════════════════════════╛
2022-12-23 16:19:21.537 | INFO     | yolox.core.trainer:before_train:136 - Model Summary: Params: 0.90M, Gflops: 1.08
2022-12-23 16:19:21.555 | INFO     | yolox.core.trainer:resume_train:311 - loading checkpoint for fine tuning
2022-12-23 16:19:21.663 | WARNING  | yolox.utils.checkpoint:load_ckpt:24 - Shape of head.cls_preds.0.weight in checkpoint is torch.Size([80, 64, 1, 1]), while shape of head.cls_preds.0.weight in model is torch.Size([4, 64, 1, 1]).
2022-12-23 16:19:21.663 | WARNING  | yolox.utils.checkpoint:load_ckpt:24 - Shape of head.cls_preds.0.bias in checkpoint is torch.Size([80]), while shape of head.cls_preds.0.bias in model is torch.Size([4]).
2022-12-23 16:19:21.663 | WARNING  | yolox.utils.checkpoint:load_ckpt:24 - Shape of head.cls_preds.1.weight in checkpoint is torch.Size([80, 64, 1, 1]), while shape of head.cls_preds.1.weight in model is torch.Size([4, 64, 1, 1]).
2022-12-23 16:19:21.664 | WARNING  | yolox.utils.checkpoint:load_ckpt:24 - Shape of head.cls_preds.1.bias in checkpoint is torch.Size([80]), while shape of head.cls_preds.1.bias in model is torch.Size([4]).
2022-12-23 16:19:21.664 | WARNING  | yolox.utils.checkpoint:load_ckpt:24 - Shape of head.cls_preds.2.weight in checkpoint is torch.Size([80, 64, 1, 1]), while shape of head.cls_preds.2.weight in model is torch.Size([4, 64, 1, 1]).
2022-12-23 16:19:21.664 | WARNING  | yolox.utils.checkpoint:load_ckpt:24 - Shape of head.cls_preds.2.bias in checkpoint is torch.Size([80]), while shape of head.cls_preds.2.bias in model is torch.Size([4]).
2022-12-23 16:19:21.678 | INFO     | yolox.data.datasets.coco:__init__:64 - loading annotations into memory...
2022-12-23 16:19:21.679 | INFO     | yolox.data.datasets.coco:__init__:64 - Done (t=0.00s)
2022-12-23 16:19:21.680 | INFO     | pycocotools.coco:__init__:86 - creating index...
2022-12-23 16:19:21.680 | INFO     | pycocotools.coco:__init__:86 - index created!
2022-12-23 16:19:21.692 | INFO     | yolox.core.trainer:before_train:155 - init prefetcher, this might take one minute or less...
2022-12-23 16:19:31.773 | INFO     | yolox.data.datasets.coco:__init__:64 - loading annotations into memory...
2022-12-23 16:19:31.774 | INFO     | yolox.data.datasets.coco:__init__:64 - Done (t=0.00s)
2022-12-23 16:19:31.774 | INFO     | pycocotools.coco:__init__:86 - creating index...
2022-12-23 16:19:31.775 | INFO     | pycocotools.coco:__init__:86 - index created!
2022-12-23 16:19:31.782 | INFO     | yolox.core.trainer:before_train:191 - Training start...
2022-12-23 16:19:31.786 | INFO     | yolox.core.trainer:before_train:192 - 
DistributedDataParallel(
  (module): YOLOX(
    (backbone): YOLOPAFPN(
      (backbone): CSPDarknet(
        (stem): Focus(
          (conv): BaseConv(
            (conv): Conv2d(12, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn): BatchNorm2d(16, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
            (act): SiLU(inplace=True)
          )
        )
        (dark2): Sequential(
          (0): DWConv(
            (dconv): BaseConv(
              (conv): Conv2d(16, 16, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=16, bias=False)
              (bn): BatchNorm2d(16, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): SiLU(inplace=True)
            )
            (pconv): BaseConv(
              (conv): Conv2d(16, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (bn): BatchNorm2d(32, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): SiLU(inplace=True)
            )
          )
          (1): CSPLayer(
            (conv1): BaseConv(
              (conv): Conv2d(32, 16, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (bn): BatchNorm2d(16, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): SiLU(inplace=True)
            )
            (conv2): BaseConv(
              (conv): Conv2d(32, 16, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (bn): BatchNorm2d(16, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): SiLU(inplace=True)
            )
            (conv3): BaseConv(
              (conv): Conv2d(32, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (bn): BatchNorm2d(32, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): SiLU(inplace=True)
            )
            (m): Sequential(
              (0): Bottleneck(
                (conv1): BaseConv(
                  (conv): Conv2d(16, 16, kernel_size=(1, 1), stride=(1, 1), bias=False)
                  (bn): BatchNorm2d(16, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                  (act): SiLU(inplace=True)
                )
                (conv2): DWConv(
                  (dconv): BaseConv(
                    (conv): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=16, bias=False)
                    (bn): BatchNorm2d(16, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                    (act): SiLU(inplace=True)
                  )
                  (pconv): BaseConv(
                    (conv): Conv2d(16, 16, kernel_size=(1, 1), stride=(1, 1), bias=False)
                    (bn): BatchNorm2d(16, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                    (act): SiLU(inplace=True)
                  )
                )
              )
            )
          )
        )
        (dark3): Sequential(
          (0): DWConv(
            (dconv): BaseConv(
              (conv): Conv2d(32, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=32, bias=False)
              (bn): BatchNorm2d(32, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): SiLU(inplace=True)
            )
            (pconv): BaseConv(
              (conv): Conv2d(32, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): SiLU(inplace=True)
            )
          )
          (1): CSPLayer(
            (conv1): BaseConv(
              (conv): Conv2d(64, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (bn): BatchNorm2d(32, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): SiLU(inplace=True)
            )
            (conv2): BaseConv(
              (conv): Conv2d(64, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (bn): BatchNorm2d(32, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): SiLU(inplace=True)
            )
            (conv3): BaseConv(
              (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): SiLU(inplace=True)
            )
            (m): Sequential(
              (0): Bottleneck(
                (conv1): BaseConv(
                  (conv): Conv2d(32, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)
                  (bn): BatchNorm2d(32, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                  (act): SiLU(inplace=True)
                )
                (conv2): DWConv(
                  (dconv): BaseConv(
                    (conv): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False)
                    (bn): BatchNorm2d(32, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                    (act): SiLU(inplace=True)
                  )
                  (pconv): BaseConv(
                    (conv): Conv2d(32, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)
                    (bn): BatchNorm2d(32, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                    (act): SiLU(inplace=True)
                  )
                )
              )
              (1): Bottleneck(
                (conv1): BaseConv(
                  (conv): Conv2d(32, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)
                  (bn): BatchNorm2d(32, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                  (act): SiLU(inplace=True)
                )
                (conv2): DWConv(
                  (dconv): BaseConv(
                    (conv): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False)
                    (bn): BatchNorm2d(32, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                    (act): SiLU(inplace=True)
                  )
                  (pconv): BaseConv(
                    (conv): Conv2d(32, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)
                    (bn): BatchNorm2d(32, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                    (act): SiLU(inplace=True)
                  )
                )
              )
              (2): Bottleneck(
                (conv1): BaseConv(
                  (conv): Conv2d(32, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)
                  (bn): BatchNorm2d(32, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                  (act): SiLU(inplace=True)
                )
                (conv2): DWConv(
                  (dconv): BaseConv(
                    (conv): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False)
                    (bn): BatchNorm2d(32, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                    (act): SiLU(inplace=True)
                  )
                  (pconv): BaseConv(
                    (conv): Conv2d(32, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)
                    (bn): BatchNorm2d(32, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                    (act): SiLU(inplace=True)
                  )
                )
              )
            )
          )
        )
        (dark4): Sequential(
          (0): DWConv(
            (dconv): BaseConv(
              (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=64, bias=False)
              (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): SiLU(inplace=True)
            )
            (pconv): BaseConv(
              (conv): Conv2d(64, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (bn): BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): SiLU(inplace=True)
            )
          )
          (1): CSPLayer(
            (conv1): BaseConv(
              (conv): Conv2d(128, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): SiLU(inplace=True)
            )
            (conv2): BaseConv(
              (conv): Conv2d(128, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): SiLU(inplace=True)
            )
            (conv3): BaseConv(
              (conv): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (bn): BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): SiLU(inplace=True)
            )
            (m): Sequential(
              (0): Bottleneck(
                (conv1): BaseConv(
                  (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
                  (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                  (act): SiLU(inplace=True)
                )
                (conv2): DWConv(
                  (dconv): BaseConv(
                    (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=64, bias=False)
                    (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                    (act): SiLU(inplace=True)
                  )
                  (pconv): BaseConv(
                    (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
                    (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                    (act): SiLU(inplace=True)
                  )
                )
              )
              (1): Bottleneck(
                (conv1): BaseConv(
                  (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
                  (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                  (act): SiLU(inplace=True)
                )
                (conv2): DWConv(
                  (dconv): BaseConv(
                    (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=64, bias=False)
                    (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                    (act): SiLU(inplace=True)
                  )
                  (pconv): BaseConv(
                    (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
                    (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                    (act): SiLU(inplace=True)
                  )
                )
              )
              (2): Bottleneck(
                (conv1): BaseConv(
                  (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
                  (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                  (act): SiLU(inplace=True)
                )
                (conv2): DWConv(
                  (dconv): BaseConv(
                    (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=64, bias=False)
                    (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                    (act): SiLU(inplace=True)
                  )
                  (pconv): BaseConv(
                    (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
                    (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                    (act): SiLU(inplace=True)
                  )
                )
              )
            )
          )
        )
        (dark5): Sequential(
          (0): DWConv(
            (dconv): BaseConv(
              (conv): Conv2d(128, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=128, bias=False)
              (bn): BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): SiLU(inplace=True)
            )
            (pconv): BaseConv(
              (conv): Conv2d(128, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (bn): BatchNorm2d(256, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): SiLU(inplace=True)
            )
          )
          (1): SPPBottleneck(
            (conv1): BaseConv(
              (conv): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (bn): BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): SiLU(inplace=True)
            )
            (m): ModuleList(
              (0): MaxPool2d(kernel_size=5, stride=1, padding=2, dilation=1, ceil_mode=False)
              (1): MaxPool2d(kernel_size=9, stride=1, padding=4, dilation=1, ceil_mode=False)
              (2): MaxPool2d(kernel_size=13, stride=1, padding=6, dilation=1, ceil_mode=False)
            )
            (conv2): BaseConv(
              (conv): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (bn): BatchNorm2d(256, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): SiLU(inplace=True)
            )
          )
          (2): CSPLayer(
            (conv1): BaseConv(
              (conv): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (bn): BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): SiLU(inplace=True)
            )
            (conv2): BaseConv(
              (conv): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (bn): BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): SiLU(inplace=True)
            )
            (conv3): BaseConv(
              (conv): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (bn): BatchNorm2d(256, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): SiLU(inplace=True)
            )
            (m): Sequential(
              (0): Bottleneck(
                (conv1): BaseConv(
                  (conv): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
                  (bn): BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                  (act): SiLU(inplace=True)
                )
                (conv2): DWConv(
                  (dconv): BaseConv(
                    (conv): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=128, bias=False)
                    (bn): BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                    (act): SiLU(inplace=True)
                  )
                  (pconv): BaseConv(
                    (conv): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
                    (bn): BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                    (act): SiLU(inplace=True)
                  )
                )
              )
            )
          )
        )
      )
      (upsample): Upsample(scale_factor=2.0, mode=nearest)
      (lateral_conv0): BaseConv(
        (conv): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn): BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
        (act): SiLU(inplace=True)
      )
      (C3_p4): CSPLayer(
        (conv1): BaseConv(
          (conv): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
          (act): SiLU(inplace=True)
        )
        (conv2): BaseConv(
          (conv): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
          (act): SiLU(inplace=True)
        )
        (conv3): BaseConv(
          (conv): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn): BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
          (act): SiLU(inplace=True)
        )
        (m): Sequential(
          (0): Bottleneck(
            (conv1): BaseConv(
              (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): SiLU(inplace=True)
            )
            (conv2): DWConv(
              (dconv): BaseConv(
                (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=64, bias=False)
                (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                (act): SiLU(inplace=True)
              )
              (pconv): BaseConv(
                (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                (act): SiLU(inplace=True)
              )
            )
          )
        )
      )
      (reduce_conv1): BaseConv(
        (conv): Conv2d(128, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
        (act): SiLU(inplace=True)
      )
      (C3_p3): CSPLayer(
        (conv1): BaseConv(
          (conv): Conv2d(128, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn): BatchNorm2d(32, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
          (act): SiLU(inplace=True)
        )
        (conv2): BaseConv(
          (conv): Conv2d(128, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn): BatchNorm2d(32, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
          (act): SiLU(inplace=True)
        )
        (conv3): BaseConv(
          (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
          (act): SiLU(inplace=True)
        )
        (m): Sequential(
          (0): Bottleneck(
            (conv1): BaseConv(
              (conv): Conv2d(32, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (bn): BatchNorm2d(32, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): SiLU(inplace=True)
            )
            (conv2): DWConv(
              (dconv): BaseConv(
                (conv): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False)
                (bn): BatchNorm2d(32, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                (act): SiLU(inplace=True)
              )
              (pconv): BaseConv(
                (conv): Conv2d(32, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (bn): BatchNorm2d(32, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                (act): SiLU(inplace=True)
              )
            )
          )
        )
      )
      (bu_conv2): DWConv(
        (dconv): BaseConv(
          (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=64, bias=False)
          (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
          (act): SiLU(inplace=True)
        )
        (pconv): BaseConv(
          (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
          (act): SiLU(inplace=True)
        )
      )
      (C3_n3): CSPLayer(
        (conv1): BaseConv(
          (conv): Conv2d(128, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
          (act): SiLU(inplace=True)
        )
        (conv2): BaseConv(
          (conv): Conv2d(128, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
          (act): SiLU(inplace=True)
        )
        (conv3): BaseConv(
          (conv): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn): BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
          (act): SiLU(inplace=True)
        )
        (m): Sequential(
          (0): Bottleneck(
            (conv1): BaseConv(
              (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): SiLU(inplace=True)
            )
            (conv2): DWConv(
              (dconv): BaseConv(
                (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=64, bias=False)
                (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                (act): SiLU(inplace=True)
              )
              (pconv): BaseConv(
                (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                (act): SiLU(inplace=True)
              )
            )
          )
        )
      )
      (bu_conv1): DWConv(
        (dconv): BaseConv(
          (conv): Conv2d(128, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=128, bias=False)
          (bn): BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
          (act): SiLU(inplace=True)
        )
        (pconv): BaseConv(
          (conv): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn): BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
          (act): SiLU(inplace=True)
        )
      )
      (C3_n4): CSPLayer(
        (conv1): BaseConv(
          (conv): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn): BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
          (act): SiLU(inplace=True)
        )
        (conv2): BaseConv(
          (conv): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn): BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
          (act): SiLU(inplace=True)
        )
        (conv3): BaseConv(
          (conv): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn): BatchNorm2d(256, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
          (act): SiLU(inplace=True)
        )
        (m): Sequential(
          (0): Bottleneck(
            (conv1): BaseConv(
              (conv): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (bn): BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): SiLU(inplace=True)
            )
            (conv2): DWConv(
              (dconv): BaseConv(
                (conv): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=128, bias=False)
                (bn): BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                (act): SiLU(inplace=True)
              )
              (pconv): BaseConv(
                (conv): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (bn): BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                (act): SiLU(inplace=True)
              )
            )
          )
        )
      )
    )
    (head): YOLOXHead(
      (cls_convs): ModuleList(
        (0): Sequential(
          (0): DWConv(
            (dconv): BaseConv(
              (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=64, bias=False)
              (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): SiLU(inplace=True)
            )
            (pconv): BaseConv(
              (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): SiLU(inplace=True)
            )
          )
          (1): DWConv(
            (dconv): BaseConv(
              (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=64, bias=False)
              (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): SiLU(inplace=True)
            )
            (pconv): BaseConv(
              (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): SiLU(inplace=True)
            )
          )
        )
        (1): Sequential(
          (0): DWConv(
            (dconv): BaseConv(
              (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=64, bias=False)
              (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): SiLU(inplace=True)
            )
            (pconv): BaseConv(
              (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): SiLU(inplace=True)
            )
          )
          (1): DWConv(
            (dconv): BaseConv(
              (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=64, bias=False)
              (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): SiLU(inplace=True)
            )
            (pconv): BaseConv(
              (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): SiLU(inplace=True)
            )
          )
        )
        (2): Sequential(
          (0): DWConv(
            (dconv): BaseConv(
              (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=64, bias=False)
              (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): SiLU(inplace=True)
            )
            (pconv): BaseConv(
              (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): SiLU(inplace=True)
            )
          )
          (1): DWConv(
            (dconv): BaseConv(
              (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=64, bias=False)
              (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): SiLU(inplace=True)
            )
            (pconv): BaseConv(
              (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): SiLU(inplace=True)
            )
          )
        )
      )
      (reg_convs): ModuleList(
        (0): Sequential(
          (0): DWConv(
            (dconv): BaseConv(
              (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=64, bias=False)
              (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): SiLU(inplace=True)
            )
            (pconv): BaseConv(
              (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): SiLU(inplace=True)
            )
          )
          (1): DWConv(
            (dconv): BaseConv(
              (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=64, bias=False)
              (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): SiLU(inplace=True)
            )
            (pconv): BaseConv(
              (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): SiLU(inplace=True)
            )
          )
        )
        (1): Sequential(
          (0): DWConv(
            (dconv): BaseConv(
              (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=64, bias=False)
              (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): SiLU(inplace=True)
            )
            (pconv): BaseConv(
              (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): SiLU(inplace=True)
            )
          )
          (1): DWConv(
            (dconv): BaseConv(
              (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=64, bias=False)
              (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): SiLU(inplace=True)
            )
            (pconv): BaseConv(
              (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): SiLU(inplace=True)
            )
          )
        )
        (2): Sequential(
          (0): DWConv(
            (dconv): BaseConv(
              (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=64, bias=False)
              (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): SiLU(inplace=True)
            )
            (pconv): BaseConv(
              (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): SiLU(inplace=True)
            )
          )
          (1): DWConv(
            (dconv): BaseConv(
              (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=64, bias=False)
              (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): SiLU(inplace=True)
            )
            (pconv): BaseConv(
              (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): SiLU(inplace=True)
            )
          )
        )
      )
      (cls_preds): ModuleList(
        (0): Conv2d(64, 4, kernel_size=(1, 1), stride=(1, 1))
        (1): Conv2d(64, 4, kernel_size=(1, 1), stride=(1, 1))
        (2): Conv2d(64, 4, kernel_size=(1, 1), stride=(1, 1))
      )
      (reg_preds): ModuleList(
        (0): Conv2d(64, 4, kernel_size=(1, 1), stride=(1, 1))
        (1): Conv2d(64, 4, kernel_size=(1, 1), stride=(1, 1))
        (2): Conv2d(64, 4, kernel_size=(1, 1), stride=(1, 1))
      )
      (obj_preds): ModuleList(
        (0): Conv2d(64, 1, kernel_size=(1, 1), stride=(1, 1))
        (1): Conv2d(64, 1, kernel_size=(1, 1), stride=(1, 1))
        (2): Conv2d(64, 1, kernel_size=(1, 1), stride=(1, 1))
      )
      (stems): ModuleList(
        (0): BaseConv(
          (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
          (act): SiLU(inplace=True)
        )
        (1): BaseConv(
          (conv): Conv2d(128, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
          (act): SiLU(inplace=True)
        )
        (2): BaseConv(
          (conv): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
          (act): SiLU(inplace=True)
        )
      )
      (l1_loss): L1Loss()
      (bcewithlog_loss): BCEWithLogitsLoss()
      (iou_loss): IOUloss()
    )
  )
)
2022-12-23 16:19:31.787 | INFO     | yolox.core.trainer:before_epoch:203 - ---> start train epoch1
2022-12-23 16:19:34.254 | INFO     | yolox.core.trainer:after_train:195 - Training of experiment is done and the best AP is 0.00
2022-12-23 16:19:34.254 | ERROR    | yolox.core.launch:_distributed_worker:147 - An error has been caught in function '_distributed_worker', process 'SpawnProcess-1' (18427), thread 'MainThread' (140141501982528):
Traceback (most recent call last):

  File "<string>", line 1, in <module>
  File "/usr/lib/python3.8/multiprocessing/spawn.py", line 116, in spawn_main
    exitcode = _main(fd, parent_sentinel)
               │     │   └ 5
               │     └ 8
               └ <function _main at 0x7f753c3b9ee0>
  File "/usr/lib/python3.8/multiprocessing/spawn.py", line 129, in _main
    return self._bootstrap(parent_sentinel)
           │    │          └ 5
           │    └ <function BaseProcess._bootstrap at 0x7f753c4b89d0>
           └ <SpawnProcess name='SpawnProcess-1' parent=18379 started>
  File "/usr/lib/python3.8/multiprocessing/process.py", line 315, in _bootstrap
    self.run()
    │    └ <function BaseProcess.run at 0x7f753c4b8040>
    └ <SpawnProcess name='SpawnProcess-1' parent=18379 started>
  File "/usr/lib/python3.8/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
    │    │        │    │        │    └ {}
    │    │        │    │        └ <SpawnProcess name='SpawnProcess-1' parent=18379 started>
    │    │        │    └ (<function _distributed_worker at 0x7f74a2685040>, 0, (<function main at 0x7f74957b4700>, 2, 2, 0, 'nccl', 'tcp://127.0.0.1:5...
    │    │        └ <SpawnProcess name='SpawnProcess-1' parent=18379 started>
    │    └ <function _wrap at 0x7f74a33648b0>
    └ <SpawnProcess name='SpawnProcess-1' parent=18379 started>

  File "/usr/local/lib/python3.8/dist-packages/torch/multiprocessing/spawn.py", line 69, in _wrap
    fn(i, *args)
    │  │   └ (<function main at 0x7f74957b4700>, 2, 2, 0, 'nccl', 'tcp://127.0.0.1:55851', (╒═══════════════════╤═════════════════════════...
    │  └ 0
    └ <function _distributed_worker at 0x7f74a2685040>

> File "/root/YOLOX/yolox/core/launch.py", line 147, in _distributed_worker
    main_func(*args)
    │          └ (╒═══════════════════╤═══════════════════════════════════════════════════════════════════════════════════════════════════════...
    └ <function main at 0x7f74957b4700>

  File "/root/YOLOX/tools/train.py", line 118, in main
    trainer.train()
    │       └ <function Trainer.train at 0x7f7494db6430>
    └ <yolox.core.trainer.Trainer object at 0x7f7494dcdca0>

  File "/root/YOLOX/yolox/core/trainer.py", line 76, in train
    self.train_in_epoch()
    │    └ <function Trainer.train_in_epoch at 0x7f7494db6af0>
    └ <yolox.core.trainer.Trainer object at 0x7f7494dcdca0>

  File "/root/YOLOX/yolox/core/trainer.py", line 85, in train_in_epoch
    self.train_in_iter()
    │    └ <function Trainer.train_in_iter at 0x7f7494db6b80>
    └ <yolox.core.trainer.Trainer object at 0x7f7494dcdca0>

  File "/root/YOLOX/yolox/core/trainer.py", line 91, in train_in_iter
    self.train_one_iter()
    │    └ <function Trainer.train_one_iter at 0x7f7494db6c10>
    └ <yolox.core.trainer.Trainer object at 0x7f7494dcdca0>

  File "/root/YOLOX/yolox/core/trainer.py", line 105, in train_one_iter
    outputs = self.model(inps, targets)
              │    │     │     └ tensor([[[  1.0000, 254.1250, 286.0000,  33.8125,  75.3750],
              │    │     │                [  0.0000,   0.0000,   0.0000,   0.0000,   0.0000],
              │    │     │          ...
              │    │     └ tensor([[[[171., 171., 171.,  ..., 168., 168., 168.],
              │    │                 [171., 171., 171.,  ..., 167., 167., 167.],
              │    │                 [171., ...
              │    └ DistributedDataParallel(
              │        (module): YOLOX(
              │          (backbone): YOLOPAFPN(
              │            (backbone): CSPDarknet(
              │              (stem): Focus(
              │       ...
              └ <yolox.core.trainer.Trainer object at 0x7f7494dcdca0>

  File "/usr/local/lib/python3.8/dist-packages/torch/nn/modules/module.py", line 1190, in _call_impl
    return forward_call(*input, **kwargs)
           │             │        └ {}
           │             └ (tensor([[[[171., 171., 171.,  ..., 168., 168., 168.],
           │                         [171., 171., 171.,  ..., 167., 167., 167.],
           │                         [171.,...
           └ <bound method DistributedDataParallel.forward of DistributedDataParallel(
               (module): YOLOX(
                 (backbone): YOLOPAFPN(
                  ...

  File "/usr/local/lib/python3.8/dist-packages/torch/nn/parallel/distributed.py", line 1040, in forward
    output = self._run_ddp_forward(*inputs, **kwargs)
             │    │                 │         └ {}
             │    │                 └ (tensor([[[[171., 171., 171.,  ..., 168., 168., 168.],
             │    │                             [171., 171., 171.,  ..., 167., 167., 167.],
             │    │                             [171.,...
             │    └ <function DistributedDataParallel._run_ddp_forward at 0x7f74a33bf5e0>
             └ DistributedDataParallel(
                 (module): YOLOX(
                   (backbone): YOLOPAFPN(
                     (backbone): CSPDarknet(
                       (stem): Focus(
                ...

  File "/usr/local/lib/python3.8/dist-packages/torch/nn/parallel/distributed.py", line 1000, in _run_ddp_forward
    return module_to_run(*inputs[0], **kwargs[0])
           │              │            └ ({},)
           │              └ ((tensor([[[[171., 171., 171.,  ..., 168., 168., 168.],
           │                          [171., 171., 171.,  ..., 167., 167., 167.],
           │                          [171....
           └ YOLOX(
               (backbone): YOLOPAFPN(
                 (backbone): CSPDarknet(
                   (stem): Focus(
                     (conv): BaseConv(
                       (conv): ...

  File "/usr/local/lib/python3.8/dist-packages/torch/nn/modules/module.py", line 1190, in _call_impl
    return forward_call(*input, **kwargs)
           │             │        └ {}
           │             └ (tensor([[[[171., 171., 171.,  ..., 168., 168., 168.],
           │                         [171., 171., 171.,  ..., 167., 167., 167.],
           │                         [171.,...
           └ <bound method YOLOX.forward of YOLOX(
               (backbone): YOLOPAFPN(
                 (backbone): CSPDarknet(
                   (stem): Focus(
                     (conv...

  File "/root/YOLOX/yolox/models/yolox.py", line 34, in forward
    loss, iou_loss, conf_loss, cls_loss, l1_loss, num_fg = self.head(
                                                           └ YOLOX(
                                                               (backbone): YOLOPAFPN(
                                                                 (backbone): CSPDarknet(
                                                                   (stem): Focus(
                                                                     (conv): BaseConv(
                                                                       (conv): ...

  File "/usr/local/lib/python3.8/dist-packages/torch/nn/modules/module.py", line 1190, in _call_impl
    return forward_call(*input, **kwargs)
           │             │        └ {}
           │             └ <unprintable tuple object>
           └ <bound method YOLOXHead.forward of YOLOXHead(
               (cls_convs): ModuleList(
                 (0): Sequential(
                   (0): DWConv(
                     (dco...

  File "/root/YOLOX/yolox/models/yolo_head.py", line 157, in forward
    cls_feat = cls_conv(cls_x)
               │        └ <unprintable Tensor object>
               └ Sequential(
                   (0): DWConv(
                     (dconv): BaseConv(
                       (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1,...

  File "/usr/local/lib/python3.8/dist-packages/torch/nn/modules/module.py", line 1190, in _call_impl
    return forward_call(*input, **kwargs)
           │             │        └ {}
           │             └ <unprintable tuple object>
           └ <bound method Sequential.forward of Sequential(
               (0): DWConv(
                 (dconv): BaseConv(
                   (conv): Conv2d(64, 64, kernel_siz...

  File "/usr/local/lib/python3.8/dist-packages/torch/nn/modules/container.py", line 204, in forward
    input = module(input)
            │      └ <unprintable Tensor object>
            └ DWConv(
                (dconv): BaseConv(
                  (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=64, bias=Fa...

  File "/usr/local/lib/python3.8/dist-packages/torch/nn/modules/module.py", line 1190, in _call_impl
    return forward_call(*input, **kwargs)
           │             │        └ {}
           │             └ <unprintable tuple object>
           └ <bound method DWConv.forward of DWConv(
               (dconv): BaseConv(
                 (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), pa...

  File "/root/YOLOX/yolox/models/network_blocks.py", line 75, in forward
    x = self.dconv(x)
        │          └ <unprintable Tensor object>
        └ DWConv(
            (dconv): BaseConv(
              (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=64, bias=Fa...

  File "/usr/local/lib/python3.8/dist-packages/torch/nn/modules/module.py", line 1190, in _call_impl
    return forward_call(*input, **kwargs)
           │             │        └ {}
           │             └ <unprintable tuple object>
           └ <bound method BaseConv.forward of BaseConv(
               (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), group...

  File "/root/YOLOX/yolox/models/network_blocks.py", line 51, in forward
    return self.act(self.bn(self.conv(x)))
           │        │       │         └ <unprintable Tensor object>
           │        │       └ BaseConv(
           │        │           (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=64, bias=False)
           │        │           (bn): BatchNor...
           │        └ BaseConv(
           │            (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=64, bias=False)
           │            (bn): BatchNor...
           └ BaseConv(
               (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=64, bias=False)
               (bn): BatchNor...

  File "/usr/local/lib/python3.8/dist-packages/torch/nn/modules/module.py", line 1190, in _call_impl
    return forward_call(*input, **kwargs)
           │             │        └ {}
           │             └ <unprintable tuple object>
           └ <bound method Conv2d.forward of Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=64, bias=False)>

  File "/usr/local/lib/python3.8/dist-packages/torch/nn/modules/conv.py", line 463, in forward
    return self._conv_forward(input, self.weight, self.bias)
           │    │             │      │            └ Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=64, bias=False)
           │    │             │      └ Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=64, bias=False)
           │    │             └ <unprintable Tensor object>
           │    └ <function Conv2d._conv_forward at 0x7f74a3513310>
           └ Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=64, bias=False)

  File "/usr/local/lib/python3.8/dist-packages/torch/nn/modules/conv.py", line 459, in _conv_forward
    return F.conv2d(input, weight, bias, self.stride,
           │ │      │      │       │     │    └ (1, 1)
           │ │      │      │       │     └ Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=64, bias=False)
           │ │      │      │       └ None
           │ │      │      └ Parameter containing:
           │ │      │        tensor([[[[ 2.5256e-02,  1.7531e-02,  2.9289e-02],
           │ │      │                  [ 3.0389e-02, -1.1542e-02,  3.1062e-02],
           │ │      │         ...
           │ │      └ <unprintable Tensor object>
           │ └ <built-in method conv2d of type object at 0x7f751ac1e980>
           └ <module 'torch.nn.functional' from '/usr/local/lib/python3.8/dist-packages/torch/nn/functional.py'>

torch.cuda.OutOfMemoryError: CUDA out of memory. Tried to allocate 2.00 MiB (GPU 0; 7.79 GiB total capacity; 69.30 MiB already allocated; 2.50 MiB free; 6.68 GiB reserved in total by PyTorch) If reserved memory is >> allocated memory try setting max_split_size_mb to avoid fragmentation.  See documentation for Memory Management and PYTORCH_CUDA_ALLOC_CONF
2022-12-23 17:28:25.872 | INFO     | yolox.core.trainer:before_train:130 - args: Namespace(batch_size=8, cache=False, ckpt='/root/YOLOX/yolox_nano.pth', devices=1, dist_backend='nccl', dist_url=None, exp_file='/root/YOLOX/yolox_nano.py', experiment_name='yolox_nano', fp16=True, logger='tensorboard', machine_rank=0, name=None, num_machines=1, occupy=True, opts=[], resume=False, start_epoch=None)
2022-12-23 17:28:25.874 | INFO     | yolox.core.trainer:before_train:131 - exp value:
╒═══════════════════╤════════════════════════════════════════════════════════════╕
│ keys              │ values                                                     │
╞═══════════════════╪════════════════════════════════════════════════════════════╡
│ seed              │ None                                                       │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ output_dir        │ './YOLOX_outputs'                                          │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ print_interval    │ 10                                                         │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ eval_interval     │ 1                                                          │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ num_classes       │ 4                                                          │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ depth             │ 0.33                                                       │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ width             │ 0.25                                                       │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ act               │ 'silu'                                                     │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ data_num_workers  │ 4                                                          │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ input_size        │ (416, 416)                                                 │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ multiscale_range  │ 5                                                          │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ data_dir          │ '/root/ML/dataset/images'                                  │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ train_ann         │ '/root/ML/dataset/annotations/train_annotations.json'      │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ val_ann           │ '/root/ML/dataset/annotations/validation_annotations.json' │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ test_ann          │ 'instances_test2017.json'                                  │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ mosaic_prob       │ 0.5                                                        │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ mixup_prob        │ 1.0                                                        │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ hsv_prob          │ 1.0                                                        │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ flip_prob         │ 0.5                                                        │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ degrees           │ 10.0                                                       │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ translate         │ 0.1                                                        │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ mosaic_scale      │ (0.5, 1.5)                                                 │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ enable_mixup      │ False                                                      │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ mixup_scale       │ (0.5, 1.5)                                                 │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ shear             │ 2.0                                                        │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ warmup_epochs     │ 5                                                          │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ max_epoch         │ 20                                                         │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ warmup_lr         │ 0                                                          │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ min_lr_ratio      │ 0.05                                                       │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ basic_lr_per_img  │ 0.00015625                                                 │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ scheduler         │ 'yoloxwarmcos'                                             │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ no_aug_epochs     │ 15                                                         │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ ema               │ True                                                       │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ weight_decay      │ 0.0005                                                     │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ momentum          │ 0.9                                                        │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ save_history_ckpt │ True                                                       │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ exp_name          │ 'yolox_nano'                                               │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ test_size         │ (416, 416)                                                 │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ test_conf         │ 0.01                                                       │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ nmsthre           │ 0.65                                                       │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ random_size       │ (10, 20)                                                   │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ data_num_worker   │ 4                                                          │
╘═══════════════════╧════════════════════════════════════════════════════════════╛
2022-12-23 17:28:26.000 | INFO     | yolox.core.trainer:before_train:136 - Model Summary: Params: 0.90M, Gflops: 1.08
2022-12-23 17:28:28.657 | INFO     | yolox.core.trainer:resume_train:311 - loading checkpoint for fine tuning
2022-12-23 17:28:28.744 | WARNING  | yolox.utils.checkpoint:load_ckpt:24 - Shape of head.cls_preds.0.weight in checkpoint is torch.Size([80, 64, 1, 1]), while shape of head.cls_preds.0.weight in model is torch.Size([4, 64, 1, 1]).
2022-12-23 17:28:28.744 | WARNING  | yolox.utils.checkpoint:load_ckpt:24 - Shape of head.cls_preds.0.bias in checkpoint is torch.Size([80]), while shape of head.cls_preds.0.bias in model is torch.Size([4]).
2022-12-23 17:28:28.745 | WARNING  | yolox.utils.checkpoint:load_ckpt:24 - Shape of head.cls_preds.1.weight in checkpoint is torch.Size([80, 64, 1, 1]), while shape of head.cls_preds.1.weight in model is torch.Size([4, 64, 1, 1]).
2022-12-23 17:28:28.745 | WARNING  | yolox.utils.checkpoint:load_ckpt:24 - Shape of head.cls_preds.1.bias in checkpoint is torch.Size([80]), while shape of head.cls_preds.1.bias in model is torch.Size([4]).
2022-12-23 17:28:28.745 | WARNING  | yolox.utils.checkpoint:load_ckpt:24 - Shape of head.cls_preds.2.weight in checkpoint is torch.Size([80, 64, 1, 1]), while shape of head.cls_preds.2.weight in model is torch.Size([4, 64, 1, 1]).
2022-12-23 17:28:28.745 | WARNING  | yolox.utils.checkpoint:load_ckpt:24 - Shape of head.cls_preds.2.bias in checkpoint is torch.Size([80]), while shape of head.cls_preds.2.bias in model is torch.Size([4]).
2022-12-23 17:28:28.757 | INFO     | yolox.data.datasets.coco:__init__:64 - loading annotations into memory...
2022-12-23 17:28:28.758 | INFO     | yolox.data.datasets.coco:__init__:64 - Done (t=0.00s)
2022-12-23 17:28:28.759 | INFO     | pycocotools.coco:__init__:86 - creating index...
2022-12-23 17:28:28.759 | INFO     | pycocotools.coco:__init__:86 - index created!
2022-12-23 17:28:28.769 | INFO     | yolox.core.trainer:before_train:155 - init prefetcher, this might take one minute or less...
2022-12-23 17:28:34.084 | INFO     | yolox.data.datasets.coco:__init__:64 - loading annotations into memory...
2022-12-23 17:28:34.085 | INFO     | yolox.data.datasets.coco:__init__:64 - Done (t=0.00s)
2022-12-23 17:28:34.085 | INFO     | pycocotools.coco:__init__:86 - creating index...
2022-12-23 17:28:34.085 | INFO     | pycocotools.coco:__init__:86 - index created!
2022-12-23 17:28:34.088 | INFO     | yolox.core.trainer:before_train:191 - Training start...
2022-12-23 17:28:34.090 | INFO     | yolox.core.trainer:before_train:192 - 
YOLOX(
  (backbone): YOLOPAFPN(
    (backbone): CSPDarknet(
      (stem): Focus(
        (conv): BaseConv(
          (conv): Conv2d(12, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn): BatchNorm2d(16, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
          (act): SiLU(inplace=True)
        )
      )
      (dark2): Sequential(
        (0): DWConv(
          (dconv): BaseConv(
            (conv): Conv2d(16, 16, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=16, bias=False)
            (bn): BatchNorm2d(16, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
            (act): SiLU(inplace=True)
          )
          (pconv): BaseConv(
            (conv): Conv2d(16, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn): BatchNorm2d(32, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
            (act): SiLU(inplace=True)
          )
        )
        (1): CSPLayer(
          (conv1): BaseConv(
            (conv): Conv2d(32, 16, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn): BatchNorm2d(16, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
            (act): SiLU(inplace=True)
          )
          (conv2): BaseConv(
            (conv): Conv2d(32, 16, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn): BatchNorm2d(16, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
            (act): SiLU(inplace=True)
          )
          (conv3): BaseConv(
            (conv): Conv2d(32, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn): BatchNorm2d(32, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
            (act): SiLU(inplace=True)
          )
          (m): Sequential(
            (0): Bottleneck(
              (conv1): BaseConv(
                (conv): Conv2d(16, 16, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (bn): BatchNorm2d(16, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                (act): SiLU(inplace=True)
              )
              (conv2): DWConv(
                (dconv): BaseConv(
                  (conv): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=16, bias=False)
                  (bn): BatchNorm2d(16, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                  (act): SiLU(inplace=True)
                )
                (pconv): BaseConv(
                  (conv): Conv2d(16, 16, kernel_size=(1, 1), stride=(1, 1), bias=False)
                  (bn): BatchNorm2d(16, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                  (act): SiLU(inplace=True)
                )
              )
            )
          )
        )
      )
      (dark3): Sequential(
        (0): DWConv(
          (dconv): BaseConv(
            (conv): Conv2d(32, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=32, bias=False)
            (bn): BatchNorm2d(32, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
            (act): SiLU(inplace=True)
          )
          (pconv): BaseConv(
            (conv): Conv2d(32, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
            (act): SiLU(inplace=True)
          )
        )
        (1): CSPLayer(
          (conv1): BaseConv(
            (conv): Conv2d(64, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn): BatchNorm2d(32, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
            (act): SiLU(inplace=True)
          )
          (conv2): BaseConv(
            (conv): Conv2d(64, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn): BatchNorm2d(32, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
            (act): SiLU(inplace=True)
          )
          (conv3): BaseConv(
            (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
            (act): SiLU(inplace=True)
          )
          (m): Sequential(
            (0): Bottleneck(
              (conv1): BaseConv(
                (conv): Conv2d(32, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (bn): BatchNorm2d(32, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                (act): SiLU(inplace=True)
              )
              (conv2): DWConv(
                (dconv): BaseConv(
                  (conv): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False)
                  (bn): BatchNorm2d(32, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                  (act): SiLU(inplace=True)
                )
                (pconv): BaseConv(
                  (conv): Conv2d(32, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)
                  (bn): BatchNorm2d(32, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                  (act): SiLU(inplace=True)
                )
              )
            )
            (1): Bottleneck(
              (conv1): BaseConv(
                (conv): Conv2d(32, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (bn): BatchNorm2d(32, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                (act): SiLU(inplace=True)
              )
              (conv2): DWConv(
                (dconv): BaseConv(
                  (conv): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False)
                  (bn): BatchNorm2d(32, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                  (act): SiLU(inplace=True)
                )
                (pconv): BaseConv(
                  (conv): Conv2d(32, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)
                  (bn): BatchNorm2d(32, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                  (act): SiLU(inplace=True)
                )
              )
            )
            (2): Bottleneck(
              (conv1): BaseConv(
                (conv): Conv2d(32, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (bn): BatchNorm2d(32, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                (act): SiLU(inplace=True)
              )
              (conv2): DWConv(
                (dconv): BaseConv(
                  (conv): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False)
                  (bn): BatchNorm2d(32, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                  (act): SiLU(inplace=True)
                )
                (pconv): BaseConv(
                  (conv): Conv2d(32, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)
                  (bn): BatchNorm2d(32, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                  (act): SiLU(inplace=True)
                )
              )
            )
          )
        )
      )
      (dark4): Sequential(
        (0): DWConv(
          (dconv): BaseConv(
            (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=64, bias=False)
            (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
            (act): SiLU(inplace=True)
          )
          (pconv): BaseConv(
            (conv): Conv2d(64, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn): BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
            (act): SiLU(inplace=True)
          )
        )
        (1): CSPLayer(
          (conv1): BaseConv(
            (conv): Conv2d(128, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
            (act): SiLU(inplace=True)
          )
          (conv2): BaseConv(
            (conv): Conv2d(128, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
            (act): SiLU(inplace=True)
          )
          (conv3): BaseConv(
            (conv): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn): BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
            (act): SiLU(inplace=True)
          )
          (m): Sequential(
            (0): Bottleneck(
              (conv1): BaseConv(
                (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                (act): SiLU(inplace=True)
              )
              (conv2): DWConv(
                (dconv): BaseConv(
                  (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=64, bias=False)
                  (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                  (act): SiLU(inplace=True)
                )
                (pconv): BaseConv(
                  (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
                  (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                  (act): SiLU(inplace=True)
                )
              )
            )
            (1): Bottleneck(
              (conv1): BaseConv(
                (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                (act): SiLU(inplace=True)
              )
              (conv2): DWConv(
                (dconv): BaseConv(
                  (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=64, bias=False)
                  (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                  (act): SiLU(inplace=True)
                )
                (pconv): BaseConv(
                  (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
                  (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                  (act): SiLU(inplace=True)
                )
              )
            )
            (2): Bottleneck(
              (conv1): BaseConv(
                (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                (act): SiLU(inplace=True)
              )
              (conv2): DWConv(
                (dconv): BaseConv(
                  (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=64, bias=False)
                  (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                  (act): SiLU(inplace=True)
                )
                (pconv): BaseConv(
                  (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
                  (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                  (act): SiLU(inplace=True)
                )
              )
            )
          )
        )
      )
      (dark5): Sequential(
        (0): DWConv(
          (dconv): BaseConv(
            (conv): Conv2d(128, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=128, bias=False)
            (bn): BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
            (act): SiLU(inplace=True)
          )
          (pconv): BaseConv(
            (conv): Conv2d(128, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn): BatchNorm2d(256, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
            (act): SiLU(inplace=True)
          )
        )
        (1): SPPBottleneck(
          (conv1): BaseConv(
            (conv): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn): BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
            (act): SiLU(inplace=True)
          )
          (m): ModuleList(
            (0): MaxPool2d(kernel_size=5, stride=1, padding=2, dilation=1, ceil_mode=False)
            (1): MaxPool2d(kernel_size=9, stride=1, padding=4, dilation=1, ceil_mode=False)
            (2): MaxPool2d(kernel_size=13, stride=1, padding=6, dilation=1, ceil_mode=False)
          )
          (conv2): BaseConv(
            (conv): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn): BatchNorm2d(256, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
            (act): SiLU(inplace=True)
          )
        )
        (2): CSPLayer(
          (conv1): BaseConv(
            (conv): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn): BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
            (act): SiLU(inplace=True)
          )
          (conv2): BaseConv(
            (conv): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn): BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
            (act): SiLU(inplace=True)
          )
          (conv3): BaseConv(
            (conv): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn): BatchNorm2d(256, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
            (act): SiLU(inplace=True)
          )
          (m): Sequential(
            (0): Bottleneck(
              (conv1): BaseConv(
                (conv): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (bn): BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                (act): SiLU(inplace=True)
              )
              (conv2): DWConv(
                (dconv): BaseConv(
                  (conv): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=128, bias=False)
                  (bn): BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                  (act): SiLU(inplace=True)
                )
                (pconv): BaseConv(
                  (conv): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
                  (bn): BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                  (act): SiLU(inplace=True)
                )
              )
            )
          )
        )
      )
    )
    (upsample): Upsample(scale_factor=2.0, mode=nearest)
    (lateral_conv0): BaseConv(
      (conv): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn): BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
      (act): SiLU(inplace=True)
    )
    (C3_p4): CSPLayer(
      (conv1): BaseConv(
        (conv): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
        (act): SiLU(inplace=True)
      )
      (conv2): BaseConv(
        (conv): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
        (act): SiLU(inplace=True)
      )
      (conv3): BaseConv(
        (conv): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn): BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
        (act): SiLU(inplace=True)
      )
      (m): Sequential(
        (0): Bottleneck(
          (conv1): BaseConv(
            (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
            (act): SiLU(inplace=True)
          )
          (conv2): DWConv(
            (dconv): BaseConv(
              (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=64, bias=False)
              (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): SiLU(inplace=True)
            )
            (pconv): BaseConv(
              (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): SiLU(inplace=True)
            )
          )
        )
      )
    )
    (reduce_conv1): BaseConv(
      (conv): Conv2d(128, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
      (act): SiLU(inplace=True)
    )
    (C3_p3): CSPLayer(
      (conv1): BaseConv(
        (conv): Conv2d(128, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn): BatchNorm2d(32, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
        (act): SiLU(inplace=True)
      )
      (conv2): BaseConv(
        (conv): Conv2d(128, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn): BatchNorm2d(32, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
        (act): SiLU(inplace=True)
      )
      (conv3): BaseConv(
        (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
        (act): SiLU(inplace=True)
      )
      (m): Sequential(
        (0): Bottleneck(
          (conv1): BaseConv(
            (conv): Conv2d(32, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn): BatchNorm2d(32, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
            (act): SiLU(inplace=True)
          )
          (conv2): DWConv(
            (dconv): BaseConv(
              (conv): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False)
              (bn): BatchNorm2d(32, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): SiLU(inplace=True)
            )
            (pconv): BaseConv(
              (conv): Conv2d(32, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (bn): BatchNorm2d(32, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): SiLU(inplace=True)
            )
          )
        )
      )
    )
    (bu_conv2): DWConv(
      (dconv): BaseConv(
        (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=64, bias=False)
        (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
        (act): SiLU(inplace=True)
      )
      (pconv): BaseConv(
        (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
        (act): SiLU(inplace=True)
      )
    )
    (C3_n3): CSPLayer(
      (conv1): BaseConv(
        (conv): Conv2d(128, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
        (act): SiLU(inplace=True)
      )
      (conv2): BaseConv(
        (conv): Conv2d(128, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
        (act): SiLU(inplace=True)
      )
      (conv3): BaseConv(
        (conv): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn): BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
        (act): SiLU(inplace=True)
      )
      (m): Sequential(
        (0): Bottleneck(
          (conv1): BaseConv(
            (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
            (act): SiLU(inplace=True)
          )
          (conv2): DWConv(
            (dconv): BaseConv(
              (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=64, bias=False)
              (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): SiLU(inplace=True)
            )
            (pconv): BaseConv(
              (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): SiLU(inplace=True)
            )
          )
        )
      )
    )
    (bu_conv1): DWConv(
      (dconv): BaseConv(
        (conv): Conv2d(128, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=128, bias=False)
        (bn): BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
        (act): SiLU(inplace=True)
      )
      (pconv): BaseConv(
        (conv): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn): BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
        (act): SiLU(inplace=True)
      )
    )
    (C3_n4): CSPLayer(
      (conv1): BaseConv(
        (conv): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn): BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
        (act): SiLU(inplace=True)
      )
      (conv2): BaseConv(
        (conv): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn): BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
        (act): SiLU(inplace=True)
      )
      (conv3): BaseConv(
        (conv): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn): BatchNorm2d(256, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
        (act): SiLU(inplace=True)
      )
      (m): Sequential(
        (0): Bottleneck(
          (conv1): BaseConv(
            (conv): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn): BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
            (act): SiLU(inplace=True)
          )
          (conv2): DWConv(
            (dconv): BaseConv(
              (conv): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=128, bias=False)
              (bn): BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): SiLU(inplace=True)
            )
            (pconv): BaseConv(
              (conv): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (bn): BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): SiLU(inplace=True)
            )
          )
        )
      )
    )
  )
  (head): YOLOXHead(
    (cls_convs): ModuleList(
      (0): Sequential(
        (0): DWConv(
          (dconv): BaseConv(
            (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=64, bias=False)
            (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
            (act): SiLU(inplace=True)
          )
          (pconv): BaseConv(
            (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
            (act): SiLU(inplace=True)
          )
        )
        (1): DWConv(
          (dconv): BaseConv(
            (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=64, bias=False)
            (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
            (act): SiLU(inplace=True)
          )
          (pconv): BaseConv(
            (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
            (act): SiLU(inplace=True)
          )
        )
      )
      (1): Sequential(
        (0): DWConv(
          (dconv): BaseConv(
            (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=64, bias=False)
            (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
            (act): SiLU(inplace=True)
          )
          (pconv): BaseConv(
            (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
            (act): SiLU(inplace=True)
          )
        )
        (1): DWConv(
          (dconv): BaseConv(
            (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=64, bias=False)
            (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
            (act): SiLU(inplace=True)
          )
          (pconv): BaseConv(
            (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
            (act): SiLU(inplace=True)
          )
        )
      )
      (2): Sequential(
        (0): DWConv(
          (dconv): BaseConv(
            (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=64, bias=False)
            (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
            (act): SiLU(inplace=True)
          )
          (pconv): BaseConv(
            (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
            (act): SiLU(inplace=True)
          )
        )
        (1): DWConv(
          (dconv): BaseConv(
            (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=64, bias=False)
            (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
            (act): SiLU(inplace=True)
          )
          (pconv): BaseConv(
            (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
            (act): SiLU(inplace=True)
          )
        )
      )
    )
    (reg_convs): ModuleList(
      (0): Sequential(
        (0): DWConv(
          (dconv): BaseConv(
            (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=64, bias=False)
            (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
            (act): SiLU(inplace=True)
          )
          (pconv): BaseConv(
            (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
            (act): SiLU(inplace=True)
          )
        )
        (1): DWConv(
          (dconv): BaseConv(
            (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=64, bias=False)
            (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
            (act): SiLU(inplace=True)
          )
          (pconv): BaseConv(
            (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
            (act): SiLU(inplace=True)
          )
        )
      )
      (1): Sequential(
        (0): DWConv(
          (dconv): BaseConv(
            (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=64, bias=False)
            (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
            (act): SiLU(inplace=True)
          )
          (pconv): BaseConv(
            (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
            (act): SiLU(inplace=True)
          )
        )
        (1): DWConv(
          (dconv): BaseConv(
            (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=64, bias=False)
            (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
            (act): SiLU(inplace=True)
          )
          (pconv): BaseConv(
            (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
            (act): SiLU(inplace=True)
          )
        )
      )
      (2): Sequential(
        (0): DWConv(
          (dconv): BaseConv(
            (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=64, bias=False)
            (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
            (act): SiLU(inplace=True)
          )
          (pconv): BaseConv(
            (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
            (act): SiLU(inplace=True)
          )
        )
        (1): DWConv(
          (dconv): BaseConv(
            (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=64, bias=False)
            (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
            (act): SiLU(inplace=True)
          )
          (pconv): BaseConv(
            (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
            (act): SiLU(inplace=True)
          )
        )
      )
    )
    (cls_preds): ModuleList(
      (0): Conv2d(64, 4, kernel_size=(1, 1), stride=(1, 1))
      (1): Conv2d(64, 4, kernel_size=(1, 1), stride=(1, 1))
      (2): Conv2d(64, 4, kernel_size=(1, 1), stride=(1, 1))
    )
    (reg_preds): ModuleList(
      (0): Conv2d(64, 4, kernel_size=(1, 1), stride=(1, 1))
      (1): Conv2d(64, 4, kernel_size=(1, 1), stride=(1, 1))
      (2): Conv2d(64, 4, kernel_size=(1, 1), stride=(1, 1))
    )
    (obj_preds): ModuleList(
      (0): Conv2d(64, 1, kernel_size=(1, 1), stride=(1, 1))
      (1): Conv2d(64, 1, kernel_size=(1, 1), stride=(1, 1))
      (2): Conv2d(64, 1, kernel_size=(1, 1), stride=(1, 1))
    )
    (stems): ModuleList(
      (0): BaseConv(
        (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
        (act): SiLU(inplace=True)
      )
      (1): BaseConv(
        (conv): Conv2d(128, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
        (act): SiLU(inplace=True)
      )
      (2): BaseConv(
        (conv): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
        (act): SiLU(inplace=True)
      )
    )
    (l1_loss): L1Loss()
    (bcewithlog_loss): BCEWithLogitsLoss()
    (iou_loss): IOUloss()
  )
)
2022-12-23 17:28:34.091 | INFO     | yolox.core.trainer:before_epoch:203 - ---> start train epoch1
2022-12-23 17:28:38.315 | INFO     | yolox.core.trainer:after_train:195 - Training of experiment is done and the best AP is 0.00
2022-12-23 17:28:38.316 | ERROR    | yolox.core.launch:launch:98 - An error has been caught in function 'launch', process 'MainProcess' (2150), thread 'MainThread' (140655585564480):
Traceback (most recent call last):

  File "/root/YOLOX/tools/train.py", line 134, in <module>
    launch(
    └ <function launch at 0x7fec5e337940>

> File "/root/YOLOX/yolox/core/launch.py", line 98, in launch
    main_func(*args)
    │          └ (╒═══════════════════╤═══════════════════════════════════════════════════════════════════════════════════════════════════════...
    └ <function main at 0x7fec513ea0d0>

  File "/root/YOLOX/tools/train.py", line 118, in main
    trainer.train()
    │       └ <function Trainer.train at 0x7fec50a4cdc0>
    └ <yolox.core.trainer.Trainer object at 0x7fec50a99f70>

  File "/root/YOLOX/yolox/core/trainer.py", line 76, in train
    self.train_in_epoch()
    │    └ <function Trainer.train_in_epoch at 0x7fec50a534c0>
    └ <yolox.core.trainer.Trainer object at 0x7fec50a99f70>

  File "/root/YOLOX/yolox/core/trainer.py", line 85, in train_in_epoch
    self.train_in_iter()
    │    └ <function Trainer.train_in_iter at 0x7fec50a53550>
    └ <yolox.core.trainer.Trainer object at 0x7fec50a99f70>

  File "/root/YOLOX/yolox/core/trainer.py", line 91, in train_in_iter
    self.train_one_iter()
    │    └ <function Trainer.train_one_iter at 0x7fec50a535e0>
    └ <yolox.core.trainer.Trainer object at 0x7fec50a99f70>

  File "/root/YOLOX/yolox/core/trainer.py", line 105, in train_one_iter
    outputs = self.model(inps, targets)
              │    │     │     └ tensor([[[0.0000e+00, 4.7344e+01, 1.8512e+02, 1.4188e+01, 2.5359e+01],
              │    │     │                [1.0000e+00, 3.4850e+02, 1.7238e+02, 3.1172e+...
              │    │     └ tensor([[[[114., 114., 114.,  ..., 114., 114., 114.],
              │    │                 [114., 114., 114.,  ..., 114., 114., 114.],
              │    │                 [114., ...
              │    └ YOLOX(
              │        (backbone): YOLOPAFPN(
              │          (backbone): CSPDarknet(
              │            (stem): Focus(
              │              (conv): BaseConv(
              │                (conv): ...
              └ <yolox.core.trainer.Trainer object at 0x7fec50a99f70>

  File "/usr/local/lib/python3.8/dist-packages/torch/nn/modules/module.py", line 1190, in _call_impl
    return forward_call(*input, **kwargs)
           │             │        └ {}
           │             └ (tensor([[[[114., 114., 114.,  ..., 114., 114., 114.],
           │                         [114., 114., 114.,  ..., 114., 114., 114.],
           │                         [114.,...
           └ <bound method YOLOX.forward of YOLOX(
               (backbone): YOLOPAFPN(
                 (backbone): CSPDarknet(
                   (stem): Focus(
                     (conv...

  File "/root/YOLOX/yolox/models/yolox.py", line 34, in forward
    loss, iou_loss, conf_loss, cls_loss, l1_loss, num_fg = self.head(
                                                           └ YOLOX(
                                                               (backbone): YOLOPAFPN(
                                                                 (backbone): CSPDarknet(
                                                                   (stem): Focus(
                                                                     (conv): BaseConv(
                                                                       (conv): ...

  File "/usr/local/lib/python3.8/dist-packages/torch/nn/modules/module.py", line 1190, in _call_impl
    return forward_call(*input, **kwargs)
           │             │        └ {}
           │             └ ((tensor([[[[ 8.7646e-01,  5.8929e-02,  2.4500e-01,  ...,  7.4219e-01,
           │                           8.2129e-01,  8.9014e-01],
           │                         [ 1.41...
           └ <bound method YOLOXHead.forward of YOLOXHead(
               (cls_convs): ModuleList(
                 (0): Sequential(
                   (0): DWConv(
                     (dco...

  File "/root/YOLOX/yolox/models/yolo_head.py", line 160, in forward
    reg_feat = reg_conv(reg_x)
               │        └ <unprintable Tensor object>
               └ Sequential(
                   (0): DWConv(
                     (dconv): BaseConv(
                       (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1,...

  File "/usr/local/lib/python3.8/dist-packages/torch/nn/modules/module.py", line 1190, in _call_impl
    return forward_call(*input, **kwargs)
           │             │        └ {}
           │             └ <unprintable tuple object>
           └ <bound method Sequential.forward of Sequential(
               (0): DWConv(
                 (dconv): BaseConv(
                   (conv): Conv2d(64, 64, kernel_siz...

  File "/usr/local/lib/python3.8/dist-packages/torch/nn/modules/container.py", line 204, in forward
    input = module(input)
            │      └ <unprintable Tensor object>
            └ DWConv(
                (dconv): BaseConv(
                  (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=64, bias=Fa...

  File "/usr/local/lib/python3.8/dist-packages/torch/nn/modules/module.py", line 1190, in _call_impl
    return forward_call(*input, **kwargs)
           │             │        └ {}
           │             └ <unprintable tuple object>
           └ <bound method DWConv.forward of DWConv(
               (dconv): BaseConv(
                 (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), pa...

  File "/root/YOLOX/yolox/models/network_blocks.py", line 75, in forward
    x = self.dconv(x)
        │          └ <unprintable Tensor object>
        └ DWConv(
            (dconv): BaseConv(
              (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=64, bias=Fa...

  File "/usr/local/lib/python3.8/dist-packages/torch/nn/modules/module.py", line 1190, in _call_impl
    return forward_call(*input, **kwargs)
           │             │        └ {}
           │             └ <unprintable tuple object>
           └ <bound method BaseConv.forward of BaseConv(
               (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), group...

  File "/root/YOLOX/yolox/models/network_blocks.py", line 51, in forward
    return self.act(self.bn(self.conv(x)))
           │        │       │         └ <unprintable Tensor object>
           │        │       └ BaseConv(
           │        │           (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=64, bias=False)
           │        │           (bn): BatchNor...
           │        └ BaseConv(
           │            (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=64, bias=False)
           │            (bn): BatchNor...
           └ BaseConv(
               (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=64, bias=False)
               (bn): BatchNor...

  File "/usr/local/lib/python3.8/dist-packages/torch/nn/modules/module.py", line 1190, in _call_impl
    return forward_call(*input, **kwargs)
           │             │        └ {}
           │             └ <unprintable tuple object>
           └ <bound method SiLU.forward of SiLU(inplace=True)>

  File "/usr/local/lib/python3.8/dist-packages/torch/nn/modules/activation.py", line 395, in forward
    return F.silu(input, inplace=self.inplace)
           │ │    │              │    └ True
           │ │    │              └ SiLU(inplace=True)
           │ │    └ <unprintable Tensor object>
           │ └ <function silu at 0x7fec5f292dc0>
           └ <module 'torch.nn.functional' from '/usr/local/lib/python3.8/dist-packages/torch/nn/functional.py'>

  File "/usr/local/lib/python3.8/dist-packages/torch/nn/functional.py", line 2058, in silu
    return torch._C._nn.silu_(input)
           │     │  │   │     └ <unprintable Tensor object>
           │     │  │   └ <built-in function silu_>
           │     │  └ <module 'torch._C._nn'>
           │     └ <module 'torch._C' from '/usr/local/lib/python3.8/dist-packages/torch/_C.cpython-38-x86_64-linux-gnu.so'>
           └ <module 'torch' from '/usr/local/lib/python3.8/dist-packages/torch/__init__.py'>

torch.cuda.OutOfMemoryError: CUDA out of memory. Tried to allocate 2.00 MiB (GPU 0; 7.79 GiB total capacity; 436.95 MiB already allocated; 2.50 MiB free; 6.72 GiB reserved in total by PyTorch) If reserved memory is >> allocated memory try setting max_split_size_mb to avoid fragmentation.  See documentation for Memory Management and PYTORCH_CUDA_ALLOC_CONF
2022-12-23 17:30:28.097 | INFO     | yolox.core.trainer:before_train:130 - args: Namespace(batch_size=8, cache=False, ckpt='/root/YOLOX/yolox_nano.pth', devices=1, dist_backend='nccl', dist_url=None, exp_file='/root/YOLOX/yolox_nano.py', experiment_name='yolox_nano', fp16=True, logger='tensorboard', machine_rank=0, name=None, num_machines=1, occupy=True, opts=[], resume=False, start_epoch=None)
2022-12-23 17:30:28.100 | INFO     | yolox.core.trainer:before_train:131 - exp value:
╒═══════════════════╤════════════════════════════════════════════════════════════╕
│ keys              │ values                                                     │
╞═══════════════════╪════════════════════════════════════════════════════════════╡
│ seed              │ None                                                       │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ output_dir        │ './YOLOX_outputs'                                          │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ print_interval    │ 10                                                         │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ eval_interval     │ 1                                                          │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ num_classes       │ 4                                                          │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ depth             │ 0.33                                                       │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ width             │ 0.25                                                       │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ act               │ 'silu'                                                     │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ data_num_workers  │ 4                                                          │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ input_size        │ (416, 416)                                                 │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ multiscale_range  │ 5                                                          │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ data_dir          │ '/root/ML/dataset/images'                                  │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ train_ann         │ '/root/ML/dataset/annotations/train_annotations.json'      │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ val_ann           │ '/root/ML/dataset/annotations/validation_annotations.json' │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ test_ann          │ 'instances_test2017.json'                                  │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ mosaic_prob       │ 0.5                                                        │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ mixup_prob        │ 1.0                                                        │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ hsv_prob          │ 1.0                                                        │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ flip_prob         │ 0.5                                                        │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ degrees           │ 10.0                                                       │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ translate         │ 0.1                                                        │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ mosaic_scale      │ (0.5, 1.5)                                                 │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ enable_mixup      │ False                                                      │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ mixup_scale       │ (0.5, 1.5)                                                 │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ shear             │ 2.0                                                        │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ warmup_epochs     │ 5                                                          │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ max_epoch         │ 20                                                         │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ warmup_lr         │ 0                                                          │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ min_lr_ratio      │ 0.05                                                       │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ basic_lr_per_img  │ 0.00015625                                                 │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ scheduler         │ 'yoloxwarmcos'                                             │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ no_aug_epochs     │ 15                                                         │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ ema               │ True                                                       │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ weight_decay      │ 0.0005                                                     │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ momentum          │ 0.9                                                        │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ save_history_ckpt │ True                                                       │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ exp_name          │ 'yolox_nano'                                               │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ test_size         │ (416, 416)                                                 │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ test_conf         │ 0.01                                                       │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ nmsthre           │ 0.65                                                       │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ random_size       │ (10, 20)                                                   │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ data_num_worker   │ 4                                                          │
╘═══════════════════╧════════════════════════════════════════════════════════════╛
2022-12-23 17:30:28.237 | INFO     | yolox.core.trainer:before_train:136 - Model Summary: Params: 0.90M, Gflops: 1.08
2022-12-23 17:30:29.477 | INFO     | yolox.core.trainer:resume_train:311 - loading checkpoint for fine tuning
2022-12-23 17:30:29.549 | WARNING  | yolox.utils.checkpoint:load_ckpt:24 - Shape of head.cls_preds.0.weight in checkpoint is torch.Size([80, 64, 1, 1]), while shape of head.cls_preds.0.weight in model is torch.Size([4, 64, 1, 1]).
2022-12-23 17:30:29.550 | WARNING  | yolox.utils.checkpoint:load_ckpt:24 - Shape of head.cls_preds.0.bias in checkpoint is torch.Size([80]), while shape of head.cls_preds.0.bias in model is torch.Size([4]).
2022-12-23 17:30:29.550 | WARNING  | yolox.utils.checkpoint:load_ckpt:24 - Shape of head.cls_preds.1.weight in checkpoint is torch.Size([80, 64, 1, 1]), while shape of head.cls_preds.1.weight in model is torch.Size([4, 64, 1, 1]).
2022-12-23 17:30:29.550 | WARNING  | yolox.utils.checkpoint:load_ckpt:24 - Shape of head.cls_preds.1.bias in checkpoint is torch.Size([80]), while shape of head.cls_preds.1.bias in model is torch.Size([4]).
2022-12-23 17:30:29.550 | WARNING  | yolox.utils.checkpoint:load_ckpt:24 - Shape of head.cls_preds.2.weight in checkpoint is torch.Size([80, 64, 1, 1]), while shape of head.cls_preds.2.weight in model is torch.Size([4, 64, 1, 1]).
2022-12-23 17:30:29.550 | WARNING  | yolox.utils.checkpoint:load_ckpt:24 - Shape of head.cls_preds.2.bias in checkpoint is torch.Size([80]), while shape of head.cls_preds.2.bias in model is torch.Size([4]).
2022-12-23 17:30:29.566 | INFO     | yolox.data.datasets.coco:__init__:64 - loading annotations into memory...
2022-12-23 17:30:29.567 | INFO     | yolox.data.datasets.coco:__init__:64 - Done (t=0.00s)
2022-12-23 17:30:29.567 | INFO     | pycocotools.coco:__init__:86 - creating index...
2022-12-23 17:30:29.567 | INFO     | pycocotools.coco:__init__:86 - index created!
2022-12-23 17:30:29.576 | INFO     | yolox.core.trainer:before_train:155 - init prefetcher, this might take one minute or less...
2022-12-23 17:30:34.890 | INFO     | yolox.data.datasets.coco:__init__:64 - loading annotations into memory...
2022-12-23 17:30:34.890 | INFO     | yolox.data.datasets.coco:__init__:64 - Done (t=0.00s)
2022-12-23 17:30:34.891 | INFO     | pycocotools.coco:__init__:86 - creating index...
2022-12-23 17:30:34.891 | INFO     | pycocotools.coco:__init__:86 - index created!
2022-12-23 17:30:34.895 | INFO     | yolox.core.trainer:before_train:191 - Training start...
2022-12-23 17:30:34.897 | INFO     | yolox.core.trainer:before_train:192 - 
YOLOX(
  (backbone): YOLOPAFPN(
    (backbone): CSPDarknet(
      (stem): Focus(
        (conv): BaseConv(
          (conv): Conv2d(12, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn): BatchNorm2d(16, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
          (act): SiLU(inplace=True)
        )
      )
      (dark2): Sequential(
        (0): DWConv(
          (dconv): BaseConv(
            (conv): Conv2d(16, 16, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=16, bias=False)
            (bn): BatchNorm2d(16, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
            (act): SiLU(inplace=True)
          )
          (pconv): BaseConv(
            (conv): Conv2d(16, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn): BatchNorm2d(32, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
            (act): SiLU(inplace=True)
          )
        )
        (1): CSPLayer(
          (conv1): BaseConv(
            (conv): Conv2d(32, 16, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn): BatchNorm2d(16, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
            (act): SiLU(inplace=True)
          )
          (conv2): BaseConv(
            (conv): Conv2d(32, 16, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn): BatchNorm2d(16, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
            (act): SiLU(inplace=True)
          )
          (conv3): BaseConv(
            (conv): Conv2d(32, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn): BatchNorm2d(32, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
            (act): SiLU(inplace=True)
          )
          (m): Sequential(
            (0): Bottleneck(
              (conv1): BaseConv(
                (conv): Conv2d(16, 16, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (bn): BatchNorm2d(16, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                (act): SiLU(inplace=True)
              )
              (conv2): DWConv(
                (dconv): BaseConv(
                  (conv): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=16, bias=False)
                  (bn): BatchNorm2d(16, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                  (act): SiLU(inplace=True)
                )
                (pconv): BaseConv(
                  (conv): Conv2d(16, 16, kernel_size=(1, 1), stride=(1, 1), bias=False)
                  (bn): BatchNorm2d(16, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                  (act): SiLU(inplace=True)
                )
              )
            )
          )
        )
      )
      (dark3): Sequential(
        (0): DWConv(
          (dconv): BaseConv(
            (conv): Conv2d(32, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=32, bias=False)
            (bn): BatchNorm2d(32, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
            (act): SiLU(inplace=True)
          )
          (pconv): BaseConv(
            (conv): Conv2d(32, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
            (act): SiLU(inplace=True)
          )
        )
        (1): CSPLayer(
          (conv1): BaseConv(
            (conv): Conv2d(64, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn): BatchNorm2d(32, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
            (act): SiLU(inplace=True)
          )
          (conv2): BaseConv(
            (conv): Conv2d(64, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn): BatchNorm2d(32, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
            (act): SiLU(inplace=True)
          )
          (conv3): BaseConv(
            (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
            (act): SiLU(inplace=True)
          )
          (m): Sequential(
            (0): Bottleneck(
              (conv1): BaseConv(
                (conv): Conv2d(32, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (bn): BatchNorm2d(32, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                (act): SiLU(inplace=True)
              )
              (conv2): DWConv(
                (dconv): BaseConv(
                  (conv): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False)
                  (bn): BatchNorm2d(32, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                  (act): SiLU(inplace=True)
                )
                (pconv): BaseConv(
                  (conv): Conv2d(32, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)
                  (bn): BatchNorm2d(32, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                  (act): SiLU(inplace=True)
                )
              )
            )
            (1): Bottleneck(
              (conv1): BaseConv(
                (conv): Conv2d(32, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (bn): BatchNorm2d(32, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                (act): SiLU(inplace=True)
              )
              (conv2): DWConv(
                (dconv): BaseConv(
                  (conv): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False)
                  (bn): BatchNorm2d(32, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                  (act): SiLU(inplace=True)
                )
                (pconv): BaseConv(
                  (conv): Conv2d(32, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)
                  (bn): BatchNorm2d(32, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                  (act): SiLU(inplace=True)
                )
              )
            )
            (2): Bottleneck(
              (conv1): BaseConv(
                (conv): Conv2d(32, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (bn): BatchNorm2d(32, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                (act): SiLU(inplace=True)
              )
              (conv2): DWConv(
                (dconv): BaseConv(
                  (conv): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False)
                  (bn): BatchNorm2d(32, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                  (act): SiLU(inplace=True)
                )
                (pconv): BaseConv(
                  (conv): Conv2d(32, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)
                  (bn): BatchNorm2d(32, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                  (act): SiLU(inplace=True)
                )
              )
            )
          )
        )
      )
      (dark4): Sequential(
        (0): DWConv(
          (dconv): BaseConv(
            (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=64, bias=False)
            (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
            (act): SiLU(inplace=True)
          )
          (pconv): BaseConv(
            (conv): Conv2d(64, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn): BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
            (act): SiLU(inplace=True)
          )
        )
        (1): CSPLayer(
          (conv1): BaseConv(
            (conv): Conv2d(128, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
            (act): SiLU(inplace=True)
          )
          (conv2): BaseConv(
            (conv): Conv2d(128, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
            (act): SiLU(inplace=True)
          )
          (conv3): BaseConv(
            (conv): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn): BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
            (act): SiLU(inplace=True)
          )
          (m): Sequential(
            (0): Bottleneck(
              (conv1): BaseConv(
                (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                (act): SiLU(inplace=True)
              )
              (conv2): DWConv(
                (dconv): BaseConv(
                  (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=64, bias=False)
                  (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                  (act): SiLU(inplace=True)
                )
                (pconv): BaseConv(
                  (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
                  (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                  (act): SiLU(inplace=True)
                )
              )
            )
            (1): Bottleneck(
              (conv1): BaseConv(
                (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                (act): SiLU(inplace=True)
              )
              (conv2): DWConv(
                (dconv): BaseConv(
                  (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=64, bias=False)
                  (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                  (act): SiLU(inplace=True)
                )
                (pconv): BaseConv(
                  (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
                  (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                  (act): SiLU(inplace=True)
                )
              )
            )
            (2): Bottleneck(
              (conv1): BaseConv(
                (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                (act): SiLU(inplace=True)
              )
              (conv2): DWConv(
                (dconv): BaseConv(
                  (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=64, bias=False)
                  (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                  (act): SiLU(inplace=True)
                )
                (pconv): BaseConv(
                  (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
                  (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                  (act): SiLU(inplace=True)
                )
              )
            )
          )
        )
      )
      (dark5): Sequential(
        (0): DWConv(
          (dconv): BaseConv(
            (conv): Conv2d(128, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=128, bias=False)
            (bn): BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
            (act): SiLU(inplace=True)
          )
          (pconv): BaseConv(
            (conv): Conv2d(128, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn): BatchNorm2d(256, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
            (act): SiLU(inplace=True)
          )
        )
        (1): SPPBottleneck(
          (conv1): BaseConv(
            (conv): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn): BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
            (act): SiLU(inplace=True)
          )
          (m): ModuleList(
            (0): MaxPool2d(kernel_size=5, stride=1, padding=2, dilation=1, ceil_mode=False)
            (1): MaxPool2d(kernel_size=9, stride=1, padding=4, dilation=1, ceil_mode=False)
            (2): MaxPool2d(kernel_size=13, stride=1, padding=6, dilation=1, ceil_mode=False)
          )
          (conv2): BaseConv(
            (conv): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn): BatchNorm2d(256, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
            (act): SiLU(inplace=True)
          )
        )
        (2): CSPLayer(
          (conv1): BaseConv(
            (conv): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn): BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
            (act): SiLU(inplace=True)
          )
          (conv2): BaseConv(
            (conv): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn): BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
            (act): SiLU(inplace=True)
          )
          (conv3): BaseConv(
            (conv): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn): BatchNorm2d(256, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
            (act): SiLU(inplace=True)
          )
          (m): Sequential(
            (0): Bottleneck(
              (conv1): BaseConv(
                (conv): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (bn): BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                (act): SiLU(inplace=True)
              )
              (conv2): DWConv(
                (dconv): BaseConv(
                  (conv): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=128, bias=False)
                  (bn): BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                  (act): SiLU(inplace=True)
                )
                (pconv): BaseConv(
                  (conv): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
                  (bn): BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                  (act): SiLU(inplace=True)
                )
              )
            )
          )
        )
      )
    )
    (upsample): Upsample(scale_factor=2.0, mode=nearest)
    (lateral_conv0): BaseConv(
      (conv): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn): BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
      (act): SiLU(inplace=True)
    )
    (C3_p4): CSPLayer(
      (conv1): BaseConv(
        (conv): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
        (act): SiLU(inplace=True)
      )
      (conv2): BaseConv(
        (conv): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
        (act): SiLU(inplace=True)
      )
      (conv3): BaseConv(
        (conv): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn): BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
        (act): SiLU(inplace=True)
      )
      (m): Sequential(
        (0): Bottleneck(
          (conv1): BaseConv(
            (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
            (act): SiLU(inplace=True)
          )
          (conv2): DWConv(
            (dconv): BaseConv(
              (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=64, bias=False)
              (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): SiLU(inplace=True)
            )
            (pconv): BaseConv(
              (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): SiLU(inplace=True)
            )
          )
        )
      )
    )
    (reduce_conv1): BaseConv(
      (conv): Conv2d(128, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
      (act): SiLU(inplace=True)
    )
    (C3_p3): CSPLayer(
      (conv1): BaseConv(
        (conv): Conv2d(128, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn): BatchNorm2d(32, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
        (act): SiLU(inplace=True)
      )
      (conv2): BaseConv(
        (conv): Conv2d(128, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn): BatchNorm2d(32, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
        (act): SiLU(inplace=True)
      )
      (conv3): BaseConv(
        (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
        (act): SiLU(inplace=True)
      )
      (m): Sequential(
        (0): Bottleneck(
          (conv1): BaseConv(
            (conv): Conv2d(32, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn): BatchNorm2d(32, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
            (act): SiLU(inplace=True)
          )
          (conv2): DWConv(
            (dconv): BaseConv(
              (conv): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False)
              (bn): BatchNorm2d(32, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): SiLU(inplace=True)
            )
            (pconv): BaseConv(
              (conv): Conv2d(32, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (bn): BatchNorm2d(32, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): SiLU(inplace=True)
            )
          )
        )
      )
    )
    (bu_conv2): DWConv(
      (dconv): BaseConv(
        (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=64, bias=False)
        (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
        (act): SiLU(inplace=True)
      )
      (pconv): BaseConv(
        (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
        (act): SiLU(inplace=True)
      )
    )
    (C3_n3): CSPLayer(
      (conv1): BaseConv(
        (conv): Conv2d(128, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
        (act): SiLU(inplace=True)
      )
      (conv2): BaseConv(
        (conv): Conv2d(128, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
        (act): SiLU(inplace=True)
      )
      (conv3): BaseConv(
        (conv): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn): BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
        (act): SiLU(inplace=True)
      )
      (m): Sequential(
        (0): Bottleneck(
          (conv1): BaseConv(
            (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
            (act): SiLU(inplace=True)
          )
          (conv2): DWConv(
            (dconv): BaseConv(
              (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=64, bias=False)
              (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): SiLU(inplace=True)
            )
            (pconv): BaseConv(
              (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): SiLU(inplace=True)
            )
          )
        )
      )
    )
    (bu_conv1): DWConv(
      (dconv): BaseConv(
        (conv): Conv2d(128, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=128, bias=False)
        (bn): BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
        (act): SiLU(inplace=True)
      )
      (pconv): BaseConv(
        (conv): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn): BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
        (act): SiLU(inplace=True)
      )
    )
    (C3_n4): CSPLayer(
      (conv1): BaseConv(
        (conv): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn): BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
        (act): SiLU(inplace=True)
      )
      (conv2): BaseConv(
        (conv): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn): BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
        (act): SiLU(inplace=True)
      )
      (conv3): BaseConv(
        (conv): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn): BatchNorm2d(256, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
        (act): SiLU(inplace=True)
      )
      (m): Sequential(
        (0): Bottleneck(
          (conv1): BaseConv(
            (conv): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn): BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
            (act): SiLU(inplace=True)
          )
          (conv2): DWConv(
            (dconv): BaseConv(
              (conv): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=128, bias=False)
              (bn): BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): SiLU(inplace=True)
            )
            (pconv): BaseConv(
              (conv): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (bn): BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): SiLU(inplace=True)
            )
          )
        )
      )
    )
  )
  (head): YOLOXHead(
    (cls_convs): ModuleList(
      (0): Sequential(
        (0): DWConv(
          (dconv): BaseConv(
            (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=64, bias=False)
            (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
            (act): SiLU(inplace=True)
          )
          (pconv): BaseConv(
            (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
            (act): SiLU(inplace=True)
          )
        )
        (1): DWConv(
          (dconv): BaseConv(
            (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=64, bias=False)
            (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
            (act): SiLU(inplace=True)
          )
          (pconv): BaseConv(
            (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
            (act): SiLU(inplace=True)
          )
        )
      )
      (1): Sequential(
        (0): DWConv(
          (dconv): BaseConv(
            (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=64, bias=False)
            (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
            (act): SiLU(inplace=True)
          )
          (pconv): BaseConv(
            (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
            (act): SiLU(inplace=True)
          )
        )
        (1): DWConv(
          (dconv): BaseConv(
            (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=64, bias=False)
            (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
            (act): SiLU(inplace=True)
          )
          (pconv): BaseConv(
            (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
            (act): SiLU(inplace=True)
          )
        )
      )
      (2): Sequential(
        (0): DWConv(
          (dconv): BaseConv(
            (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=64, bias=False)
            (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
            (act): SiLU(inplace=True)
          )
          (pconv): BaseConv(
            (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
            (act): SiLU(inplace=True)
          )
        )
        (1): DWConv(
          (dconv): BaseConv(
            (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=64, bias=False)
            (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
            (act): SiLU(inplace=True)
          )
          (pconv): BaseConv(
            (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
            (act): SiLU(inplace=True)
          )
        )
      )
    )
    (reg_convs): ModuleList(
      (0): Sequential(
        (0): DWConv(
          (dconv): BaseConv(
            (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=64, bias=False)
            (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
            (act): SiLU(inplace=True)
          )
          (pconv): BaseConv(
            (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
            (act): SiLU(inplace=True)
          )
        )
        (1): DWConv(
          (dconv): BaseConv(
            (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=64, bias=False)
            (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
            (act): SiLU(inplace=True)
          )
          (pconv): BaseConv(
            (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
            (act): SiLU(inplace=True)
          )
        )
      )
      (1): Sequential(
        (0): DWConv(
          (dconv): BaseConv(
            (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=64, bias=False)
            (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
            (act): SiLU(inplace=True)
          )
          (pconv): BaseConv(
            (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
            (act): SiLU(inplace=True)
          )
        )
        (1): DWConv(
          (dconv): BaseConv(
            (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=64, bias=False)
            (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
            (act): SiLU(inplace=True)
          )
          (pconv): BaseConv(
            (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
            (act): SiLU(inplace=True)
          )
        )
      )
      (2): Sequential(
        (0): DWConv(
          (dconv): BaseConv(
            (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=64, bias=False)
            (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
            (act): SiLU(inplace=True)
          )
          (pconv): BaseConv(
            (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
            (act): SiLU(inplace=True)
          )
        )
        (1): DWConv(
          (dconv): BaseConv(
            (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=64, bias=False)
            (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
            (act): SiLU(inplace=True)
          )
          (pconv): BaseConv(
            (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
            (act): SiLU(inplace=True)
          )
        )
      )
    )
    (cls_preds): ModuleList(
      (0): Conv2d(64, 4, kernel_size=(1, 1), stride=(1, 1))
      (1): Conv2d(64, 4, kernel_size=(1, 1), stride=(1, 1))
      (2): Conv2d(64, 4, kernel_size=(1, 1), stride=(1, 1))
    )
    (reg_preds): ModuleList(
      (0): Conv2d(64, 4, kernel_size=(1, 1), stride=(1, 1))
      (1): Conv2d(64, 4, kernel_size=(1, 1), stride=(1, 1))
      (2): Conv2d(64, 4, kernel_size=(1, 1), stride=(1, 1))
    )
    (obj_preds): ModuleList(
      (0): Conv2d(64, 1, kernel_size=(1, 1), stride=(1, 1))
      (1): Conv2d(64, 1, kernel_size=(1, 1), stride=(1, 1))
      (2): Conv2d(64, 1, kernel_size=(1, 1), stride=(1, 1))
    )
    (stems): ModuleList(
      (0): BaseConv(
        (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
        (act): SiLU(inplace=True)
      )
      (1): BaseConv(
        (conv): Conv2d(128, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
        (act): SiLU(inplace=True)
      )
      (2): BaseConv(
        (conv): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
        (act): SiLU(inplace=True)
      )
    )
    (l1_loss): L1Loss()
    (bcewithlog_loss): BCEWithLogitsLoss()
    (iou_loss): IOUloss()
  )
)
2022-12-23 17:30:34.897 | INFO     | yolox.core.trainer:before_epoch:203 - ---> start train epoch1
2022-12-23 17:30:36.424 | INFO     | yolox.core.trainer:after_train:195 - Training of experiment is done and the best AP is 0.00
2022-12-23 17:30:36.425 | ERROR    | yolox.core.launch:launch:98 - An error has been caught in function 'launch', process 'MainProcess' (3995), thread 'MainThread' (140252479772480):
Traceback (most recent call last):

  File "/root/YOLOX/tools/train.py", line 134, in <module>
    launch(
    └ <function launch at 0x7f8e83394940>

> File "/root/YOLOX/yolox/core/launch.py", line 98, in launch
    main_func(*args)
    │          └ (╒═══════════════════╤═══════════════════════════════════════════════════════════════════════════════════════════════════════...
    └ <function main at 0x7f8e764460d0>

  File "/root/YOLOX/tools/train.py", line 118, in main
    trainer.train()
    │       └ <function Trainer.train at 0x7f8e75aa8dc0>
    └ <yolox.core.trainer.Trainer object at 0x7f8e75af5f70>

  File "/root/YOLOX/yolox/core/trainer.py", line 76, in train
    self.train_in_epoch()
    │    └ <function Trainer.train_in_epoch at 0x7f8e75aaf4c0>
    └ <yolox.core.trainer.Trainer object at 0x7f8e75af5f70>

  File "/root/YOLOX/yolox/core/trainer.py", line 85, in train_in_epoch
    self.train_in_iter()
    │    └ <function Trainer.train_in_iter at 0x7f8e75aaf550>
    └ <yolox.core.trainer.Trainer object at 0x7f8e75af5f70>

  File "/root/YOLOX/yolox/core/trainer.py", line 91, in train_in_iter
    self.train_one_iter()
    │    └ <function Trainer.train_one_iter at 0x7f8e75aaf5e0>
    └ <yolox.core.trainer.Trainer object at 0x7f8e75af5f70>

  File "/root/YOLOX/yolox/core/trainer.py", line 105, in train_one_iter
    outputs = self.model(inps, targets)
              │    │     │     └ tensor([[[  0.0000, 269.5000, 173.8750,  21.4531,  38.3438],
              │    │     │                [  0.0000,   0.0000,   0.0000,   0.0000,   0.0000],
              │    │     │          ...
              │    │     └ tensor([[[[159., 159., 160.,  ..., 163., 163., 163.],
              │    │                 [159., 159., 160.,  ..., 163., 163., 163.],
              │    │                 [159., ...
              │    └ YOLOX(
              │        (backbone): YOLOPAFPN(
              │          (backbone): CSPDarknet(
              │            (stem): Focus(
              │              (conv): BaseConv(
              │                (conv): ...
              └ <yolox.core.trainer.Trainer object at 0x7f8e75af5f70>

  File "/usr/local/lib/python3.8/dist-packages/torch/nn/modules/module.py", line 1190, in _call_impl
    return forward_call(*input, **kwargs)
           │             │        └ {}
           │             └ (tensor([[[[159., 159., 160.,  ..., 163., 163., 163.],
           │                         [159., 159., 160.,  ..., 163., 163., 163.],
           │                         [159.,...
           └ <bound method YOLOX.forward of YOLOX(
               (backbone): YOLOPAFPN(
                 (backbone): CSPDarknet(
                   (stem): Focus(
                     (conv...

  File "/root/YOLOX/yolox/models/yolox.py", line 34, in forward
    loss, iou_loss, conf_loss, cls_loss, l1_loss, num_fg = self.head(
                                                           └ YOLOX(
                                                               (backbone): YOLOPAFPN(
                                                                 (backbone): CSPDarknet(
                                                                   (stem): Focus(
                                                                     (conv): BaseConv(
                                                                       (conv): ...

  File "/usr/local/lib/python3.8/dist-packages/torch/nn/modules/module.py", line 1190, in _call_impl
    return forward_call(*input, **kwargs)
           │             │        └ {}
           │             └ ((tensor([[[[ 9.2529e-01,  3.6255e-02,  5.9967e-02,  ..., -1.4502e-01,
           │                          -1.3074e-01,  1.4807e-01],
           │                         [ 1.63...
           └ <bound method YOLOXHead.forward of YOLOXHead(
               (cls_convs): ModuleList(
                 (0): Sequential(
                   (0): DWConv(
                     (dco...

  File "/root/YOLOX/yolox/models/yolo_head.py", line 160, in forward
    reg_feat = reg_conv(reg_x)
               │        └ <unprintable Tensor object>
               └ Sequential(
                   (0): DWConv(
                     (dconv): BaseConv(
                       (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1,...

  File "/usr/local/lib/python3.8/dist-packages/torch/nn/modules/module.py", line 1190, in _call_impl
    return forward_call(*input, **kwargs)
           │             │        └ {}
           │             └ <unprintable tuple object>
           └ <bound method Sequential.forward of Sequential(
               (0): DWConv(
                 (dconv): BaseConv(
                   (conv): Conv2d(64, 64, kernel_siz...

  File "/usr/local/lib/python3.8/dist-packages/torch/nn/modules/container.py", line 204, in forward
    input = module(input)
            │      └ <unprintable Tensor object>
            └ DWConv(
                (dconv): BaseConv(
                  (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=64, bias=Fa...

  File "/usr/local/lib/python3.8/dist-packages/torch/nn/modules/module.py", line 1190, in _call_impl
    return forward_call(*input, **kwargs)
           │             │        └ {}
           │             └ <unprintable tuple object>
           └ <bound method DWConv.forward of DWConv(
               (dconv): BaseConv(
                 (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), pa...

  File "/root/YOLOX/yolox/models/network_blocks.py", line 75, in forward
    x = self.dconv(x)
        │          └ <unprintable Tensor object>
        └ DWConv(
            (dconv): BaseConv(
              (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=64, bias=Fa...

  File "/usr/local/lib/python3.8/dist-packages/torch/nn/modules/module.py", line 1190, in _call_impl
    return forward_call(*input, **kwargs)
           │             │        └ {}
           │             └ <unprintable tuple object>
           └ <bound method BaseConv.forward of BaseConv(
               (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), group...

  File "/root/YOLOX/yolox/models/network_blocks.py", line 51, in forward
    return self.act(self.bn(self.conv(x)))
           │        │       │         └ <unprintable Tensor object>
           │        │       └ BaseConv(
           │        │           (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=64, bias=False)
           │        │           (bn): BatchNor...
           │        └ BaseConv(
           │            (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=64, bias=False)
           │            (bn): BatchNor...
           └ BaseConv(
               (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=64, bias=False)
               (bn): BatchNor...

  File "/usr/local/lib/python3.8/dist-packages/torch/nn/modules/module.py", line 1190, in _call_impl
    return forward_call(*input, **kwargs)
           │             │        └ {}
           │             └ <unprintable tuple object>
           └ <bound method SiLU.forward of SiLU(inplace=True)>

  File "/usr/local/lib/python3.8/dist-packages/torch/nn/modules/activation.py", line 395, in forward
    return F.silu(input, inplace=self.inplace)
           │ │    │              │    └ True
           │ │    │              └ SiLU(inplace=True)
           │ │    └ <unprintable Tensor object>
           │ └ <function silu at 0x7f8e842efdc0>
           └ <module 'torch.nn.functional' from '/usr/local/lib/python3.8/dist-packages/torch/nn/functional.py'>

  File "/usr/local/lib/python3.8/dist-packages/torch/nn/functional.py", line 2058, in silu
    return torch._C._nn.silu_(input)
           │     │  │   │     └ <unprintable Tensor object>
           │     │  │   └ <built-in function silu_>
           │     │  └ <module 'torch._C._nn'>
           │     └ <module 'torch._C' from '/usr/local/lib/python3.8/dist-packages/torch/_C.cpython-38-x86_64-linux-gnu.so'>
           └ <module 'torch' from '/usr/local/lib/python3.8/dist-packages/torch/__init__.py'>

torch.cuda.OutOfMemoryError: CUDA out of memory. Tried to allocate 2.00 MiB (GPU 0; 7.79 GiB total capacity; 436.95 MiB already allocated; 2.50 MiB free; 6.72 GiB reserved in total by PyTorch) If reserved memory is >> allocated memory try setting max_split_size_mb to avoid fragmentation.  See documentation for Memory Management and PYTORCH_CUDA_ALLOC_CONF
2022-12-23 17:31:49.639 | INFO     | yolox.core.trainer:before_train:130 - args: Namespace(batch_size=8, cache=False, ckpt='/root/YOLOX/yolox_nano.pth', devices=1, dist_backend='nccl', dist_url=None, exp_file='/root/YOLOX/yolox_nano.py', experiment_name='yolox_nano', fp16=True, logger='tensorboard', machine_rank=0, name=None, num_machines=1, occupy=True, opts=[], resume=False, start_epoch=None)
2022-12-23 17:31:49.640 | INFO     | yolox.core.trainer:before_train:131 - exp value:
╒═══════════════════╤════════════════════════════════════════════════════════════╕
│ keys              │ values                                                     │
╞═══════════════════╪════════════════════════════════════════════════════════════╡
│ seed              │ None                                                       │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ output_dir        │ './YOLOX_outputs'                                          │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ print_interval    │ 10                                                         │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ eval_interval     │ 1                                                          │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ num_classes       │ 4                                                          │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ depth             │ 0.33                                                       │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ width             │ 0.25                                                       │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ act               │ 'silu'                                                     │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ data_num_workers  │ 4                                                          │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ input_size        │ (416, 416)                                                 │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ multiscale_range  │ 5                                                          │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ data_dir          │ '/root/ML/dataset/images'                                  │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ train_ann         │ '/root/ML/dataset/annotations/train_annotations.json'      │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ val_ann           │ '/root/ML/dataset/annotations/validation_annotations.json' │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ test_ann          │ 'instances_test2017.json'                                  │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ mosaic_prob       │ 0.5                                                        │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ mixup_prob        │ 1.0                                                        │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ hsv_prob          │ 1.0                                                        │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ flip_prob         │ 0.5                                                        │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ degrees           │ 10.0                                                       │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ translate         │ 0.1                                                        │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ mosaic_scale      │ (0.5, 1.5)                                                 │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ enable_mixup      │ False                                                      │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ mixup_scale       │ (0.5, 1.5)                                                 │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ shear             │ 2.0                                                        │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ warmup_epochs     │ 5                                                          │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ max_epoch         │ 20                                                         │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ warmup_lr         │ 0                                                          │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ min_lr_ratio      │ 0.05                                                       │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ basic_lr_per_img  │ 0.00015625                                                 │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ scheduler         │ 'yoloxwarmcos'                                             │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ no_aug_epochs     │ 15                                                         │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ ema               │ True                                                       │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ weight_decay      │ 0.0005                                                     │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ momentum          │ 0.9                                                        │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ save_history_ckpt │ True                                                       │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ exp_name          │ 'yolox_nano'                                               │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ test_size         │ (416, 416)                                                 │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ test_conf         │ 0.01                                                       │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ nmsthre           │ 0.65                                                       │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ random_size       │ (10, 20)                                                   │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ data_num_worker   │ 4                                                          │
╘═══════════════════╧════════════════════════════════════════════════════════════╛
2022-12-23 17:31:49.766 | INFO     | yolox.core.trainer:before_train:136 - Model Summary: Params: 0.90M, Gflops: 1.08
2022-12-23 17:31:50.975 | INFO     | yolox.core.trainer:resume_train:311 - loading checkpoint for fine tuning
2022-12-23 17:31:51.054 | WARNING  | yolox.utils.checkpoint:load_ckpt:24 - Shape of head.cls_preds.0.weight in checkpoint is torch.Size([80, 64, 1, 1]), while shape of head.cls_preds.0.weight in model is torch.Size([4, 64, 1, 1]).
2022-12-23 17:31:51.054 | WARNING  | yolox.utils.checkpoint:load_ckpt:24 - Shape of head.cls_preds.0.bias in checkpoint is torch.Size([80]), while shape of head.cls_preds.0.bias in model is torch.Size([4]).
2022-12-23 17:31:51.054 | WARNING  | yolox.utils.checkpoint:load_ckpt:24 - Shape of head.cls_preds.1.weight in checkpoint is torch.Size([80, 64, 1, 1]), while shape of head.cls_preds.1.weight in model is torch.Size([4, 64, 1, 1]).
2022-12-23 17:31:51.055 | WARNING  | yolox.utils.checkpoint:load_ckpt:24 - Shape of head.cls_preds.1.bias in checkpoint is torch.Size([80]), while shape of head.cls_preds.1.bias in model is torch.Size([4]).
2022-12-23 17:31:51.055 | WARNING  | yolox.utils.checkpoint:load_ckpt:24 - Shape of head.cls_preds.2.weight in checkpoint is torch.Size([80, 64, 1, 1]), while shape of head.cls_preds.2.weight in model is torch.Size([4, 64, 1, 1]).
2022-12-23 17:31:51.055 | WARNING  | yolox.utils.checkpoint:load_ckpt:24 - Shape of head.cls_preds.2.bias in checkpoint is torch.Size([80]), while shape of head.cls_preds.2.bias in model is torch.Size([4]).
2022-12-23 17:31:51.067 | INFO     | yolox.data.datasets.coco:__init__:64 - loading annotations into memory...
2022-12-23 17:31:51.068 | INFO     | yolox.data.datasets.coco:__init__:64 - Done (t=0.00s)
2022-12-23 17:31:51.069 | INFO     | pycocotools.coco:__init__:86 - creating index...
2022-12-23 17:31:51.069 | INFO     | pycocotools.coco:__init__:86 - index created!
2022-12-23 17:31:51.077 | INFO     | yolox.core.trainer:before_train:155 - init prefetcher, this might take one minute or less...
2022-12-23 17:31:56.385 | INFO     | yolox.data.datasets.coco:__init__:64 - loading annotations into memory...
2022-12-23 17:31:56.385 | INFO     | yolox.data.datasets.coco:__init__:64 - Done (t=0.00s)
2022-12-23 17:31:56.386 | INFO     | pycocotools.coco:__init__:86 - creating index...
2022-12-23 17:31:56.386 | INFO     | pycocotools.coco:__init__:86 - index created!
2022-12-23 17:31:56.389 | INFO     | yolox.core.trainer:before_train:191 - Training start...
2022-12-23 17:31:56.392 | INFO     | yolox.core.trainer:before_train:192 - 
YOLOX(
  (backbone): YOLOPAFPN(
    (backbone): CSPDarknet(
      (stem): Focus(
        (conv): BaseConv(
          (conv): Conv2d(12, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn): BatchNorm2d(16, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
          (act): SiLU(inplace=True)
        )
      )
      (dark2): Sequential(
        (0): DWConv(
          (dconv): BaseConv(
            (conv): Conv2d(16, 16, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=16, bias=False)
            (bn): BatchNorm2d(16, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
            (act): SiLU(inplace=True)
          )
          (pconv): BaseConv(
            (conv): Conv2d(16, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn): BatchNorm2d(32, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
            (act): SiLU(inplace=True)
          )
        )
        (1): CSPLayer(
          (conv1): BaseConv(
            (conv): Conv2d(32, 16, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn): BatchNorm2d(16, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
            (act): SiLU(inplace=True)
          )
          (conv2): BaseConv(
            (conv): Conv2d(32, 16, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn): BatchNorm2d(16, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
            (act): SiLU(inplace=True)
          )
          (conv3): BaseConv(
            (conv): Conv2d(32, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn): BatchNorm2d(32, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
            (act): SiLU(inplace=True)
          )
          (m): Sequential(
            (0): Bottleneck(
              (conv1): BaseConv(
                (conv): Conv2d(16, 16, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (bn): BatchNorm2d(16, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                (act): SiLU(inplace=True)
              )
              (conv2): DWConv(
                (dconv): BaseConv(
                  (conv): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=16, bias=False)
                  (bn): BatchNorm2d(16, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                  (act): SiLU(inplace=True)
                )
                (pconv): BaseConv(
                  (conv): Conv2d(16, 16, kernel_size=(1, 1), stride=(1, 1), bias=False)
                  (bn): BatchNorm2d(16, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                  (act): SiLU(inplace=True)
                )
              )
            )
          )
        )
      )
      (dark3): Sequential(
        (0): DWConv(
          (dconv): BaseConv(
            (conv): Conv2d(32, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=32, bias=False)
            (bn): BatchNorm2d(32, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
            (act): SiLU(inplace=True)
          )
          (pconv): BaseConv(
            (conv): Conv2d(32, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
            (act): SiLU(inplace=True)
          )
        )
        (1): CSPLayer(
          (conv1): BaseConv(
            (conv): Conv2d(64, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn): BatchNorm2d(32, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
            (act): SiLU(inplace=True)
          )
          (conv2): BaseConv(
            (conv): Conv2d(64, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn): BatchNorm2d(32, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
            (act): SiLU(inplace=True)
          )
          (conv3): BaseConv(
            (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
            (act): SiLU(inplace=True)
          )
          (m): Sequential(
            (0): Bottleneck(
              (conv1): BaseConv(
                (conv): Conv2d(32, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (bn): BatchNorm2d(32, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                (act): SiLU(inplace=True)
              )
              (conv2): DWConv(
                (dconv): BaseConv(
                  (conv): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False)
                  (bn): BatchNorm2d(32, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                  (act): SiLU(inplace=True)
                )
                (pconv): BaseConv(
                  (conv): Conv2d(32, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)
                  (bn): BatchNorm2d(32, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                  (act): SiLU(inplace=True)
                )
              )
            )
            (1): Bottleneck(
              (conv1): BaseConv(
                (conv): Conv2d(32, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (bn): BatchNorm2d(32, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                (act): SiLU(inplace=True)
              )
              (conv2): DWConv(
                (dconv): BaseConv(
                  (conv): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False)
                  (bn): BatchNorm2d(32, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                  (act): SiLU(inplace=True)
                )
                (pconv): BaseConv(
                  (conv): Conv2d(32, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)
                  (bn): BatchNorm2d(32, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                  (act): SiLU(inplace=True)
                )
              )
            )
            (2): Bottleneck(
              (conv1): BaseConv(
                (conv): Conv2d(32, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (bn): BatchNorm2d(32, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                (act): SiLU(inplace=True)
              )
              (conv2): DWConv(
                (dconv): BaseConv(
                  (conv): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False)
                  (bn): BatchNorm2d(32, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                  (act): SiLU(inplace=True)
                )
                (pconv): BaseConv(
                  (conv): Conv2d(32, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)
                  (bn): BatchNorm2d(32, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                  (act): SiLU(inplace=True)
                )
              )
            )
          )
        )
      )
      (dark4): Sequential(
        (0): DWConv(
          (dconv): BaseConv(
            (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=64, bias=False)
            (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
            (act): SiLU(inplace=True)
          )
          (pconv): BaseConv(
            (conv): Conv2d(64, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn): BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
            (act): SiLU(inplace=True)
          )
        )
        (1): CSPLayer(
          (conv1): BaseConv(
            (conv): Conv2d(128, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
            (act): SiLU(inplace=True)
          )
          (conv2): BaseConv(
            (conv): Conv2d(128, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
            (act): SiLU(inplace=True)
          )
          (conv3): BaseConv(
            (conv): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn): BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
            (act): SiLU(inplace=True)
          )
          (m): Sequential(
            (0): Bottleneck(
              (conv1): BaseConv(
                (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                (act): SiLU(inplace=True)
              )
              (conv2): DWConv(
                (dconv): BaseConv(
                  (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=64, bias=False)
                  (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                  (act): SiLU(inplace=True)
                )
                (pconv): BaseConv(
                  (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
                  (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                  (act): SiLU(inplace=True)
                )
              )
            )
            (1): Bottleneck(
              (conv1): BaseConv(
                (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                (act): SiLU(inplace=True)
              )
              (conv2): DWConv(
                (dconv): BaseConv(
                  (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=64, bias=False)
                  (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                  (act): SiLU(inplace=True)
                )
                (pconv): BaseConv(
                  (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
                  (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                  (act): SiLU(inplace=True)
                )
              )
            )
            (2): Bottleneck(
              (conv1): BaseConv(
                (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                (act): SiLU(inplace=True)
              )
              (conv2): DWConv(
                (dconv): BaseConv(
                  (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=64, bias=False)
                  (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                  (act): SiLU(inplace=True)
                )
                (pconv): BaseConv(
                  (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
                  (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                  (act): SiLU(inplace=True)
                )
              )
            )
          )
        )
      )
      (dark5): Sequential(
        (0): DWConv(
          (dconv): BaseConv(
            (conv): Conv2d(128, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=128, bias=False)
            (bn): BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
            (act): SiLU(inplace=True)
          )
          (pconv): BaseConv(
            (conv): Conv2d(128, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn): BatchNorm2d(256, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
            (act): SiLU(inplace=True)
          )
        )
        (1): SPPBottleneck(
          (conv1): BaseConv(
            (conv): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn): BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
            (act): SiLU(inplace=True)
          )
          (m): ModuleList(
            (0): MaxPool2d(kernel_size=5, stride=1, padding=2, dilation=1, ceil_mode=False)
            (1): MaxPool2d(kernel_size=9, stride=1, padding=4, dilation=1, ceil_mode=False)
            (2): MaxPool2d(kernel_size=13, stride=1, padding=6, dilation=1, ceil_mode=False)
          )
          (conv2): BaseConv(
            (conv): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn): BatchNorm2d(256, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
            (act): SiLU(inplace=True)
          )
        )
        (2): CSPLayer(
          (conv1): BaseConv(
            (conv): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn): BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
            (act): SiLU(inplace=True)
          )
          (conv2): BaseConv(
            (conv): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn): BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
            (act): SiLU(inplace=True)
          )
          (conv3): BaseConv(
            (conv): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn): BatchNorm2d(256, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
            (act): SiLU(inplace=True)
          )
          (m): Sequential(
            (0): Bottleneck(
              (conv1): BaseConv(
                (conv): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (bn): BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                (act): SiLU(inplace=True)
              )
              (conv2): DWConv(
                (dconv): BaseConv(
                  (conv): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=128, bias=False)
                  (bn): BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                  (act): SiLU(inplace=True)
                )
                (pconv): BaseConv(
                  (conv): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
                  (bn): BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                  (act): SiLU(inplace=True)
                )
              )
            )
          )
        )
      )
    )
    (upsample): Upsample(scale_factor=2.0, mode=nearest)
    (lateral_conv0): BaseConv(
      (conv): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn): BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
      (act): SiLU(inplace=True)
    )
    (C3_p4): CSPLayer(
      (conv1): BaseConv(
        (conv): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
        (act): SiLU(inplace=True)
      )
      (conv2): BaseConv(
        (conv): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
        (act): SiLU(inplace=True)
      )
      (conv3): BaseConv(
        (conv): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn): BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
        (act): SiLU(inplace=True)
      )
      (m): Sequential(
        (0): Bottleneck(
          (conv1): BaseConv(
            (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
            (act): SiLU(inplace=True)
          )
          (conv2): DWConv(
            (dconv): BaseConv(
              (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=64, bias=False)
              (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): SiLU(inplace=True)
            )
            (pconv): BaseConv(
              (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): SiLU(inplace=True)
            )
          )
        )
      )
    )
    (reduce_conv1): BaseConv(
      (conv): Conv2d(128, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
      (act): SiLU(inplace=True)
    )
    (C3_p3): CSPLayer(
      (conv1): BaseConv(
        (conv): Conv2d(128, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn): BatchNorm2d(32, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
        (act): SiLU(inplace=True)
      )
      (conv2): BaseConv(
        (conv): Conv2d(128, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn): BatchNorm2d(32, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
        (act): SiLU(inplace=True)
      )
      (conv3): BaseConv(
        (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
        (act): SiLU(inplace=True)
      )
      (m): Sequential(
        (0): Bottleneck(
          (conv1): BaseConv(
            (conv): Conv2d(32, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn): BatchNorm2d(32, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
            (act): SiLU(inplace=True)
          )
          (conv2): DWConv(
            (dconv): BaseConv(
              (conv): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False)
              (bn): BatchNorm2d(32, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): SiLU(inplace=True)
            )
            (pconv): BaseConv(
              (conv): Conv2d(32, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (bn): BatchNorm2d(32, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): SiLU(inplace=True)
            )
          )
        )
      )
    )
    (bu_conv2): DWConv(
      (dconv): BaseConv(
        (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=64, bias=False)
        (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
        (act): SiLU(inplace=True)
      )
      (pconv): BaseConv(
        (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
        (act): SiLU(inplace=True)
      )
    )
    (C3_n3): CSPLayer(
      (conv1): BaseConv(
        (conv): Conv2d(128, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
        (act): SiLU(inplace=True)
      )
      (conv2): BaseConv(
        (conv): Conv2d(128, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
        (act): SiLU(inplace=True)
      )
      (conv3): BaseConv(
        (conv): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn): BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
        (act): SiLU(inplace=True)
      )
      (m): Sequential(
        (0): Bottleneck(
          (conv1): BaseConv(
            (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
            (act): SiLU(inplace=True)
          )
          (conv2): DWConv(
            (dconv): BaseConv(
              (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=64, bias=False)
              (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): SiLU(inplace=True)
            )
            (pconv): BaseConv(
              (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): SiLU(inplace=True)
            )
          )
        )
      )
    )
    (bu_conv1): DWConv(
      (dconv): BaseConv(
        (conv): Conv2d(128, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=128, bias=False)
        (bn): BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
        (act): SiLU(inplace=True)
      )
      (pconv): BaseConv(
        (conv): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn): BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
        (act): SiLU(inplace=True)
      )
    )
    (C3_n4): CSPLayer(
      (conv1): BaseConv(
        (conv): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn): BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
        (act): SiLU(inplace=True)
      )
      (conv2): BaseConv(
        (conv): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn): BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
        (act): SiLU(inplace=True)
      )
      (conv3): BaseConv(
        (conv): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn): BatchNorm2d(256, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
        (act): SiLU(inplace=True)
      )
      (m): Sequential(
        (0): Bottleneck(
          (conv1): BaseConv(
            (conv): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn): BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
            (act): SiLU(inplace=True)
          )
          (conv2): DWConv(
            (dconv): BaseConv(
              (conv): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=128, bias=False)
              (bn): BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): SiLU(inplace=True)
            )
            (pconv): BaseConv(
              (conv): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (bn): BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): SiLU(inplace=True)
            )
          )
        )
      )
    )
  )
  (head): YOLOXHead(
    (cls_convs): ModuleList(
      (0): Sequential(
        (0): DWConv(
          (dconv): BaseConv(
            (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=64, bias=False)
            (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
            (act): SiLU(inplace=True)
          )
          (pconv): BaseConv(
            (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
            (act): SiLU(inplace=True)
          )
        )
        (1): DWConv(
          (dconv): BaseConv(
            (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=64, bias=False)
            (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
            (act): SiLU(inplace=True)
          )
          (pconv): BaseConv(
            (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
            (act): SiLU(inplace=True)
          )
        )
      )
      (1): Sequential(
        (0): DWConv(
          (dconv): BaseConv(
            (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=64, bias=False)
            (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
            (act): SiLU(inplace=True)
          )
          (pconv): BaseConv(
            (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
            (act): SiLU(inplace=True)
          )
        )
        (1): DWConv(
          (dconv): BaseConv(
            (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=64, bias=False)
            (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
            (act): SiLU(inplace=True)
          )
          (pconv): BaseConv(
            (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
            (act): SiLU(inplace=True)
          )
        )
      )
      (2): Sequential(
        (0): DWConv(
          (dconv): BaseConv(
            (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=64, bias=False)
            (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
            (act): SiLU(inplace=True)
          )
          (pconv): BaseConv(
            (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
            (act): SiLU(inplace=True)
          )
        )
        (1): DWConv(
          (dconv): BaseConv(
            (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=64, bias=False)
            (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
            (act): SiLU(inplace=True)
          )
          (pconv): BaseConv(
            (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
            (act): SiLU(inplace=True)
          )
        )
      )
    )
    (reg_convs): ModuleList(
      (0): Sequential(
        (0): DWConv(
          (dconv): BaseConv(
            (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=64, bias=False)
            (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
            (act): SiLU(inplace=True)
          )
          (pconv): BaseConv(
            (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
            (act): SiLU(inplace=True)
          )
        )
        (1): DWConv(
          (dconv): BaseConv(
            (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=64, bias=False)
            (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
            (act): SiLU(inplace=True)
          )
          (pconv): BaseConv(
            (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
            (act): SiLU(inplace=True)
          )
        )
      )
      (1): Sequential(
        (0): DWConv(
          (dconv): BaseConv(
            (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=64, bias=False)
            (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
            (act): SiLU(inplace=True)
          )
          (pconv): BaseConv(
            (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
            (act): SiLU(inplace=True)
          )
        )
        (1): DWConv(
          (dconv): BaseConv(
            (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=64, bias=False)
            (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
            (act): SiLU(inplace=True)
          )
          (pconv): BaseConv(
            (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
            (act): SiLU(inplace=True)
          )
        )
      )
      (2): Sequential(
        (0): DWConv(
          (dconv): BaseConv(
            (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=64, bias=False)
            (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
            (act): SiLU(inplace=True)
          )
          (pconv): BaseConv(
            (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
            (act): SiLU(inplace=True)
          )
        )
        (1): DWConv(
          (dconv): BaseConv(
            (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=64, bias=False)
            (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
            (act): SiLU(inplace=True)
          )
          (pconv): BaseConv(
            (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
            (act): SiLU(inplace=True)
          )
        )
      )
    )
    (cls_preds): ModuleList(
      (0): Conv2d(64, 4, kernel_size=(1, 1), stride=(1, 1))
      (1): Conv2d(64, 4, kernel_size=(1, 1), stride=(1, 1))
      (2): Conv2d(64, 4, kernel_size=(1, 1), stride=(1, 1))
    )
    (reg_preds): ModuleList(
      (0): Conv2d(64, 4, kernel_size=(1, 1), stride=(1, 1))
      (1): Conv2d(64, 4, kernel_size=(1, 1), stride=(1, 1))
      (2): Conv2d(64, 4, kernel_size=(1, 1), stride=(1, 1))
    )
    (obj_preds): ModuleList(
      (0): Conv2d(64, 1, kernel_size=(1, 1), stride=(1, 1))
      (1): Conv2d(64, 1, kernel_size=(1, 1), stride=(1, 1))
      (2): Conv2d(64, 1, kernel_size=(1, 1), stride=(1, 1))
    )
    (stems): ModuleList(
      (0): BaseConv(
        (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
        (act): SiLU(inplace=True)
      )
      (1): BaseConv(
        (conv): Conv2d(128, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
        (act): SiLU(inplace=True)
      )
      (2): BaseConv(
        (conv): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
        (act): SiLU(inplace=True)
      )
    )
    (l1_loss): L1Loss()
    (bcewithlog_loss): BCEWithLogitsLoss()
    (iou_loss): IOUloss()
  )
)
2022-12-23 17:31:56.392 | INFO     | yolox.core.trainer:before_epoch:203 - ---> start train epoch1
2022-12-23 17:31:57.857 | INFO     | yolox.core.trainer:after_train:195 - Training of experiment is done and the best AP is 0.00
2022-12-23 17:31:57.857 | ERROR    | yolox.core.launch:launch:98 - An error has been caught in function 'launch', process 'MainProcess' (5320), thread 'MainThread' (140647513605952):
Traceback (most recent call last):

  File "/root/YOLOX/tools/train.py", line 134, in <module>
    launch(
    └ <function launch at 0x7fea7d131940>

> File "/root/YOLOX/yolox/core/launch.py", line 98, in launch
    main_func(*args)
    │          └ (╒═══════════════════╤═══════════════════════════════════════════════════════════════════════════════════════════════════════...
    └ <function main at 0x7fea701e50d0>

  File "/root/YOLOX/tools/train.py", line 118, in main
    trainer.train()
    │       └ <function Trainer.train at 0x7fea6f847dc0>
    └ <yolox.core.trainer.Trainer object at 0x7fea6f894f70>

  File "/root/YOLOX/yolox/core/trainer.py", line 76, in train
    self.train_in_epoch()
    │    └ <function Trainer.train_in_epoch at 0x7fea6f84e4c0>
    └ <yolox.core.trainer.Trainer object at 0x7fea6f894f70>

  File "/root/YOLOX/yolox/core/trainer.py", line 85, in train_in_epoch
    self.train_in_iter()
    │    └ <function Trainer.train_in_iter at 0x7fea6f84e550>
    └ <yolox.core.trainer.Trainer object at 0x7fea6f894f70>

  File "/root/YOLOX/yolox/core/trainer.py", line 91, in train_in_iter
    self.train_one_iter()
    │    └ <function Trainer.train_one_iter at 0x7fea6f84e5e0>
    └ <yolox.core.trainer.Trainer object at 0x7fea6f894f70>

  File "/root/YOLOX/yolox/core/trainer.py", line 105, in train_one_iter
    outputs = self.model(inps, targets)
              │    │     │     └ tensor([[[  0.0000, 346.2500,  85.5625,  14.1094,  24.3594],
              │    │     │                [  0.0000,  93.0625,  69.4375,  12.3203,  32.4062],
              │    │     │          ...
              │    │     └ tensor([[[[114., 114., 114.,  ..., 114., 114., 114.],
              │    │                 [114., 114., 114.,  ..., 114., 114., 114.],
              │    │                 [114., ...
              │    └ YOLOX(
              │        (backbone): YOLOPAFPN(
              │          (backbone): CSPDarknet(
              │            (stem): Focus(
              │              (conv): BaseConv(
              │                (conv): ...
              └ <yolox.core.trainer.Trainer object at 0x7fea6f894f70>

  File "/usr/local/lib/python3.8/dist-packages/torch/nn/modules/module.py", line 1190, in _call_impl
    return forward_call(*input, **kwargs)
           │             │        └ {}
           │             └ (tensor([[[[114., 114., 114.,  ..., 114., 114., 114.],
           │                         [114., 114., 114.,  ..., 114., 114., 114.],
           │                         [114.,...
           └ <bound method YOLOX.forward of YOLOX(
               (backbone): YOLOPAFPN(
                 (backbone): CSPDarknet(
                   (stem): Focus(
                     (conv...

  File "/root/YOLOX/yolox/models/yolox.py", line 34, in forward
    loss, iou_loss, conf_loss, cls_loss, l1_loss, num_fg = self.head(
                                                           └ YOLOX(
                                                               (backbone): YOLOPAFPN(
                                                                 (backbone): CSPDarknet(
                                                                   (stem): Focus(
                                                                     (conv): BaseConv(
                                                                       (conv): ...

  File "/usr/local/lib/python3.8/dist-packages/torch/nn/modules/module.py", line 1190, in _call_impl
    return forward_call(*input, **kwargs)
           │             │        └ {}
           │             └ ((tensor([[[[ 1.3174e+00, -2.7515e-01, -2.5684e-01,  ..., -1.5369e-01,
           │                           1.3708e-01,  5.9961e-01],
           │                         [ 1.02...
           └ <bound method YOLOXHead.forward of YOLOXHead(
               (cls_convs): ModuleList(
                 (0): Sequential(
                   (0): DWConv(
                     (dco...

  File "/root/YOLOX/yolox/models/yolo_head.py", line 160, in forward
    reg_feat = reg_conv(reg_x)
               │        └ <unprintable Tensor object>
               └ Sequential(
                   (0): DWConv(
                     (dconv): BaseConv(
                       (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1,...

  File "/usr/local/lib/python3.8/dist-packages/torch/nn/modules/module.py", line 1190, in _call_impl
    return forward_call(*input, **kwargs)
           │             │        └ {}
           │             └ <unprintable tuple object>
           └ <bound method Sequential.forward of Sequential(
               (0): DWConv(
                 (dconv): BaseConv(
                   (conv): Conv2d(64, 64, kernel_siz...

  File "/usr/local/lib/python3.8/dist-packages/torch/nn/modules/container.py", line 204, in forward
    input = module(input)
            │      └ <unprintable Tensor object>
            └ DWConv(
                (dconv): BaseConv(
                  (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=64, bias=Fa...

  File "/usr/local/lib/python3.8/dist-packages/torch/nn/modules/module.py", line 1190, in _call_impl
    return forward_call(*input, **kwargs)
           │             │        └ {}
           │             └ <unprintable tuple object>
           └ <bound method DWConv.forward of DWConv(
               (dconv): BaseConv(
                 (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), pa...

  File "/root/YOLOX/yolox/models/network_blocks.py", line 75, in forward
    x = self.dconv(x)
        │          └ <unprintable Tensor object>
        └ DWConv(
            (dconv): BaseConv(
              (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=64, bias=Fa...

  File "/usr/local/lib/python3.8/dist-packages/torch/nn/modules/module.py", line 1190, in _call_impl
    return forward_call(*input, **kwargs)
           │             │        └ {}
           │             └ <unprintable tuple object>
           └ <bound method BaseConv.forward of BaseConv(
               (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), group...

  File "/root/YOLOX/yolox/models/network_blocks.py", line 51, in forward
    return self.act(self.bn(self.conv(x)))
           │        │       │         └ <unprintable Tensor object>
           │        │       └ BaseConv(
           │        │           (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=64, bias=False)
           │        │           (bn): BatchNor...
           │        └ BaseConv(
           │            (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=64, bias=False)
           │            (bn): BatchNor...
           └ BaseConv(
               (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=64, bias=False)
               (bn): BatchNor...

  File "/usr/local/lib/python3.8/dist-packages/torch/nn/modules/module.py", line 1190, in _call_impl
    return forward_call(*input, **kwargs)
           │             │        └ {}
           │             └ <unprintable tuple object>
           └ <bound method SiLU.forward of SiLU(inplace=True)>

  File "/usr/local/lib/python3.8/dist-packages/torch/nn/modules/activation.py", line 395, in forward
    return F.silu(input, inplace=self.inplace)
           │ │    │              │    └ True
           │ │    │              └ SiLU(inplace=True)
           │ │    └ <unprintable Tensor object>
           │ └ <function silu at 0x7fea7e08fdc0>
           └ <module 'torch.nn.functional' from '/usr/local/lib/python3.8/dist-packages/torch/nn/functional.py'>

  File "/usr/local/lib/python3.8/dist-packages/torch/nn/functional.py", line 2058, in silu
    return torch._C._nn.silu_(input)
           │     │  │   │     └ <unprintable Tensor object>
           │     │  │   └ <built-in function silu_>
           │     │  └ <module 'torch._C._nn'>
           │     └ <module 'torch._C' from '/usr/local/lib/python3.8/dist-packages/torch/_C.cpython-38-x86_64-linux-gnu.so'>
           └ <module 'torch' from '/usr/local/lib/python3.8/dist-packages/torch/__init__.py'>

torch.cuda.OutOfMemoryError: CUDA out of memory. Tried to allocate 2.00 MiB (GPU 0; 7.79 GiB total capacity; 436.95 MiB already allocated; 2.50 MiB free; 6.72 GiB reserved in total by PyTorch) If reserved memory is >> allocated memory try setting max_split_size_mb to avoid fragmentation.  See documentation for Memory Management and PYTORCH_CUDA_ALLOC_CONF
2022-12-23 17:39:08.064 | INFO     | yolox.core.trainer:before_train:130 - args: Namespace(batch_size=2, cache=False, ckpt='/root/YOLOX/yolox_nano.pth', devices=1, dist_backend='nccl', dist_url=None, exp_file='/root/YOLOX/yolox_nano.py', experiment_name='yolox_nano', fp16=True, logger='tensorboard', machine_rank=0, name=None, num_machines=1, occupy=True, opts=[], resume=False, start_epoch=None)
2022-12-23 17:39:08.067 | INFO     | yolox.core.trainer:before_train:131 - exp value:
╒═══════════════════╤════════════════════════════════════════════════════════════╕
│ keys              │ values                                                     │
╞═══════════════════╪════════════════════════════════════════════════════════════╡
│ seed              │ None                                                       │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ output_dir        │ './YOLOX_outputs'                                          │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ print_interval    │ 10                                                         │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ eval_interval     │ 1                                                          │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ num_classes       │ 4                                                          │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ depth             │ 0.33                                                       │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ width             │ 0.25                                                       │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ act               │ 'silu'                                                     │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ data_num_workers  │ 4                                                          │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ input_size        │ (416, 416)                                                 │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ multiscale_range  │ 5                                                          │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ data_dir          │ '/root/ML/dataset/images'                                  │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ train_ann         │ '/root/ML/dataset/annotations/train_annotations.json'      │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ val_ann           │ '/root/ML/dataset/annotations/validation_annotations.json' │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ test_ann          │ 'instances_test2017.json'                                  │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ mosaic_prob       │ 0.5                                                        │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ mixup_prob        │ 1.0                                                        │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ hsv_prob          │ 1.0                                                        │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ flip_prob         │ 0.5                                                        │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ degrees           │ 10.0                                                       │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ translate         │ 0.1                                                        │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ mosaic_scale      │ (0.5, 1.5)                                                 │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ enable_mixup      │ False                                                      │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ mixup_scale       │ (0.5, 1.5)                                                 │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ shear             │ 2.0                                                        │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ warmup_epochs     │ 5                                                          │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ max_epoch         │ 20                                                         │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ warmup_lr         │ 0                                                          │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ min_lr_ratio      │ 0.05                                                       │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ basic_lr_per_img  │ 0.00015625                                                 │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ scheduler         │ 'yoloxwarmcos'                                             │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ no_aug_epochs     │ 15                                                         │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ ema               │ True                                                       │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ weight_decay      │ 0.0005                                                     │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ momentum          │ 0.9                                                        │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ save_history_ckpt │ True                                                       │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ exp_name          │ 'yolox_nano'                                               │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ test_size         │ (416, 416)                                                 │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ test_conf         │ 0.01                                                       │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ nmsthre           │ 0.65                                                       │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ random_size       │ (10, 20)                                                   │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ data_num_worker   │ 4                                                          │
╘═══════════════════╧════════════════════════════════════════════════════════════╛
2022-12-23 17:39:08.186 | INFO     | yolox.core.trainer:before_train:136 - Model Summary: Params: 0.90M, Gflops: 1.08
2022-12-23 17:39:09.381 | INFO     | yolox.core.trainer:resume_train:311 - loading checkpoint for fine tuning
2022-12-23 17:39:09.457 | WARNING  | yolox.utils.checkpoint:load_ckpt:24 - Shape of head.cls_preds.0.weight in checkpoint is torch.Size([80, 64, 1, 1]), while shape of head.cls_preds.0.weight in model is torch.Size([4, 64, 1, 1]).
2022-12-23 17:39:09.457 | WARNING  | yolox.utils.checkpoint:load_ckpt:24 - Shape of head.cls_preds.0.bias in checkpoint is torch.Size([80]), while shape of head.cls_preds.0.bias in model is torch.Size([4]).
2022-12-23 17:39:09.458 | WARNING  | yolox.utils.checkpoint:load_ckpt:24 - Shape of head.cls_preds.1.weight in checkpoint is torch.Size([80, 64, 1, 1]), while shape of head.cls_preds.1.weight in model is torch.Size([4, 64, 1, 1]).
2022-12-23 17:39:09.458 | WARNING  | yolox.utils.checkpoint:load_ckpt:24 - Shape of head.cls_preds.1.bias in checkpoint is torch.Size([80]), while shape of head.cls_preds.1.bias in model is torch.Size([4]).
2022-12-23 17:39:09.458 | WARNING  | yolox.utils.checkpoint:load_ckpt:24 - Shape of head.cls_preds.2.weight in checkpoint is torch.Size([80, 64, 1, 1]), while shape of head.cls_preds.2.weight in model is torch.Size([4, 64, 1, 1]).
2022-12-23 17:39:09.458 | WARNING  | yolox.utils.checkpoint:load_ckpt:24 - Shape of head.cls_preds.2.bias in checkpoint is torch.Size([80]), while shape of head.cls_preds.2.bias in model is torch.Size([4]).
2022-12-23 17:39:09.475 | INFO     | yolox.data.datasets.coco:__init__:64 - loading annotations into memory...
2022-12-23 17:39:09.476 | INFO     | yolox.data.datasets.coco:__init__:64 - Done (t=0.00s)
2022-12-23 17:39:09.476 | INFO     | pycocotools.coco:__init__:86 - creating index...
2022-12-23 17:39:09.477 | INFO     | pycocotools.coco:__init__:86 - index created!
2022-12-23 17:39:09.485 | INFO     | yolox.core.trainer:before_train:155 - init prefetcher, this might take one minute or less...
2022-12-23 17:39:14.760 | INFO     | yolox.data.datasets.coco:__init__:64 - loading annotations into memory...
2022-12-23 17:39:14.761 | INFO     | yolox.data.datasets.coco:__init__:64 - Done (t=0.00s)
2022-12-23 17:39:14.761 | INFO     | pycocotools.coco:__init__:86 - creating index...
2022-12-23 17:39:14.762 | INFO     | pycocotools.coco:__init__:86 - index created!
2022-12-23 17:39:14.766 | INFO     | yolox.core.trainer:before_train:191 - Training start...
2022-12-23 17:39:14.768 | INFO     | yolox.core.trainer:before_train:192 - 
YOLOX(
  (backbone): YOLOPAFPN(
    (backbone): CSPDarknet(
      (stem): Focus(
        (conv): BaseConv(
          (conv): Conv2d(12, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn): BatchNorm2d(16, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
          (act): SiLU(inplace=True)
        )
      )
      (dark2): Sequential(
        (0): DWConv(
          (dconv): BaseConv(
            (conv): Conv2d(16, 16, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=16, bias=False)
            (bn): BatchNorm2d(16, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
            (act): SiLU(inplace=True)
          )
          (pconv): BaseConv(
            (conv): Conv2d(16, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn): BatchNorm2d(32, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
            (act): SiLU(inplace=True)
          )
        )
        (1): CSPLayer(
          (conv1): BaseConv(
            (conv): Conv2d(32, 16, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn): BatchNorm2d(16, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
            (act): SiLU(inplace=True)
          )
          (conv2): BaseConv(
            (conv): Conv2d(32, 16, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn): BatchNorm2d(16, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
            (act): SiLU(inplace=True)
          )
          (conv3): BaseConv(
            (conv): Conv2d(32, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn): BatchNorm2d(32, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
            (act): SiLU(inplace=True)
          )
          (m): Sequential(
            (0): Bottleneck(
              (conv1): BaseConv(
                (conv): Conv2d(16, 16, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (bn): BatchNorm2d(16, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                (act): SiLU(inplace=True)
              )
              (conv2): DWConv(
                (dconv): BaseConv(
                  (conv): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=16, bias=False)
                  (bn): BatchNorm2d(16, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                  (act): SiLU(inplace=True)
                )
                (pconv): BaseConv(
                  (conv): Conv2d(16, 16, kernel_size=(1, 1), stride=(1, 1), bias=False)
                  (bn): BatchNorm2d(16, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                  (act): SiLU(inplace=True)
                )
              )
            )
          )
        )
      )
      (dark3): Sequential(
        (0): DWConv(
          (dconv): BaseConv(
            (conv): Conv2d(32, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=32, bias=False)
            (bn): BatchNorm2d(32, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
            (act): SiLU(inplace=True)
          )
          (pconv): BaseConv(
            (conv): Conv2d(32, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
            (act): SiLU(inplace=True)
          )
        )
        (1): CSPLayer(
          (conv1): BaseConv(
            (conv): Conv2d(64, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn): BatchNorm2d(32, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
            (act): SiLU(inplace=True)
          )
          (conv2): BaseConv(
            (conv): Conv2d(64, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn): BatchNorm2d(32, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
            (act): SiLU(inplace=True)
          )
          (conv3): BaseConv(
            (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
            (act): SiLU(inplace=True)
          )
          (m): Sequential(
            (0): Bottleneck(
              (conv1): BaseConv(
                (conv): Conv2d(32, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (bn): BatchNorm2d(32, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                (act): SiLU(inplace=True)
              )
              (conv2): DWConv(
                (dconv): BaseConv(
                  (conv): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False)
                  (bn): BatchNorm2d(32, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                  (act): SiLU(inplace=True)
                )
                (pconv): BaseConv(
                  (conv): Conv2d(32, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)
                  (bn): BatchNorm2d(32, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                  (act): SiLU(inplace=True)
                )
              )
            )
            (1): Bottleneck(
              (conv1): BaseConv(
                (conv): Conv2d(32, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (bn): BatchNorm2d(32, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                (act): SiLU(inplace=True)
              )
              (conv2): DWConv(
                (dconv): BaseConv(
                  (conv): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False)
                  (bn): BatchNorm2d(32, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                  (act): SiLU(inplace=True)
                )
                (pconv): BaseConv(
                  (conv): Conv2d(32, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)
                  (bn): BatchNorm2d(32, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                  (act): SiLU(inplace=True)
                )
              )
            )
            (2): Bottleneck(
              (conv1): BaseConv(
                (conv): Conv2d(32, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (bn): BatchNorm2d(32, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                (act): SiLU(inplace=True)
              )
              (conv2): DWConv(
                (dconv): BaseConv(
                  (conv): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False)
                  (bn): BatchNorm2d(32, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                  (act): SiLU(inplace=True)
                )
                (pconv): BaseConv(
                  (conv): Conv2d(32, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)
                  (bn): BatchNorm2d(32, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                  (act): SiLU(inplace=True)
                )
              )
            )
          )
        )
      )
      (dark4): Sequential(
        (0): DWConv(
          (dconv): BaseConv(
            (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=64, bias=False)
            (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
            (act): SiLU(inplace=True)
          )
          (pconv): BaseConv(
            (conv): Conv2d(64, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn): BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
            (act): SiLU(inplace=True)
          )
        )
        (1): CSPLayer(
          (conv1): BaseConv(
            (conv): Conv2d(128, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
            (act): SiLU(inplace=True)
          )
          (conv2): BaseConv(
            (conv): Conv2d(128, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
            (act): SiLU(inplace=True)
          )
          (conv3): BaseConv(
            (conv): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn): BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
            (act): SiLU(inplace=True)
          )
          (m): Sequential(
            (0): Bottleneck(
              (conv1): BaseConv(
                (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                (act): SiLU(inplace=True)
              )
              (conv2): DWConv(
                (dconv): BaseConv(
                  (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=64, bias=False)
                  (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                  (act): SiLU(inplace=True)
                )
                (pconv): BaseConv(
                  (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
                  (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                  (act): SiLU(inplace=True)
                )
              )
            )
            (1): Bottleneck(
              (conv1): BaseConv(
                (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                (act): SiLU(inplace=True)
              )
              (conv2): DWConv(
                (dconv): BaseConv(
                  (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=64, bias=False)
                  (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                  (act): SiLU(inplace=True)
                )
                (pconv): BaseConv(
                  (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
                  (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                  (act): SiLU(inplace=True)
                )
              )
            )
            (2): Bottleneck(
              (conv1): BaseConv(
                (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                (act): SiLU(inplace=True)
              )
              (conv2): DWConv(
                (dconv): BaseConv(
                  (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=64, bias=False)
                  (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                  (act): SiLU(inplace=True)
                )
                (pconv): BaseConv(
                  (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
                  (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                  (act): SiLU(inplace=True)
                )
              )
            )
          )
        )
      )
      (dark5): Sequential(
        (0): DWConv(
          (dconv): BaseConv(
            (conv): Conv2d(128, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=128, bias=False)
            (bn): BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
            (act): SiLU(inplace=True)
          )
          (pconv): BaseConv(
            (conv): Conv2d(128, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn): BatchNorm2d(256, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
            (act): SiLU(inplace=True)
          )
        )
        (1): SPPBottleneck(
          (conv1): BaseConv(
            (conv): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn): BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
            (act): SiLU(inplace=True)
          )
          (m): ModuleList(
            (0): MaxPool2d(kernel_size=5, stride=1, padding=2, dilation=1, ceil_mode=False)
            (1): MaxPool2d(kernel_size=9, stride=1, padding=4, dilation=1, ceil_mode=False)
            (2): MaxPool2d(kernel_size=13, stride=1, padding=6, dilation=1, ceil_mode=False)
          )
          (conv2): BaseConv(
            (conv): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn): BatchNorm2d(256, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
            (act): SiLU(inplace=True)
          )
        )
        (2): CSPLayer(
          (conv1): BaseConv(
            (conv): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn): BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
            (act): SiLU(inplace=True)
          )
          (conv2): BaseConv(
            (conv): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn): BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
            (act): SiLU(inplace=True)
          )
          (conv3): BaseConv(
            (conv): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn): BatchNorm2d(256, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
            (act): SiLU(inplace=True)
          )
          (m): Sequential(
            (0): Bottleneck(
              (conv1): BaseConv(
                (conv): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (bn): BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                (act): SiLU(inplace=True)
              )
              (conv2): DWConv(
                (dconv): BaseConv(
                  (conv): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=128, bias=False)
                  (bn): BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                  (act): SiLU(inplace=True)
                )
                (pconv): BaseConv(
                  (conv): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
                  (bn): BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                  (act): SiLU(inplace=True)
                )
              )
            )
          )
        )
      )
    )
    (upsample): Upsample(scale_factor=2.0, mode=nearest)
    (lateral_conv0): BaseConv(
      (conv): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn): BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
      (act): SiLU(inplace=True)
    )
    (C3_p4): CSPLayer(
      (conv1): BaseConv(
        (conv): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
        (act): SiLU(inplace=True)
      )
      (conv2): BaseConv(
        (conv): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
        (act): SiLU(inplace=True)
      )
      (conv3): BaseConv(
        (conv): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn): BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
        (act): SiLU(inplace=True)
      )
      (m): Sequential(
        (0): Bottleneck(
          (conv1): BaseConv(
            (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
            (act): SiLU(inplace=True)
          )
          (conv2): DWConv(
            (dconv): BaseConv(
              (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=64, bias=False)
              (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): SiLU(inplace=True)
            )
            (pconv): BaseConv(
              (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): SiLU(inplace=True)
            )
          )
        )
      )
    )
    (reduce_conv1): BaseConv(
      (conv): Conv2d(128, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
      (act): SiLU(inplace=True)
    )
    (C3_p3): CSPLayer(
      (conv1): BaseConv(
        (conv): Conv2d(128, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn): BatchNorm2d(32, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
        (act): SiLU(inplace=True)
      )
      (conv2): BaseConv(
        (conv): Conv2d(128, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn): BatchNorm2d(32, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
        (act): SiLU(inplace=True)
      )
      (conv3): BaseConv(
        (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
        (act): SiLU(inplace=True)
      )
      (m): Sequential(
        (0): Bottleneck(
          (conv1): BaseConv(
            (conv): Conv2d(32, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn): BatchNorm2d(32, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
            (act): SiLU(inplace=True)
          )
          (conv2): DWConv(
            (dconv): BaseConv(
              (conv): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False)
              (bn): BatchNorm2d(32, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): SiLU(inplace=True)
            )
            (pconv): BaseConv(
              (conv): Conv2d(32, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (bn): BatchNorm2d(32, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): SiLU(inplace=True)
            )
          )
        )
      )
    )
    (bu_conv2): DWConv(
      (dconv): BaseConv(
        (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=64, bias=False)
        (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
        (act): SiLU(inplace=True)
      )
      (pconv): BaseConv(
        (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
        (act): SiLU(inplace=True)
      )
    )
    (C3_n3): CSPLayer(
      (conv1): BaseConv(
        (conv): Conv2d(128, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
        (act): SiLU(inplace=True)
      )
      (conv2): BaseConv(
        (conv): Conv2d(128, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
        (act): SiLU(inplace=True)
      )
      (conv3): BaseConv(
        (conv): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn): BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
        (act): SiLU(inplace=True)
      )
      (m): Sequential(
        (0): Bottleneck(
          (conv1): BaseConv(
            (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
            (act): SiLU(inplace=True)
          )
          (conv2): DWConv(
            (dconv): BaseConv(
              (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=64, bias=False)
              (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): SiLU(inplace=True)
            )
            (pconv): BaseConv(
              (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): SiLU(inplace=True)
            )
          )
        )
      )
    )
    (bu_conv1): DWConv(
      (dconv): BaseConv(
        (conv): Conv2d(128, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=128, bias=False)
        (bn): BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
        (act): SiLU(inplace=True)
      )
      (pconv): BaseConv(
        (conv): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn): BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
        (act): SiLU(inplace=True)
      )
    )
    (C3_n4): CSPLayer(
      (conv1): BaseConv(
        (conv): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn): BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
        (act): SiLU(inplace=True)
      )
      (conv2): BaseConv(
        (conv): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn): BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
        (act): SiLU(inplace=True)
      )
      (conv3): BaseConv(
        (conv): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn): BatchNorm2d(256, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
        (act): SiLU(inplace=True)
      )
      (m): Sequential(
        (0): Bottleneck(
          (conv1): BaseConv(
            (conv): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn): BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
            (act): SiLU(inplace=True)
          )
          (conv2): DWConv(
            (dconv): BaseConv(
              (conv): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=128, bias=False)
              (bn): BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): SiLU(inplace=True)
            )
            (pconv): BaseConv(
              (conv): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (bn): BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): SiLU(inplace=True)
            )
          )
        )
      )
    )
  )
  (head): YOLOXHead(
    (cls_convs): ModuleList(
      (0): Sequential(
        (0): DWConv(
          (dconv): BaseConv(
            (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=64, bias=False)
            (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
            (act): SiLU(inplace=True)
          )
          (pconv): BaseConv(
            (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
            (act): SiLU(inplace=True)
          )
        )
        (1): DWConv(
          (dconv): BaseConv(
            (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=64, bias=False)
            (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
            (act): SiLU(inplace=True)
          )
          (pconv): BaseConv(
            (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
            (act): SiLU(inplace=True)
          )
        )
      )
      (1): Sequential(
        (0): DWConv(
          (dconv): BaseConv(
            (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=64, bias=False)
            (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
            (act): SiLU(inplace=True)
          )
          (pconv): BaseConv(
            (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
            (act): SiLU(inplace=True)
          )
        )
        (1): DWConv(
          (dconv): BaseConv(
            (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=64, bias=False)
            (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
            (act): SiLU(inplace=True)
          )
          (pconv): BaseConv(
            (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
            (act): SiLU(inplace=True)
          )
        )
      )
      (2): Sequential(
        (0): DWConv(
          (dconv): BaseConv(
            (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=64, bias=False)
            (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
            (act): SiLU(inplace=True)
          )
          (pconv): BaseConv(
            (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
            (act): SiLU(inplace=True)
          )
        )
        (1): DWConv(
          (dconv): BaseConv(
            (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=64, bias=False)
            (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
            (act): SiLU(inplace=True)
          )
          (pconv): BaseConv(
            (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
            (act): SiLU(inplace=True)
          )
        )
      )
    )
    (reg_convs): ModuleList(
      (0): Sequential(
        (0): DWConv(
          (dconv): BaseConv(
            (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=64, bias=False)
            (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
            (act): SiLU(inplace=True)
          )
          (pconv): BaseConv(
            (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
            (act): SiLU(inplace=True)
          )
        )
        (1): DWConv(
          (dconv): BaseConv(
            (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=64, bias=False)
            (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
            (act): SiLU(inplace=True)
          )
          (pconv): BaseConv(
            (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
            (act): SiLU(inplace=True)
          )
        )
      )
      (1): Sequential(
        (0): DWConv(
          (dconv): BaseConv(
            (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=64, bias=False)
            (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
            (act): SiLU(inplace=True)
          )
          (pconv): BaseConv(
            (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
            (act): SiLU(inplace=True)
          )
        )
        (1): DWConv(
          (dconv): BaseConv(
            (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=64, bias=False)
            (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
            (act): SiLU(inplace=True)
          )
          (pconv): BaseConv(
            (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
            (act): SiLU(inplace=True)
          )
        )
      )
      (2): Sequential(
        (0): DWConv(
          (dconv): BaseConv(
            (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=64, bias=False)
            (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
            (act): SiLU(inplace=True)
          )
          (pconv): BaseConv(
            (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
            (act): SiLU(inplace=True)
          )
        )
        (1): DWConv(
          (dconv): BaseConv(
            (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=64, bias=False)
            (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
            (act): SiLU(inplace=True)
          )
          (pconv): BaseConv(
            (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
            (act): SiLU(inplace=True)
          )
        )
      )
    )
    (cls_preds): ModuleList(
      (0): Conv2d(64, 4, kernel_size=(1, 1), stride=(1, 1))
      (1): Conv2d(64, 4, kernel_size=(1, 1), stride=(1, 1))
      (2): Conv2d(64, 4, kernel_size=(1, 1), stride=(1, 1))
    )
    (reg_preds): ModuleList(
      (0): Conv2d(64, 4, kernel_size=(1, 1), stride=(1, 1))
      (1): Conv2d(64, 4, kernel_size=(1, 1), stride=(1, 1))
      (2): Conv2d(64, 4, kernel_size=(1, 1), stride=(1, 1))
    )
    (obj_preds): ModuleList(
      (0): Conv2d(64, 1, kernel_size=(1, 1), stride=(1, 1))
      (1): Conv2d(64, 1, kernel_size=(1, 1), stride=(1, 1))
      (2): Conv2d(64, 1, kernel_size=(1, 1), stride=(1, 1))
    )
    (stems): ModuleList(
      (0): BaseConv(
        (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
        (act): SiLU(inplace=True)
      )
      (1): BaseConv(
        (conv): Conv2d(128, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
        (act): SiLU(inplace=True)
      )
      (2): BaseConv(
        (conv): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
        (act): SiLU(inplace=True)
      )
    )
    (l1_loss): L1Loss()
    (bcewithlog_loss): BCEWithLogitsLoss()
    (iou_loss): IOUloss()
  )
)
2022-12-23 17:39:14.768 | INFO     | yolox.core.trainer:before_epoch:203 - ---> start train epoch1
2022-12-23 17:39:16.304 | INFO     | yolox.core.trainer:after_train:195 - Training of experiment is done and the best AP is 0.00
2022-12-23 17:39:16.305 | ERROR    | yolox.core.launch:launch:98 - An error has been caught in function 'launch', process 'MainProcess' (11862), thread 'MainThread' (140241447806784):
Traceback (most recent call last):

  File "/root/YOLOX/tools/train.py", line 134, in <module>
    launch(
    └ <function launch at 0x7f8bf1aab940>

> File "/root/YOLOX/yolox/core/launch.py", line 98, in launch
    main_func(*args)
    │          └ (╒═══════════════════╤═══════════════════════════════════════════════════════════════════════════════════════════════════════...
    └ <function main at 0x7f8be4b5f0d0>

  File "/root/YOLOX/tools/train.py", line 118, in main
    trainer.train()
    │       └ <function Trainer.train at 0x7f8be41c1dc0>
    └ <yolox.core.trainer.Trainer object at 0x7f8be420ef70>

  File "/root/YOLOX/yolox/core/trainer.py", line 76, in train
    self.train_in_epoch()
    │    └ <function Trainer.train_in_epoch at 0x7f8be41c84c0>
    └ <yolox.core.trainer.Trainer object at 0x7f8be420ef70>

  File "/root/YOLOX/yolox/core/trainer.py", line 85, in train_in_epoch
    self.train_in_iter()
    │    └ <function Trainer.train_in_iter at 0x7f8be41c8550>
    └ <yolox.core.trainer.Trainer object at 0x7f8be420ef70>

  File "/root/YOLOX/yolox/core/trainer.py", line 91, in train_in_iter
    self.train_one_iter()
    │    └ <function Trainer.train_one_iter at 0x7f8be41c85e0>
    └ <yolox.core.trainer.Trainer object at 0x7f8be420ef70>

  File "/root/YOLOX/yolox/core/trainer.py", line 110, in train_one_iter
    self.scaler.scale(loss).backward()
    │    │      │     └ tensor(15.8852, device='cuda:0', grad_fn=<AddBackward0>)
    │    │      └ <function GradScaler.scale at 0x7f8bf2d54820>
    │    └ <torch.cuda.amp.grad_scaler.GradScaler object at 0x7f8be420efd0>
    └ <yolox.core.trainer.Trainer object at 0x7f8be420ef70>

  File "/usr/local/lib/python3.8/dist-packages/torch/_tensor.py", line 487, in backward
    torch.autograd.backward(
    │     │        └ <function backward at 0x7f8bf2a59670>
    │     └ <module 'torch.autograd' from '/usr/local/lib/python3.8/dist-packages/torch/autograd/__init__.py'>
    └ <module 'torch' from '/usr/local/lib/python3.8/dist-packages/torch/__init__.py'>

  File "/usr/local/lib/python3.8/dist-packages/torch/autograd/__init__.py", line 197, in backward
    Variable._execution_engine.run_backward(  # Calls into the C++ engine to run the backward pass
    │        │                 └ <method 'run_backward' of 'torch._C._EngineBase' objects>
    │        └ <torch._C._EngineBase object at 0x7f8bf4e3cc30>
    └ <class 'torch.autograd.variable.Variable'>

RuntimeError: cuDNN error: CUDNN_STATUS_NOT_INITIALIZED
2022-12-23 17:45:16.357 | INFO     | yolox.core.trainer:before_train:130 - args: Namespace(batch_size=2, cache=False, ckpt='/root/YOLOX/yolox_nano.pth', devices=1, dist_backend='nccl', dist_url=None, exp_file='/root/YOLOX/yolox_nano.py', experiment_name='yolox_nano', fp16=True, logger='tensorboard', machine_rank=0, name=None, num_machines=1, occupy=True, opts=[], resume=False, start_epoch=None)
2022-12-23 17:45:16.359 | INFO     | yolox.core.trainer:before_train:131 - exp value:
╒═══════════════════╤════════════════════════════════════════════════════════════╕
│ keys              │ values                                                     │
╞═══════════════════╪════════════════════════════════════════════════════════════╡
│ seed              │ None                                                       │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ output_dir        │ './YOLOX_outputs'                                          │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ print_interval    │ 10                                                         │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ eval_interval     │ 1                                                          │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ num_classes       │ 4                                                          │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ depth             │ 0.33                                                       │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ width             │ 0.25                                                       │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ act               │ 'silu'                                                     │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ data_num_workers  │ 4                                                          │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ input_size        │ (416, 416)                                                 │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ multiscale_range  │ 5                                                          │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ data_dir          │ '/root/ML/dataset/images'                                  │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ train_ann         │ '/root/ML/dataset/annotations/train_annotations.json'      │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ val_ann           │ '/root/ML/dataset/annotations/validation_annotations.json' │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ test_ann          │ 'instances_test2017.json'                                  │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ mosaic_prob       │ 0.5                                                        │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ mixup_prob        │ 1.0                                                        │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ hsv_prob          │ 1.0                                                        │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ flip_prob         │ 0.5                                                        │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ degrees           │ 10.0                                                       │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ translate         │ 0.1                                                        │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ mosaic_scale      │ (0.5, 1.5)                                                 │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ enable_mixup      │ False                                                      │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ mixup_scale       │ (0.5, 1.5)                                                 │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ shear             │ 2.0                                                        │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ warmup_epochs     │ 5                                                          │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ max_epoch         │ 20                                                         │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ warmup_lr         │ 0                                                          │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ min_lr_ratio      │ 0.05                                                       │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ basic_lr_per_img  │ 0.00015625                                                 │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ scheduler         │ 'yoloxwarmcos'                                             │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ no_aug_epochs     │ 15                                                         │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ ema               │ True                                                       │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ weight_decay      │ 0.0005                                                     │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ momentum          │ 0.9                                                        │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ save_history_ckpt │ True                                                       │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ exp_name          │ 'yolox_nano'                                               │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ test_size         │ (416, 416)                                                 │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ test_conf         │ 0.01                                                       │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ nmsthre           │ 0.65                                                       │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ random_size       │ (10, 20)                                                   │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ data_num_worker   │ 4                                                          │
╘═══════════════════╧════════════════════════════════════════════════════════════╛
2022-12-23 17:45:16.473 | INFO     | yolox.core.trainer:before_train:136 - Model Summary: Params: 0.90M, Gflops: 1.08
2022-12-23 17:45:17.685 | INFO     | yolox.core.trainer:resume_train:311 - loading checkpoint for fine tuning
2022-12-23 17:45:17.755 | WARNING  | yolox.utils.checkpoint:load_ckpt:24 - Shape of head.cls_preds.0.weight in checkpoint is torch.Size([80, 64, 1, 1]), while shape of head.cls_preds.0.weight in model is torch.Size([4, 64, 1, 1]).
2022-12-23 17:45:17.755 | WARNING  | yolox.utils.checkpoint:load_ckpt:24 - Shape of head.cls_preds.0.bias in checkpoint is torch.Size([80]), while shape of head.cls_preds.0.bias in model is torch.Size([4]).
2022-12-23 17:45:17.755 | WARNING  | yolox.utils.checkpoint:load_ckpt:24 - Shape of head.cls_preds.1.weight in checkpoint is torch.Size([80, 64, 1, 1]), while shape of head.cls_preds.1.weight in model is torch.Size([4, 64, 1, 1]).
2022-12-23 17:45:17.755 | WARNING  | yolox.utils.checkpoint:load_ckpt:24 - Shape of head.cls_preds.1.bias in checkpoint is torch.Size([80]), while shape of head.cls_preds.1.bias in model is torch.Size([4]).
2022-12-23 17:45:17.756 | WARNING  | yolox.utils.checkpoint:load_ckpt:24 - Shape of head.cls_preds.2.weight in checkpoint is torch.Size([80, 64, 1, 1]), while shape of head.cls_preds.2.weight in model is torch.Size([4, 64, 1, 1]).
2022-12-23 17:45:17.756 | WARNING  | yolox.utils.checkpoint:load_ckpt:24 - Shape of head.cls_preds.2.bias in checkpoint is torch.Size([80]), while shape of head.cls_preds.2.bias in model is torch.Size([4]).
2022-12-23 17:45:17.767 | INFO     | yolox.data.datasets.coco:__init__:64 - loading annotations into memory...
2022-12-23 17:45:17.768 | INFO     | yolox.data.datasets.coco:__init__:64 - Done (t=0.00s)
2022-12-23 17:45:17.768 | INFO     | pycocotools.coco:__init__:86 - creating index...
2022-12-23 17:45:17.769 | INFO     | pycocotools.coco:__init__:86 - index created!
2022-12-23 17:45:17.782 | INFO     | yolox.core.trainer:before_train:155 - init prefetcher, this might take one minute or less...
2022-12-23 17:45:22.997 | INFO     | yolox.data.datasets.coco:__init__:64 - loading annotations into memory...
2022-12-23 17:45:22.998 | INFO     | yolox.data.datasets.coco:__init__:64 - Done (t=0.00s)
2022-12-23 17:45:22.998 | INFO     | pycocotools.coco:__init__:86 - creating index...
2022-12-23 17:45:22.998 | INFO     | pycocotools.coco:__init__:86 - index created!
2022-12-23 17:45:23.001 | INFO     | yolox.core.trainer:before_train:191 - Training start...
2022-12-23 17:45:23.004 | INFO     | yolox.core.trainer:before_train:192 - 
YOLOX(
  (backbone): YOLOPAFPN(
    (backbone): CSPDarknet(
      (stem): Focus(
        (conv): BaseConv(
          (conv): Conv2d(12, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn): BatchNorm2d(16, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
          (act): SiLU(inplace=True)
        )
      )
      (dark2): Sequential(
        (0): DWConv(
          (dconv): BaseConv(
            (conv): Conv2d(16, 16, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=16, bias=False)
            (bn): BatchNorm2d(16, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
            (act): SiLU(inplace=True)
          )
          (pconv): BaseConv(
            (conv): Conv2d(16, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn): BatchNorm2d(32, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
            (act): SiLU(inplace=True)
          )
        )
        (1): CSPLayer(
          (conv1): BaseConv(
            (conv): Conv2d(32, 16, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn): BatchNorm2d(16, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
            (act): SiLU(inplace=True)
          )
          (conv2): BaseConv(
            (conv): Conv2d(32, 16, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn): BatchNorm2d(16, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
            (act): SiLU(inplace=True)
          )
          (conv3): BaseConv(
            (conv): Conv2d(32, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn): BatchNorm2d(32, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
            (act): SiLU(inplace=True)
          )
          (m): Sequential(
            (0): Bottleneck(
              (conv1): BaseConv(
                (conv): Conv2d(16, 16, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (bn): BatchNorm2d(16, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                (act): SiLU(inplace=True)
              )
              (conv2): DWConv(
                (dconv): BaseConv(
                  (conv): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=16, bias=False)
                  (bn): BatchNorm2d(16, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                  (act): SiLU(inplace=True)
                )
                (pconv): BaseConv(
                  (conv): Conv2d(16, 16, kernel_size=(1, 1), stride=(1, 1), bias=False)
                  (bn): BatchNorm2d(16, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                  (act): SiLU(inplace=True)
                )
              )
            )
          )
        )
      )
      (dark3): Sequential(
        (0): DWConv(
          (dconv): BaseConv(
            (conv): Conv2d(32, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=32, bias=False)
            (bn): BatchNorm2d(32, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
            (act): SiLU(inplace=True)
          )
          (pconv): BaseConv(
            (conv): Conv2d(32, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
            (act): SiLU(inplace=True)
          )
        )
        (1): CSPLayer(
          (conv1): BaseConv(
            (conv): Conv2d(64, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn): BatchNorm2d(32, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
            (act): SiLU(inplace=True)
          )
          (conv2): BaseConv(
            (conv): Conv2d(64, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn): BatchNorm2d(32, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
            (act): SiLU(inplace=True)
          )
          (conv3): BaseConv(
            (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
            (act): SiLU(inplace=True)
          )
          (m): Sequential(
            (0): Bottleneck(
              (conv1): BaseConv(
                (conv): Conv2d(32, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (bn): BatchNorm2d(32, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                (act): SiLU(inplace=True)
              )
              (conv2): DWConv(
                (dconv): BaseConv(
                  (conv): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False)
                  (bn): BatchNorm2d(32, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                  (act): SiLU(inplace=True)
                )
                (pconv): BaseConv(
                  (conv): Conv2d(32, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)
                  (bn): BatchNorm2d(32, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                  (act): SiLU(inplace=True)
                )
              )
            )
            (1): Bottleneck(
              (conv1): BaseConv(
                (conv): Conv2d(32, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (bn): BatchNorm2d(32, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                (act): SiLU(inplace=True)
              )
              (conv2): DWConv(
                (dconv): BaseConv(
                  (conv): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False)
                  (bn): BatchNorm2d(32, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                  (act): SiLU(inplace=True)
                )
                (pconv): BaseConv(
                  (conv): Conv2d(32, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)
                  (bn): BatchNorm2d(32, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                  (act): SiLU(inplace=True)
                )
              )
            )
            (2): Bottleneck(
              (conv1): BaseConv(
                (conv): Conv2d(32, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (bn): BatchNorm2d(32, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                (act): SiLU(inplace=True)
              )
              (conv2): DWConv(
                (dconv): BaseConv(
                  (conv): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False)
                  (bn): BatchNorm2d(32, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                  (act): SiLU(inplace=True)
                )
                (pconv): BaseConv(
                  (conv): Conv2d(32, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)
                  (bn): BatchNorm2d(32, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                  (act): SiLU(inplace=True)
                )
              )
            )
          )
        )
      )
      (dark4): Sequential(
        (0): DWConv(
          (dconv): BaseConv(
            (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=64, bias=False)
            (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
            (act): SiLU(inplace=True)
          )
          (pconv): BaseConv(
            (conv): Conv2d(64, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn): BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
            (act): SiLU(inplace=True)
          )
        )
        (1): CSPLayer(
          (conv1): BaseConv(
            (conv): Conv2d(128, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
            (act): SiLU(inplace=True)
          )
          (conv2): BaseConv(
            (conv): Conv2d(128, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
            (act): SiLU(inplace=True)
          )
          (conv3): BaseConv(
            (conv): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn): BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
            (act): SiLU(inplace=True)
          )
          (m): Sequential(
            (0): Bottleneck(
              (conv1): BaseConv(
                (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                (act): SiLU(inplace=True)
              )
              (conv2): DWConv(
                (dconv): BaseConv(
                  (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=64, bias=False)
                  (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                  (act): SiLU(inplace=True)
                )
                (pconv): BaseConv(
                  (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
                  (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                  (act): SiLU(inplace=True)
                )
              )
            )
            (1): Bottleneck(
              (conv1): BaseConv(
                (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                (act): SiLU(inplace=True)
              )
              (conv2): DWConv(
                (dconv): BaseConv(
                  (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=64, bias=False)
                  (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                  (act): SiLU(inplace=True)
                )
                (pconv): BaseConv(
                  (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
                  (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                  (act): SiLU(inplace=True)
                )
              )
            )
            (2): Bottleneck(
              (conv1): BaseConv(
                (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                (act): SiLU(inplace=True)
              )
              (conv2): DWConv(
                (dconv): BaseConv(
                  (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=64, bias=False)
                  (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                  (act): SiLU(inplace=True)
                )
                (pconv): BaseConv(
                  (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
                  (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                  (act): SiLU(inplace=True)
                )
              )
            )
          )
        )
      )
      (dark5): Sequential(
        (0): DWConv(
          (dconv): BaseConv(
            (conv): Conv2d(128, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=128, bias=False)
            (bn): BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
            (act): SiLU(inplace=True)
          )
          (pconv): BaseConv(
            (conv): Conv2d(128, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn): BatchNorm2d(256, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
            (act): SiLU(inplace=True)
          )
        )
        (1): SPPBottleneck(
          (conv1): BaseConv(
            (conv): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn): BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
            (act): SiLU(inplace=True)
          )
          (m): ModuleList(
            (0): MaxPool2d(kernel_size=5, stride=1, padding=2, dilation=1, ceil_mode=False)
            (1): MaxPool2d(kernel_size=9, stride=1, padding=4, dilation=1, ceil_mode=False)
            (2): MaxPool2d(kernel_size=13, stride=1, padding=6, dilation=1, ceil_mode=False)
          )
          (conv2): BaseConv(
            (conv): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn): BatchNorm2d(256, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
            (act): SiLU(inplace=True)
          )
        )
        (2): CSPLayer(
          (conv1): BaseConv(
            (conv): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn): BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
            (act): SiLU(inplace=True)
          )
          (conv2): BaseConv(
            (conv): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn): BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
            (act): SiLU(inplace=True)
          )
          (conv3): BaseConv(
            (conv): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn): BatchNorm2d(256, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
            (act): SiLU(inplace=True)
          )
          (m): Sequential(
            (0): Bottleneck(
              (conv1): BaseConv(
                (conv): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (bn): BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                (act): SiLU(inplace=True)
              )
              (conv2): DWConv(
                (dconv): BaseConv(
                  (conv): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=128, bias=False)
                  (bn): BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                  (act): SiLU(inplace=True)
                )
                (pconv): BaseConv(
                  (conv): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
                  (bn): BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                  (act): SiLU(inplace=True)
                )
              )
            )
          )
        )
      )
    )
    (upsample): Upsample(scale_factor=2.0, mode=nearest)
    (lateral_conv0): BaseConv(
      (conv): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn): BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
      (act): SiLU(inplace=True)
    )
    (C3_p4): CSPLayer(
      (conv1): BaseConv(
        (conv): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
        (act): SiLU(inplace=True)
      )
      (conv2): BaseConv(
        (conv): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
        (act): SiLU(inplace=True)
      )
      (conv3): BaseConv(
        (conv): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn): BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
        (act): SiLU(inplace=True)
      )
      (m): Sequential(
        (0): Bottleneck(
          (conv1): BaseConv(
            (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
            (act): SiLU(inplace=True)
          )
          (conv2): DWConv(
            (dconv): BaseConv(
              (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=64, bias=False)
              (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): SiLU(inplace=True)
            )
            (pconv): BaseConv(
              (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): SiLU(inplace=True)
            )
          )
        )
      )
    )
    (reduce_conv1): BaseConv(
      (conv): Conv2d(128, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
      (act): SiLU(inplace=True)
    )
    (C3_p3): CSPLayer(
      (conv1): BaseConv(
        (conv): Conv2d(128, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn): BatchNorm2d(32, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
        (act): SiLU(inplace=True)
      )
      (conv2): BaseConv(
        (conv): Conv2d(128, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn): BatchNorm2d(32, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
        (act): SiLU(inplace=True)
      )
      (conv3): BaseConv(
        (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
        (act): SiLU(inplace=True)
      )
      (m): Sequential(
        (0): Bottleneck(
          (conv1): BaseConv(
            (conv): Conv2d(32, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn): BatchNorm2d(32, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
            (act): SiLU(inplace=True)
          )
          (conv2): DWConv(
            (dconv): BaseConv(
              (conv): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False)
              (bn): BatchNorm2d(32, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): SiLU(inplace=True)
            )
            (pconv): BaseConv(
              (conv): Conv2d(32, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (bn): BatchNorm2d(32, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): SiLU(inplace=True)
            )
          )
        )
      )
    )
    (bu_conv2): DWConv(
      (dconv): BaseConv(
        (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=64, bias=False)
        (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
        (act): SiLU(inplace=True)
      )
      (pconv): BaseConv(
        (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
        (act): SiLU(inplace=True)
      )
    )
    (C3_n3): CSPLayer(
      (conv1): BaseConv(
        (conv): Conv2d(128, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
        (act): SiLU(inplace=True)
      )
      (conv2): BaseConv(
        (conv): Conv2d(128, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
        (act): SiLU(inplace=True)
      )
      (conv3): BaseConv(
        (conv): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn): BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
        (act): SiLU(inplace=True)
      )
      (m): Sequential(
        (0): Bottleneck(
          (conv1): BaseConv(
            (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
            (act): SiLU(inplace=True)
          )
          (conv2): DWConv(
            (dconv): BaseConv(
              (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=64, bias=False)
              (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): SiLU(inplace=True)
            )
            (pconv): BaseConv(
              (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): SiLU(inplace=True)
            )
          )
        )
      )
    )
    (bu_conv1): DWConv(
      (dconv): BaseConv(
        (conv): Conv2d(128, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=128, bias=False)
        (bn): BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
        (act): SiLU(inplace=True)
      )
      (pconv): BaseConv(
        (conv): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn): BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
        (act): SiLU(inplace=True)
      )
    )
    (C3_n4): CSPLayer(
      (conv1): BaseConv(
        (conv): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn): BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
        (act): SiLU(inplace=True)
      )
      (conv2): BaseConv(
        (conv): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn): BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
        (act): SiLU(inplace=True)
      )
      (conv3): BaseConv(
        (conv): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn): BatchNorm2d(256, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
        (act): SiLU(inplace=True)
      )
      (m): Sequential(
        (0): Bottleneck(
          (conv1): BaseConv(
            (conv): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn): BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
            (act): SiLU(inplace=True)
          )
          (conv2): DWConv(
            (dconv): BaseConv(
              (conv): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=128, bias=False)
              (bn): BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): SiLU(inplace=True)
            )
            (pconv): BaseConv(
              (conv): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (bn): BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): SiLU(inplace=True)
            )
          )
        )
      )
    )
  )
  (head): YOLOXHead(
    (cls_convs): ModuleList(
      (0): Sequential(
        (0): DWConv(
          (dconv): BaseConv(
            (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=64, bias=False)
            (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
            (act): SiLU(inplace=True)
          )
          (pconv): BaseConv(
            (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
            (act): SiLU(inplace=True)
          )
        )
        (1): DWConv(
          (dconv): BaseConv(
            (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=64, bias=False)
            (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
            (act): SiLU(inplace=True)
          )
          (pconv): BaseConv(
            (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
            (act): SiLU(inplace=True)
          )
        )
      )
      (1): Sequential(
        (0): DWConv(
          (dconv): BaseConv(
            (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=64, bias=False)
            (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
            (act): SiLU(inplace=True)
          )
          (pconv): BaseConv(
            (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
            (act): SiLU(inplace=True)
          )
        )
        (1): DWConv(
          (dconv): BaseConv(
            (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=64, bias=False)
            (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
            (act): SiLU(inplace=True)
          )
          (pconv): BaseConv(
            (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
            (act): SiLU(inplace=True)
          )
        )
      )
      (2): Sequential(
        (0): DWConv(
          (dconv): BaseConv(
            (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=64, bias=False)
            (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
            (act): SiLU(inplace=True)
          )
          (pconv): BaseConv(
            (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
            (act): SiLU(inplace=True)
          )
        )
        (1): DWConv(
          (dconv): BaseConv(
            (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=64, bias=False)
            (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
            (act): SiLU(inplace=True)
          )
          (pconv): BaseConv(
            (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
            (act): SiLU(inplace=True)
          )
        )
      )
    )
    (reg_convs): ModuleList(
      (0): Sequential(
        (0): DWConv(
          (dconv): BaseConv(
            (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=64, bias=False)
            (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
            (act): SiLU(inplace=True)
          )
          (pconv): BaseConv(
            (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
            (act): SiLU(inplace=True)
          )
        )
        (1): DWConv(
          (dconv): BaseConv(
            (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=64, bias=False)
            (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
            (act): SiLU(inplace=True)
          )
          (pconv): BaseConv(
            (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
            (act): SiLU(inplace=True)
          )
        )
      )
      (1): Sequential(
        (0): DWConv(
          (dconv): BaseConv(
            (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=64, bias=False)
            (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
            (act): SiLU(inplace=True)
          )
          (pconv): BaseConv(
            (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
            (act): SiLU(inplace=True)
          )
        )
        (1): DWConv(
          (dconv): BaseConv(
            (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=64, bias=False)
            (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
            (act): SiLU(inplace=True)
          )
          (pconv): BaseConv(
            (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
            (act): SiLU(inplace=True)
          )
        )
      )
      (2): Sequential(
        (0): DWConv(
          (dconv): BaseConv(
            (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=64, bias=False)
            (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
            (act): SiLU(inplace=True)
          )
          (pconv): BaseConv(
            (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
            (act): SiLU(inplace=True)
          )
        )
        (1): DWConv(
          (dconv): BaseConv(
            (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=64, bias=False)
            (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
            (act): SiLU(inplace=True)
          )
          (pconv): BaseConv(
            (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
            (act): SiLU(inplace=True)
          )
        )
      )
    )
    (cls_preds): ModuleList(
      (0): Conv2d(64, 4, kernel_size=(1, 1), stride=(1, 1))
      (1): Conv2d(64, 4, kernel_size=(1, 1), stride=(1, 1))
      (2): Conv2d(64, 4, kernel_size=(1, 1), stride=(1, 1))
    )
    (reg_preds): ModuleList(
      (0): Conv2d(64, 4, kernel_size=(1, 1), stride=(1, 1))
      (1): Conv2d(64, 4, kernel_size=(1, 1), stride=(1, 1))
      (2): Conv2d(64, 4, kernel_size=(1, 1), stride=(1, 1))
    )
    (obj_preds): ModuleList(
      (0): Conv2d(64, 1, kernel_size=(1, 1), stride=(1, 1))
      (1): Conv2d(64, 1, kernel_size=(1, 1), stride=(1, 1))
      (2): Conv2d(64, 1, kernel_size=(1, 1), stride=(1, 1))
    )
    (stems): ModuleList(
      (0): BaseConv(
        (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
        (act): SiLU(inplace=True)
      )
      (1): BaseConv(
        (conv): Conv2d(128, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
        (act): SiLU(inplace=True)
      )
      (2): BaseConv(
        (conv): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
        (act): SiLU(inplace=True)
      )
    )
    (l1_loss): L1Loss()
    (bcewithlog_loss): BCEWithLogitsLoss()
    (iou_loss): IOUloss()
  )
)
2022-12-23 17:45:23.004 | INFO     | yolox.core.trainer:before_epoch:203 - ---> start train epoch1
2022-12-23 17:45:24.424 | INFO     | yolox.core.trainer:after_train:195 - Training of experiment is done and the best AP is 0.00
2022-12-23 17:45:24.424 | ERROR    | yolox.core.launch:launch:98 - An error has been caught in function 'launch', process 'MainProcess' (17379), thread 'MainThread' (139960569317184):
Traceback (most recent call last):

  File "/root/YOLOX/tools/train.py", line 134, in <module>
    launch(
    └ <function launch at 0x7f4a8c011940>

> File "/root/YOLOX/yolox/core/launch.py", line 98, in launch
    main_func(*args)
    │          └ (╒═══════════════════╤═══════════════════════════════════════════════════════════════════════════════════════════════════════...
    └ <function main at 0x7f4a7f0c50d0>

  File "/root/YOLOX/tools/train.py", line 118, in main
    trainer.train()
    │       └ <function Trainer.train at 0x7f4a7e727dc0>
    └ <yolox.core.trainer.Trainer object at 0x7f4a7e774f70>

  File "/root/YOLOX/yolox/core/trainer.py", line 76, in train
    self.train_in_epoch()
    │    └ <function Trainer.train_in_epoch at 0x7f4a7e72e4c0>
    └ <yolox.core.trainer.Trainer object at 0x7f4a7e774f70>

  File "/root/YOLOX/yolox/core/trainer.py", line 85, in train_in_epoch
    self.train_in_iter()
    │    └ <function Trainer.train_in_iter at 0x7f4a7e72e550>
    └ <yolox.core.trainer.Trainer object at 0x7f4a7e774f70>

  File "/root/YOLOX/yolox/core/trainer.py", line 91, in train_in_iter
    self.train_one_iter()
    │    └ <function Trainer.train_one_iter at 0x7f4a7e72e5e0>
    └ <yolox.core.trainer.Trainer object at 0x7f4a7e774f70>

  File "/root/YOLOX/yolox/core/trainer.py", line 110, in train_one_iter
    self.scaler.scale(loss).backward()
    │    │      │     └ tensor(17.1796, device='cuda:0', grad_fn=<AddBackward0>)
    │    │      └ <function GradScaler.scale at 0x7f4a8d2bb820>
    │    └ <torch.cuda.amp.grad_scaler.GradScaler object at 0x7f4a7e774fd0>
    └ <yolox.core.trainer.Trainer object at 0x7f4a7e774f70>

  File "/usr/local/lib/python3.8/dist-packages/torch/_tensor.py", line 487, in backward
    torch.autograd.backward(
    │     │        └ <function backward at 0x7f4a8cfc0670>
    │     └ <module 'torch.autograd' from '/usr/local/lib/python3.8/dist-packages/torch/autograd/__init__.py'>
    └ <module 'torch' from '/usr/local/lib/python3.8/dist-packages/torch/__init__.py'>

  File "/usr/local/lib/python3.8/dist-packages/torch/autograd/__init__.py", line 197, in backward
    Variable._execution_engine.run_backward(  # Calls into the C++ engine to run the backward pass
    │        │                 └ <method 'run_backward' of 'torch._C._EngineBase' objects>
    │        └ <torch._C._EngineBase object at 0x7f4a913a2c30>
    └ <class 'torch.autograd.variable.Variable'>

RuntimeError: cuDNN error: CUDNN_STATUS_NOT_INITIALIZED
2022-12-23 17:49:14.763 | INFO     | yolox.core.trainer:before_train:130 - args: Namespace(batch_size=2, cache=False, ckpt='/root/YOLOX/yolox_nano.pth', devices=1, dist_backend='nccl', dist_url=None, exp_file='/root/YOLOX/yolox_nano.py', experiment_name='yolox_nano', fp16=True, logger='tensorboard', machine_rank=0, name=None, num_machines=1, occupy=True, opts=[], resume=False, start_epoch=None)
2022-12-23 17:49:14.765 | INFO     | yolox.core.trainer:before_train:131 - exp value:
╒═══════════════════╤════════════════════════════════════════════════════════════╕
│ keys              │ values                                                     │
╞═══════════════════╪════════════════════════════════════════════════════════════╡
│ seed              │ None                                                       │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ output_dir        │ './YOLOX_outputs'                                          │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ print_interval    │ 10                                                         │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ eval_interval     │ 1                                                          │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ num_classes       │ 4                                                          │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ depth             │ 0.33                                                       │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ width             │ 0.25                                                       │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ act               │ 'silu'                                                     │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ data_num_workers  │ 4                                                          │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ input_size        │ (416, 416)                                                 │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ multiscale_range  │ 5                                                          │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ data_dir          │ '/root/ML/dataset/images'                                  │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ train_ann         │ '/root/ML/dataset/annotations/train_annotations.json'      │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ val_ann           │ '/root/ML/dataset/annotations/validation_annotations.json' │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ test_ann          │ 'instances_test2017.json'                                  │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ mosaic_prob       │ 0.5                                                        │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ mixup_prob        │ 1.0                                                        │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ hsv_prob          │ 1.0                                                        │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ flip_prob         │ 0.5                                                        │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ degrees           │ 10.0                                                       │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ translate         │ 0.1                                                        │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ mosaic_scale      │ (0.5, 1.5)                                                 │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ enable_mixup      │ False                                                      │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ mixup_scale       │ (0.5, 1.5)                                                 │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ shear             │ 2.0                                                        │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ warmup_epochs     │ 5                                                          │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ max_epoch         │ 20                                                         │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ warmup_lr         │ 0                                                          │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ min_lr_ratio      │ 0.05                                                       │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ basic_lr_per_img  │ 0.00015625                                                 │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ scheduler         │ 'yoloxwarmcos'                                             │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ no_aug_epochs     │ 15                                                         │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ ema               │ True                                                       │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ weight_decay      │ 0.0005                                                     │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ momentum          │ 0.9                                                        │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ save_history_ckpt │ True                                                       │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ exp_name          │ 'yolox_nano'                                               │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ test_size         │ (416, 416)                                                 │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ test_conf         │ 0.01                                                       │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ nmsthre           │ 0.65                                                       │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ random_size       │ (10, 20)                                                   │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ data_num_worker   │ 4                                                          │
╘═══════════════════╧════════════════════════════════════════════════════════════╛
2022-12-23 17:49:14.900 | INFO     | yolox.core.trainer:before_train:136 - Model Summary: Params: 0.90M, Gflops: 1.08
2022-12-23 17:49:16.110 | INFO     | yolox.core.trainer:resume_train:311 - loading checkpoint for fine tuning
2022-12-23 17:49:16.183 | WARNING  | yolox.utils.checkpoint:load_ckpt:24 - Shape of head.cls_preds.0.weight in checkpoint is torch.Size([80, 64, 1, 1]), while shape of head.cls_preds.0.weight in model is torch.Size([4, 64, 1, 1]).
2022-12-23 17:49:16.183 | WARNING  | yolox.utils.checkpoint:load_ckpt:24 - Shape of head.cls_preds.0.bias in checkpoint is torch.Size([80]), while shape of head.cls_preds.0.bias in model is torch.Size([4]).
2022-12-23 17:49:16.184 | WARNING  | yolox.utils.checkpoint:load_ckpt:24 - Shape of head.cls_preds.1.weight in checkpoint is torch.Size([80, 64, 1, 1]), while shape of head.cls_preds.1.weight in model is torch.Size([4, 64, 1, 1]).
2022-12-23 17:49:16.184 | WARNING  | yolox.utils.checkpoint:load_ckpt:24 - Shape of head.cls_preds.1.bias in checkpoint is torch.Size([80]), while shape of head.cls_preds.1.bias in model is torch.Size([4]).
2022-12-23 17:49:16.184 | WARNING  | yolox.utils.checkpoint:load_ckpt:24 - Shape of head.cls_preds.2.weight in checkpoint is torch.Size([80, 64, 1, 1]), while shape of head.cls_preds.2.weight in model is torch.Size([4, 64, 1, 1]).
2022-12-23 17:49:16.184 | WARNING  | yolox.utils.checkpoint:load_ckpt:24 - Shape of head.cls_preds.2.bias in checkpoint is torch.Size([80]), while shape of head.cls_preds.2.bias in model is torch.Size([4]).
2022-12-23 17:49:16.196 | INFO     | yolox.data.datasets.coco:__init__:64 - loading annotations into memory...
2022-12-23 17:49:16.197 | INFO     | yolox.data.datasets.coco:__init__:64 - Done (t=0.00s)
2022-12-23 17:49:16.197 | INFO     | pycocotools.coco:__init__:86 - creating index...
2022-12-23 17:49:16.197 | INFO     | pycocotools.coco:__init__:86 - index created!
2022-12-23 17:49:16.206 | INFO     | yolox.core.trainer:before_train:155 - init prefetcher, this might take one minute or less...
2022-12-23 17:49:21.429 | INFO     | yolox.data.datasets.coco:__init__:64 - loading annotations into memory...
2022-12-23 17:49:21.430 | INFO     | yolox.data.datasets.coco:__init__:64 - Done (t=0.00s)
2022-12-23 17:49:21.430 | INFO     | pycocotools.coco:__init__:86 - creating index...
2022-12-23 17:49:21.430 | INFO     | pycocotools.coco:__init__:86 - index created!
2022-12-23 17:49:21.434 | INFO     | yolox.core.trainer:before_train:191 - Training start...
2022-12-23 17:49:21.436 | INFO     | yolox.core.trainer:before_train:192 - 
YOLOX(
  (backbone): YOLOPAFPN(
    (backbone): CSPDarknet(
      (stem): Focus(
        (conv): BaseConv(
          (conv): Conv2d(12, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn): BatchNorm2d(16, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
          (act): SiLU(inplace=True)
        )
      )
      (dark2): Sequential(
        (0): DWConv(
          (dconv): BaseConv(
            (conv): Conv2d(16, 16, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=16, bias=False)
            (bn): BatchNorm2d(16, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
            (act): SiLU(inplace=True)
          )
          (pconv): BaseConv(
            (conv): Conv2d(16, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn): BatchNorm2d(32, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
            (act): SiLU(inplace=True)
          )
        )
        (1): CSPLayer(
          (conv1): BaseConv(
            (conv): Conv2d(32, 16, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn): BatchNorm2d(16, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
            (act): SiLU(inplace=True)
          )
          (conv2): BaseConv(
            (conv): Conv2d(32, 16, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn): BatchNorm2d(16, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
            (act): SiLU(inplace=True)
          )
          (conv3): BaseConv(
            (conv): Conv2d(32, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn): BatchNorm2d(32, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
            (act): SiLU(inplace=True)
          )
          (m): Sequential(
            (0): Bottleneck(
              (conv1): BaseConv(
                (conv): Conv2d(16, 16, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (bn): BatchNorm2d(16, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                (act): SiLU(inplace=True)
              )
              (conv2): DWConv(
                (dconv): BaseConv(
                  (conv): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=16, bias=False)
                  (bn): BatchNorm2d(16, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                  (act): SiLU(inplace=True)
                )
                (pconv): BaseConv(
                  (conv): Conv2d(16, 16, kernel_size=(1, 1), stride=(1, 1), bias=False)
                  (bn): BatchNorm2d(16, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                  (act): SiLU(inplace=True)
                )
              )
            )
          )
        )
      )
      (dark3): Sequential(
        (0): DWConv(
          (dconv): BaseConv(
            (conv): Conv2d(32, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=32, bias=False)
            (bn): BatchNorm2d(32, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
            (act): SiLU(inplace=True)
          )
          (pconv): BaseConv(
            (conv): Conv2d(32, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
            (act): SiLU(inplace=True)
          )
        )
        (1): CSPLayer(
          (conv1): BaseConv(
            (conv): Conv2d(64, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn): BatchNorm2d(32, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
            (act): SiLU(inplace=True)
          )
          (conv2): BaseConv(
            (conv): Conv2d(64, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn): BatchNorm2d(32, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
            (act): SiLU(inplace=True)
          )
          (conv3): BaseConv(
            (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
            (act): SiLU(inplace=True)
          )
          (m): Sequential(
            (0): Bottleneck(
              (conv1): BaseConv(
                (conv): Conv2d(32, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (bn): BatchNorm2d(32, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                (act): SiLU(inplace=True)
              )
              (conv2): DWConv(
                (dconv): BaseConv(
                  (conv): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False)
                  (bn): BatchNorm2d(32, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                  (act): SiLU(inplace=True)
                )
                (pconv): BaseConv(
                  (conv): Conv2d(32, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)
                  (bn): BatchNorm2d(32, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                  (act): SiLU(inplace=True)
                )
              )
            )
            (1): Bottleneck(
              (conv1): BaseConv(
                (conv): Conv2d(32, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (bn): BatchNorm2d(32, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                (act): SiLU(inplace=True)
              )
              (conv2): DWConv(
                (dconv): BaseConv(
                  (conv): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False)
                  (bn): BatchNorm2d(32, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                  (act): SiLU(inplace=True)
                )
                (pconv): BaseConv(
                  (conv): Conv2d(32, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)
                  (bn): BatchNorm2d(32, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                  (act): SiLU(inplace=True)
                )
              )
            )
            (2): Bottleneck(
              (conv1): BaseConv(
                (conv): Conv2d(32, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (bn): BatchNorm2d(32, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                (act): SiLU(inplace=True)
              )
              (conv2): DWConv(
                (dconv): BaseConv(
                  (conv): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False)
                  (bn): BatchNorm2d(32, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                  (act): SiLU(inplace=True)
                )
                (pconv): BaseConv(
                  (conv): Conv2d(32, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)
                  (bn): BatchNorm2d(32, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                  (act): SiLU(inplace=True)
                )
              )
            )
          )
        )
      )
      (dark4): Sequential(
        (0): DWConv(
          (dconv): BaseConv(
            (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=64, bias=False)
            (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
            (act): SiLU(inplace=True)
          )
          (pconv): BaseConv(
            (conv): Conv2d(64, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn): BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
            (act): SiLU(inplace=True)
          )
        )
        (1): CSPLayer(
          (conv1): BaseConv(
            (conv): Conv2d(128, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
            (act): SiLU(inplace=True)
          )
          (conv2): BaseConv(
            (conv): Conv2d(128, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
            (act): SiLU(inplace=True)
          )
          (conv3): BaseConv(
            (conv): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn): BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
            (act): SiLU(inplace=True)
          )
          (m): Sequential(
            (0): Bottleneck(
              (conv1): BaseConv(
                (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                (act): SiLU(inplace=True)
              )
              (conv2): DWConv(
                (dconv): BaseConv(
                  (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=64, bias=False)
                  (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                  (act): SiLU(inplace=True)
                )
                (pconv): BaseConv(
                  (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
                  (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                  (act): SiLU(inplace=True)
                )
              )
            )
            (1): Bottleneck(
              (conv1): BaseConv(
                (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                (act): SiLU(inplace=True)
              )
              (conv2): DWConv(
                (dconv): BaseConv(
                  (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=64, bias=False)
                  (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                  (act): SiLU(inplace=True)
                )
                (pconv): BaseConv(
                  (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
                  (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                  (act): SiLU(inplace=True)
                )
              )
            )
            (2): Bottleneck(
              (conv1): BaseConv(
                (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                (act): SiLU(inplace=True)
              )
              (conv2): DWConv(
                (dconv): BaseConv(
                  (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=64, bias=False)
                  (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                  (act): SiLU(inplace=True)
                )
                (pconv): BaseConv(
                  (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
                  (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                  (act): SiLU(inplace=True)
                )
              )
            )
          )
        )
      )
      (dark5): Sequential(
        (0): DWConv(
          (dconv): BaseConv(
            (conv): Conv2d(128, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=128, bias=False)
            (bn): BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
            (act): SiLU(inplace=True)
          )
          (pconv): BaseConv(
            (conv): Conv2d(128, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn): BatchNorm2d(256, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
            (act): SiLU(inplace=True)
          )
        )
        (1): SPPBottleneck(
          (conv1): BaseConv(
            (conv): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn): BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
            (act): SiLU(inplace=True)
          )
          (m): ModuleList(
            (0): MaxPool2d(kernel_size=5, stride=1, padding=2, dilation=1, ceil_mode=False)
            (1): MaxPool2d(kernel_size=9, stride=1, padding=4, dilation=1, ceil_mode=False)
            (2): MaxPool2d(kernel_size=13, stride=1, padding=6, dilation=1, ceil_mode=False)
          )
          (conv2): BaseConv(
            (conv): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn): BatchNorm2d(256, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
            (act): SiLU(inplace=True)
          )
        )
        (2): CSPLayer(
          (conv1): BaseConv(
            (conv): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn): BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
            (act): SiLU(inplace=True)
          )
          (conv2): BaseConv(
            (conv): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn): BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
            (act): SiLU(inplace=True)
          )
          (conv3): BaseConv(
            (conv): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn): BatchNorm2d(256, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
            (act): SiLU(inplace=True)
          )
          (m): Sequential(
            (0): Bottleneck(
              (conv1): BaseConv(
                (conv): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (bn): BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                (act): SiLU(inplace=True)
              )
              (conv2): DWConv(
                (dconv): BaseConv(
                  (conv): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=128, bias=False)
                  (bn): BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                  (act): SiLU(inplace=True)
                )
                (pconv): BaseConv(
                  (conv): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
                  (bn): BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                  (act): SiLU(inplace=True)
                )
              )
            )
          )
        )
      )
    )
    (upsample): Upsample(scale_factor=2.0, mode=nearest)
    (lateral_conv0): BaseConv(
      (conv): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn): BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
      (act): SiLU(inplace=True)
    )
    (C3_p4): CSPLayer(
      (conv1): BaseConv(
        (conv): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
        (act): SiLU(inplace=True)
      )
      (conv2): BaseConv(
        (conv): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
        (act): SiLU(inplace=True)
      )
      (conv3): BaseConv(
        (conv): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn): BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
        (act): SiLU(inplace=True)
      )
      (m): Sequential(
        (0): Bottleneck(
          (conv1): BaseConv(
            (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
            (act): SiLU(inplace=True)
          )
          (conv2): DWConv(
            (dconv): BaseConv(
              (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=64, bias=False)
              (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): SiLU(inplace=True)
            )
            (pconv): BaseConv(
              (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): SiLU(inplace=True)
            )
          )
        )
      )
    )
    (reduce_conv1): BaseConv(
      (conv): Conv2d(128, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
      (act): SiLU(inplace=True)
    )
    (C3_p3): CSPLayer(
      (conv1): BaseConv(
        (conv): Conv2d(128, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn): BatchNorm2d(32, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
        (act): SiLU(inplace=True)
      )
      (conv2): BaseConv(
        (conv): Conv2d(128, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn): BatchNorm2d(32, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
        (act): SiLU(inplace=True)
      )
      (conv3): BaseConv(
        (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
        (act): SiLU(inplace=True)
      )
      (m): Sequential(
        (0): Bottleneck(
          (conv1): BaseConv(
            (conv): Conv2d(32, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn): BatchNorm2d(32, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
            (act): SiLU(inplace=True)
          )
          (conv2): DWConv(
            (dconv): BaseConv(
              (conv): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False)
              (bn): BatchNorm2d(32, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): SiLU(inplace=True)
            )
            (pconv): BaseConv(
              (conv): Conv2d(32, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (bn): BatchNorm2d(32, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): SiLU(inplace=True)
            )
          )
        )
      )
    )
    (bu_conv2): DWConv(
      (dconv): BaseConv(
        (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=64, bias=False)
        (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
        (act): SiLU(inplace=True)
      )
      (pconv): BaseConv(
        (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
        (act): SiLU(inplace=True)
      )
    )
    (C3_n3): CSPLayer(
      (conv1): BaseConv(
        (conv): Conv2d(128, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
        (act): SiLU(inplace=True)
      )
      (conv2): BaseConv(
        (conv): Conv2d(128, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
        (act): SiLU(inplace=True)
      )
      (conv3): BaseConv(
        (conv): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn): BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
        (act): SiLU(inplace=True)
      )
      (m): Sequential(
        (0): Bottleneck(
          (conv1): BaseConv(
            (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
            (act): SiLU(inplace=True)
          )
          (conv2): DWConv(
            (dconv): BaseConv(
              (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=64, bias=False)
              (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): SiLU(inplace=True)
            )
            (pconv): BaseConv(
              (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): SiLU(inplace=True)
            )
          )
        )
      )
    )
    (bu_conv1): DWConv(
      (dconv): BaseConv(
        (conv): Conv2d(128, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=128, bias=False)
        (bn): BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
        (act): SiLU(inplace=True)
      )
      (pconv): BaseConv(
        (conv): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn): BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
        (act): SiLU(inplace=True)
      )
    )
    (C3_n4): CSPLayer(
      (conv1): BaseConv(
        (conv): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn): BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
        (act): SiLU(inplace=True)
      )
      (conv2): BaseConv(
        (conv): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn): BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
        (act): SiLU(inplace=True)
      )
      (conv3): BaseConv(
        (conv): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn): BatchNorm2d(256, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
        (act): SiLU(inplace=True)
      )
      (m): Sequential(
        (0): Bottleneck(
          (conv1): BaseConv(
            (conv): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn): BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
            (act): SiLU(inplace=True)
          )
          (conv2): DWConv(
            (dconv): BaseConv(
              (conv): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=128, bias=False)
              (bn): BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): SiLU(inplace=True)
            )
            (pconv): BaseConv(
              (conv): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (bn): BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): SiLU(inplace=True)
            )
          )
        )
      )
    )
  )
  (head): YOLOXHead(
    (cls_convs): ModuleList(
      (0): Sequential(
        (0): DWConv(
          (dconv): BaseConv(
            (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=64, bias=False)
            (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
            (act): SiLU(inplace=True)
          )
          (pconv): BaseConv(
            (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
            (act): SiLU(inplace=True)
          )
        )
        (1): DWConv(
          (dconv): BaseConv(
            (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=64, bias=False)
            (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
            (act): SiLU(inplace=True)
          )
          (pconv): BaseConv(
            (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
            (act): SiLU(inplace=True)
          )
        )
      )
      (1): Sequential(
        (0): DWConv(
          (dconv): BaseConv(
            (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=64, bias=False)
            (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
            (act): SiLU(inplace=True)
          )
          (pconv): BaseConv(
            (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
            (act): SiLU(inplace=True)
          )
        )
        (1): DWConv(
          (dconv): BaseConv(
            (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=64, bias=False)
            (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
            (act): SiLU(inplace=True)
          )
          (pconv): BaseConv(
            (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
            (act): SiLU(inplace=True)
          )
        )
      )
      (2): Sequential(
        (0): DWConv(
          (dconv): BaseConv(
            (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=64, bias=False)
            (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
            (act): SiLU(inplace=True)
          )
          (pconv): BaseConv(
            (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
            (act): SiLU(inplace=True)
          )
        )
        (1): DWConv(
          (dconv): BaseConv(
            (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=64, bias=False)
            (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
            (act): SiLU(inplace=True)
          )
          (pconv): BaseConv(
            (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
            (act): SiLU(inplace=True)
          )
        )
      )
    )
    (reg_convs): ModuleList(
      (0): Sequential(
        (0): DWConv(
          (dconv): BaseConv(
            (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=64, bias=False)
            (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
            (act): SiLU(inplace=True)
          )
          (pconv): BaseConv(
            (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
            (act): SiLU(inplace=True)
          )
        )
        (1): DWConv(
          (dconv): BaseConv(
            (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=64, bias=False)
            (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
            (act): SiLU(inplace=True)
          )
          (pconv): BaseConv(
            (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
            (act): SiLU(inplace=True)
          )
        )
      )
      (1): Sequential(
        (0): DWConv(
          (dconv): BaseConv(
            (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=64, bias=False)
            (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
            (act): SiLU(inplace=True)
          )
          (pconv): BaseConv(
            (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
            (act): SiLU(inplace=True)
          )
        )
        (1): DWConv(
          (dconv): BaseConv(
            (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=64, bias=False)
            (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
            (act): SiLU(inplace=True)
          )
          (pconv): BaseConv(
            (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
            (act): SiLU(inplace=True)
          )
        )
      )
      (2): Sequential(
        (0): DWConv(
          (dconv): BaseConv(
            (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=64, bias=False)
            (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
            (act): SiLU(inplace=True)
          )
          (pconv): BaseConv(
            (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
            (act): SiLU(inplace=True)
          )
        )
        (1): DWConv(
          (dconv): BaseConv(
            (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=64, bias=False)
            (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
            (act): SiLU(inplace=True)
          )
          (pconv): BaseConv(
            (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
            (act): SiLU(inplace=True)
          )
        )
      )
    )
    (cls_preds): ModuleList(
      (0): Conv2d(64, 4, kernel_size=(1, 1), stride=(1, 1))
      (1): Conv2d(64, 4, kernel_size=(1, 1), stride=(1, 1))
      (2): Conv2d(64, 4, kernel_size=(1, 1), stride=(1, 1))
    )
    (reg_preds): ModuleList(
      (0): Conv2d(64, 4, kernel_size=(1, 1), stride=(1, 1))
      (1): Conv2d(64, 4, kernel_size=(1, 1), stride=(1, 1))
      (2): Conv2d(64, 4, kernel_size=(1, 1), stride=(1, 1))
    )
    (obj_preds): ModuleList(
      (0): Conv2d(64, 1, kernel_size=(1, 1), stride=(1, 1))
      (1): Conv2d(64, 1, kernel_size=(1, 1), stride=(1, 1))
      (2): Conv2d(64, 1, kernel_size=(1, 1), stride=(1, 1))
    )
    (stems): ModuleList(
      (0): BaseConv(
        (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
        (act): SiLU(inplace=True)
      )
      (1): BaseConv(
        (conv): Conv2d(128, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
        (act): SiLU(inplace=True)
      )
      (2): BaseConv(
        (conv): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
        (act): SiLU(inplace=True)
      )
    )
    (l1_loss): L1Loss()
    (bcewithlog_loss): BCEWithLogitsLoss()
    (iou_loss): IOUloss()
  )
)
2022-12-23 17:49:21.437 | INFO     | yolox.core.trainer:before_epoch:203 - ---> start train epoch1
2022-12-23 17:49:22.906 | INFO     | yolox.core.trainer:after_train:195 - Training of experiment is done and the best AP is 0.00
2022-12-23 17:49:22.906 | ERROR    | yolox.core.launch:launch:98 - An error has been caught in function 'launch', process 'MainProcess' (21066), thread 'MainThread' (139953367668544):
Traceback (most recent call last):

  File "/root/YOLOX/tools/train.py", line 134, in <module>
    launch(
    └ <function launch at 0x7f48dec0a940>

> File "/root/YOLOX/yolox/core/launch.py", line 98, in launch
    main_func(*args)
    │          └ (╒═══════════════════╤═══════════════════════════════════════════════════════════════════════════════════════════════════════...
    └ <function main at 0x7f48d1cbe0d0>

  File "/root/YOLOX/tools/train.py", line 118, in main
    trainer.train()
    │       └ <function Trainer.train at 0x7f48d1320dc0>
    └ <yolox.core.trainer.Trainer object at 0x7f48d136ef70>

  File "/root/YOLOX/yolox/core/trainer.py", line 76, in train
    self.train_in_epoch()
    │    └ <function Trainer.train_in_epoch at 0x7f48d13274c0>
    └ <yolox.core.trainer.Trainer object at 0x7f48d136ef70>

  File "/root/YOLOX/yolox/core/trainer.py", line 85, in train_in_epoch
    self.train_in_iter()
    │    └ <function Trainer.train_in_iter at 0x7f48d1327550>
    └ <yolox.core.trainer.Trainer object at 0x7f48d136ef70>

  File "/root/YOLOX/yolox/core/trainer.py", line 91, in train_in_iter
    self.train_one_iter()
    │    └ <function Trainer.train_one_iter at 0x7f48d13275e0>
    └ <yolox.core.trainer.Trainer object at 0x7f48d136ef70>

  File "/root/YOLOX/yolox/core/trainer.py", line 110, in train_one_iter
    self.scaler.scale(loss).backward()
    │    │      │     └ tensor(11.0838, device='cuda:0', grad_fn=<AddBackward0>)
    │    │      └ <function GradScaler.scale at 0x7f48dfeb4820>
    │    └ <torch.cuda.amp.grad_scaler.GradScaler object at 0x7f48d136efd0>
    └ <yolox.core.trainer.Trainer object at 0x7f48d136ef70>

  File "/usr/local/lib/python3.8/dist-packages/torch/_tensor.py", line 487, in backward
    torch.autograd.backward(
    │     │        └ <function backward at 0x7f48dfbb9670>
    │     └ <module 'torch.autograd' from '/usr/local/lib/python3.8/dist-packages/torch/autograd/__init__.py'>
    └ <module 'torch' from '/usr/local/lib/python3.8/dist-packages/torch/__init__.py'>

  File "/usr/local/lib/python3.8/dist-packages/torch/autograd/__init__.py", line 197, in backward
    Variable._execution_engine.run_backward(  # Calls into the C++ engine to run the backward pass
    │        │                 └ <method 'run_backward' of 'torch._C._EngineBase' objects>
    │        └ <torch._C._EngineBase object at 0x7f48e1f9ac30>
    └ <class 'torch.autograd.variable.Variable'>

RuntimeError: cuDNN error: CUDNN_STATUS_NOT_INITIALIZED
2022-12-23 17:50:48.269 | INFO     | yolox.core.trainer:before_train:130 - args: Namespace(batch_size=1, cache=False, ckpt='/root/YOLOX/yolox_nano.pth', devices=1, dist_backend='nccl', dist_url=None, exp_file='/root/YOLOX/yolox_nano.py', experiment_name='yolox_nano', fp16=True, logger='tensorboard', machine_rank=0, name=None, num_machines=1, occupy=True, opts=[], resume=False, start_epoch=None)
2022-12-23 17:50:48.271 | INFO     | yolox.core.trainer:before_train:131 - exp value:
╒═══════════════════╤════════════════════════════════════════════════════════════╕
│ keys              │ values                                                     │
╞═══════════════════╪════════════════════════════════════════════════════════════╡
│ seed              │ None                                                       │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ output_dir        │ './YOLOX_outputs'                                          │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ print_interval    │ 10                                                         │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ eval_interval     │ 1                                                          │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ num_classes       │ 4                                                          │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ depth             │ 0.33                                                       │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ width             │ 0.25                                                       │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ act               │ 'silu'                                                     │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ data_num_workers  │ 4                                                          │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ input_size        │ (416, 416)                                                 │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ multiscale_range  │ 5                                                          │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ data_dir          │ '/root/ML/dataset/images'                                  │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ train_ann         │ '/root/ML/dataset/annotations/train_annotations.json'      │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ val_ann           │ '/root/ML/dataset/annotations/validation_annotations.json' │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ test_ann          │ 'instances_test2017.json'                                  │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ mosaic_prob       │ 0.5                                                        │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ mixup_prob        │ 1.0                                                        │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ hsv_prob          │ 1.0                                                        │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ flip_prob         │ 0.5                                                        │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ degrees           │ 10.0                                                       │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ translate         │ 0.1                                                        │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ mosaic_scale      │ (0.5, 1.5)                                                 │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ enable_mixup      │ False                                                      │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ mixup_scale       │ (0.5, 1.5)                                                 │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ shear             │ 2.0                                                        │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ warmup_epochs     │ 5                                                          │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ max_epoch         │ 20                                                         │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ warmup_lr         │ 0                                                          │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ min_lr_ratio      │ 0.05                                                       │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ basic_lr_per_img  │ 0.00015625                                                 │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ scheduler         │ 'yoloxwarmcos'                                             │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ no_aug_epochs     │ 15                                                         │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ ema               │ True                                                       │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ weight_decay      │ 0.0005                                                     │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ momentum          │ 0.9                                                        │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ save_history_ckpt │ True                                                       │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ exp_name          │ 'yolox_nano'                                               │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ test_size         │ (416, 416)                                                 │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ test_conf         │ 0.01                                                       │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ nmsthre           │ 0.65                                                       │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ random_size       │ (10, 20)                                                   │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ data_num_worker   │ 4                                                          │
╘═══════════════════╧════════════════════════════════════════════════════════════╛
2022-12-23 17:50:48.388 | INFO     | yolox.core.trainer:before_train:136 - Model Summary: Params: 0.90M, Gflops: 1.08
2022-12-23 17:50:49.585 | INFO     | yolox.core.trainer:resume_train:311 - loading checkpoint for fine tuning
2022-12-23 17:50:49.657 | WARNING  | yolox.utils.checkpoint:load_ckpt:24 - Shape of head.cls_preds.0.weight in checkpoint is torch.Size([80, 64, 1, 1]), while shape of head.cls_preds.0.weight in model is torch.Size([4, 64, 1, 1]).
2022-12-23 17:50:49.658 | WARNING  | yolox.utils.checkpoint:load_ckpt:24 - Shape of head.cls_preds.0.bias in checkpoint is torch.Size([80]), while shape of head.cls_preds.0.bias in model is torch.Size([4]).
2022-12-23 17:50:49.658 | WARNING  | yolox.utils.checkpoint:load_ckpt:24 - Shape of head.cls_preds.1.weight in checkpoint is torch.Size([80, 64, 1, 1]), while shape of head.cls_preds.1.weight in model is torch.Size([4, 64, 1, 1]).
2022-12-23 17:50:49.658 | WARNING  | yolox.utils.checkpoint:load_ckpt:24 - Shape of head.cls_preds.1.bias in checkpoint is torch.Size([80]), while shape of head.cls_preds.1.bias in model is torch.Size([4]).
2022-12-23 17:50:49.658 | WARNING  | yolox.utils.checkpoint:load_ckpt:24 - Shape of head.cls_preds.2.weight in checkpoint is torch.Size([80, 64, 1, 1]), while shape of head.cls_preds.2.weight in model is torch.Size([4, 64, 1, 1]).
2022-12-23 17:50:49.658 | WARNING  | yolox.utils.checkpoint:load_ckpt:24 - Shape of head.cls_preds.2.bias in checkpoint is torch.Size([80]), while shape of head.cls_preds.2.bias in model is torch.Size([4]).
2022-12-23 17:50:49.671 | INFO     | yolox.data.datasets.coco:__init__:64 - loading annotations into memory...
2022-12-23 17:50:49.672 | INFO     | yolox.data.datasets.coco:__init__:64 - Done (t=0.00s)
2022-12-23 17:50:49.672 | INFO     | pycocotools.coco:__init__:86 - creating index...
2022-12-23 17:50:49.673 | INFO     | pycocotools.coco:__init__:86 - index created!
2022-12-23 17:50:49.686 | INFO     | yolox.core.trainer:before_train:155 - init prefetcher, this might take one minute or less...
2022-12-23 17:50:54.883 | INFO     | yolox.data.datasets.coco:__init__:64 - loading annotations into memory...
2022-12-23 17:50:54.883 | INFO     | yolox.data.datasets.coco:__init__:64 - Done (t=0.00s)
2022-12-23 17:50:54.884 | INFO     | pycocotools.coco:__init__:86 - creating index...
2022-12-23 17:50:54.884 | INFO     | pycocotools.coco:__init__:86 - index created!
2022-12-23 17:50:54.887 | INFO     | yolox.core.trainer:before_train:191 - Training start...
2022-12-23 17:50:54.890 | INFO     | yolox.core.trainer:before_train:192 - 
YOLOX(
  (backbone): YOLOPAFPN(
    (backbone): CSPDarknet(
      (stem): Focus(
        (conv): BaseConv(
          (conv): Conv2d(12, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn): BatchNorm2d(16, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
          (act): SiLU(inplace=True)
        )
      )
      (dark2): Sequential(
        (0): DWConv(
          (dconv): BaseConv(
            (conv): Conv2d(16, 16, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=16, bias=False)
            (bn): BatchNorm2d(16, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
            (act): SiLU(inplace=True)
          )
          (pconv): BaseConv(
            (conv): Conv2d(16, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn): BatchNorm2d(32, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
            (act): SiLU(inplace=True)
          )
        )
        (1): CSPLayer(
          (conv1): BaseConv(
            (conv): Conv2d(32, 16, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn): BatchNorm2d(16, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
            (act): SiLU(inplace=True)
          )
          (conv2): BaseConv(
            (conv): Conv2d(32, 16, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn): BatchNorm2d(16, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
            (act): SiLU(inplace=True)
          )
          (conv3): BaseConv(
            (conv): Conv2d(32, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn): BatchNorm2d(32, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
            (act): SiLU(inplace=True)
          )
          (m): Sequential(
            (0): Bottleneck(
              (conv1): BaseConv(
                (conv): Conv2d(16, 16, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (bn): BatchNorm2d(16, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                (act): SiLU(inplace=True)
              )
              (conv2): DWConv(
                (dconv): BaseConv(
                  (conv): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=16, bias=False)
                  (bn): BatchNorm2d(16, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                  (act): SiLU(inplace=True)
                )
                (pconv): BaseConv(
                  (conv): Conv2d(16, 16, kernel_size=(1, 1), stride=(1, 1), bias=False)
                  (bn): BatchNorm2d(16, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                  (act): SiLU(inplace=True)
                )
              )
            )
          )
        )
      )
      (dark3): Sequential(
        (0): DWConv(
          (dconv): BaseConv(
            (conv): Conv2d(32, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=32, bias=False)
            (bn): BatchNorm2d(32, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
            (act): SiLU(inplace=True)
          )
          (pconv): BaseConv(
            (conv): Conv2d(32, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
            (act): SiLU(inplace=True)
          )
        )
        (1): CSPLayer(
          (conv1): BaseConv(
            (conv): Conv2d(64, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn): BatchNorm2d(32, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
            (act): SiLU(inplace=True)
          )
          (conv2): BaseConv(
            (conv): Conv2d(64, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn): BatchNorm2d(32, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
            (act): SiLU(inplace=True)
          )
          (conv3): BaseConv(
            (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
            (act): SiLU(inplace=True)
          )
          (m): Sequential(
            (0): Bottleneck(
              (conv1): BaseConv(
                (conv): Conv2d(32, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (bn): BatchNorm2d(32, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                (act): SiLU(inplace=True)
              )
              (conv2): DWConv(
                (dconv): BaseConv(
                  (conv): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False)
                  (bn): BatchNorm2d(32, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                  (act): SiLU(inplace=True)
                )
                (pconv): BaseConv(
                  (conv): Conv2d(32, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)
                  (bn): BatchNorm2d(32, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                  (act): SiLU(inplace=True)
                )
              )
            )
            (1): Bottleneck(
              (conv1): BaseConv(
                (conv): Conv2d(32, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (bn): BatchNorm2d(32, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                (act): SiLU(inplace=True)
              )
              (conv2): DWConv(
                (dconv): BaseConv(
                  (conv): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False)
                  (bn): BatchNorm2d(32, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                  (act): SiLU(inplace=True)
                )
                (pconv): BaseConv(
                  (conv): Conv2d(32, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)
                  (bn): BatchNorm2d(32, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                  (act): SiLU(inplace=True)
                )
              )
            )
            (2): Bottleneck(
              (conv1): BaseConv(
                (conv): Conv2d(32, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (bn): BatchNorm2d(32, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                (act): SiLU(inplace=True)
              )
              (conv2): DWConv(
                (dconv): BaseConv(
                  (conv): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False)
                  (bn): BatchNorm2d(32, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                  (act): SiLU(inplace=True)
                )
                (pconv): BaseConv(
                  (conv): Conv2d(32, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)
                  (bn): BatchNorm2d(32, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                  (act): SiLU(inplace=True)
                )
              )
            )
          )
        )
      )
      (dark4): Sequential(
        (0): DWConv(
          (dconv): BaseConv(
            (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=64, bias=False)
            (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
            (act): SiLU(inplace=True)
          )
          (pconv): BaseConv(
            (conv): Conv2d(64, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn): BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
            (act): SiLU(inplace=True)
          )
        )
        (1): CSPLayer(
          (conv1): BaseConv(
            (conv): Conv2d(128, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
            (act): SiLU(inplace=True)
          )
          (conv2): BaseConv(
            (conv): Conv2d(128, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
            (act): SiLU(inplace=True)
          )
          (conv3): BaseConv(
            (conv): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn): BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
            (act): SiLU(inplace=True)
          )
          (m): Sequential(
            (0): Bottleneck(
              (conv1): BaseConv(
                (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                (act): SiLU(inplace=True)
              )
              (conv2): DWConv(
                (dconv): BaseConv(
                  (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=64, bias=False)
                  (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                  (act): SiLU(inplace=True)
                )
                (pconv): BaseConv(
                  (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
                  (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                  (act): SiLU(inplace=True)
                )
              )
            )
            (1): Bottleneck(
              (conv1): BaseConv(
                (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                (act): SiLU(inplace=True)
              )
              (conv2): DWConv(
                (dconv): BaseConv(
                  (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=64, bias=False)
                  (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                  (act): SiLU(inplace=True)
                )
                (pconv): BaseConv(
                  (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
                  (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                  (act): SiLU(inplace=True)
                )
              )
            )
            (2): Bottleneck(
              (conv1): BaseConv(
                (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                (act): SiLU(inplace=True)
              )
              (conv2): DWConv(
                (dconv): BaseConv(
                  (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=64, bias=False)
                  (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                  (act): SiLU(inplace=True)
                )
                (pconv): BaseConv(
                  (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
                  (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                  (act): SiLU(inplace=True)
                )
              )
            )
          )
        )
      )
      (dark5): Sequential(
        (0): DWConv(
          (dconv): BaseConv(
            (conv): Conv2d(128, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=128, bias=False)
            (bn): BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
            (act): SiLU(inplace=True)
          )
          (pconv): BaseConv(
            (conv): Conv2d(128, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn): BatchNorm2d(256, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
            (act): SiLU(inplace=True)
          )
        )
        (1): SPPBottleneck(
          (conv1): BaseConv(
            (conv): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn): BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
            (act): SiLU(inplace=True)
          )
          (m): ModuleList(
            (0): MaxPool2d(kernel_size=5, stride=1, padding=2, dilation=1, ceil_mode=False)
            (1): MaxPool2d(kernel_size=9, stride=1, padding=4, dilation=1, ceil_mode=False)
            (2): MaxPool2d(kernel_size=13, stride=1, padding=6, dilation=1, ceil_mode=False)
          )
          (conv2): BaseConv(
            (conv): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn): BatchNorm2d(256, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
            (act): SiLU(inplace=True)
          )
        )
        (2): CSPLayer(
          (conv1): BaseConv(
            (conv): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn): BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
            (act): SiLU(inplace=True)
          )
          (conv2): BaseConv(
            (conv): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn): BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
            (act): SiLU(inplace=True)
          )
          (conv3): BaseConv(
            (conv): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn): BatchNorm2d(256, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
            (act): SiLU(inplace=True)
          )
          (m): Sequential(
            (0): Bottleneck(
              (conv1): BaseConv(
                (conv): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (bn): BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                (act): SiLU(inplace=True)
              )
              (conv2): DWConv(
                (dconv): BaseConv(
                  (conv): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=128, bias=False)
                  (bn): BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                  (act): SiLU(inplace=True)
                )
                (pconv): BaseConv(
                  (conv): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
                  (bn): BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                  (act): SiLU(inplace=True)
                )
              )
            )
          )
        )
      )
    )
    (upsample): Upsample(scale_factor=2.0, mode=nearest)
    (lateral_conv0): BaseConv(
      (conv): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn): BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
      (act): SiLU(inplace=True)
    )
    (C3_p4): CSPLayer(
      (conv1): BaseConv(
        (conv): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
        (act): SiLU(inplace=True)
      )
      (conv2): BaseConv(
        (conv): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
        (act): SiLU(inplace=True)
      )
      (conv3): BaseConv(
        (conv): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn): BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
        (act): SiLU(inplace=True)
      )
      (m): Sequential(
        (0): Bottleneck(
          (conv1): BaseConv(
            (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
            (act): SiLU(inplace=True)
          )
          (conv2): DWConv(
            (dconv): BaseConv(
              (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=64, bias=False)
              (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): SiLU(inplace=True)
            )
            (pconv): BaseConv(
              (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): SiLU(inplace=True)
            )
          )
        )
      )
    )
    (reduce_conv1): BaseConv(
      (conv): Conv2d(128, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
      (act): SiLU(inplace=True)
    )
    (C3_p3): CSPLayer(
      (conv1): BaseConv(
        (conv): Conv2d(128, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn): BatchNorm2d(32, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
        (act): SiLU(inplace=True)
      )
      (conv2): BaseConv(
        (conv): Conv2d(128, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn): BatchNorm2d(32, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
        (act): SiLU(inplace=True)
      )
      (conv3): BaseConv(
        (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
        (act): SiLU(inplace=True)
      )
      (m): Sequential(
        (0): Bottleneck(
          (conv1): BaseConv(
            (conv): Conv2d(32, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn): BatchNorm2d(32, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
            (act): SiLU(inplace=True)
          )
          (conv2): DWConv(
            (dconv): BaseConv(
              (conv): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False)
              (bn): BatchNorm2d(32, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): SiLU(inplace=True)
            )
            (pconv): BaseConv(
              (conv): Conv2d(32, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (bn): BatchNorm2d(32, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): SiLU(inplace=True)
            )
          )
        )
      )
    )
    (bu_conv2): DWConv(
      (dconv): BaseConv(
        (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=64, bias=False)
        (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
        (act): SiLU(inplace=True)
      )
      (pconv): BaseConv(
        (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
        (act): SiLU(inplace=True)
      )
    )
    (C3_n3): CSPLayer(
      (conv1): BaseConv(
        (conv): Conv2d(128, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
        (act): SiLU(inplace=True)
      )
      (conv2): BaseConv(
        (conv): Conv2d(128, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
        (act): SiLU(inplace=True)
      )
      (conv3): BaseConv(
        (conv): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn): BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
        (act): SiLU(inplace=True)
      )
      (m): Sequential(
        (0): Bottleneck(
          (conv1): BaseConv(
            (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
            (act): SiLU(inplace=True)
          )
          (conv2): DWConv(
            (dconv): BaseConv(
              (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=64, bias=False)
              (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): SiLU(inplace=True)
            )
            (pconv): BaseConv(
              (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): SiLU(inplace=True)
            )
          )
        )
      )
    )
    (bu_conv1): DWConv(
      (dconv): BaseConv(
        (conv): Conv2d(128, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=128, bias=False)
        (bn): BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
        (act): SiLU(inplace=True)
      )
      (pconv): BaseConv(
        (conv): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn): BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
        (act): SiLU(inplace=True)
      )
    )
    (C3_n4): CSPLayer(
      (conv1): BaseConv(
        (conv): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn): BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
        (act): SiLU(inplace=True)
      )
      (conv2): BaseConv(
        (conv): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn): BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
        (act): SiLU(inplace=True)
      )
      (conv3): BaseConv(
        (conv): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn): BatchNorm2d(256, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
        (act): SiLU(inplace=True)
      )
      (m): Sequential(
        (0): Bottleneck(
          (conv1): BaseConv(
            (conv): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn): BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
            (act): SiLU(inplace=True)
          )
          (conv2): DWConv(
            (dconv): BaseConv(
              (conv): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=128, bias=False)
              (bn): BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): SiLU(inplace=True)
            )
            (pconv): BaseConv(
              (conv): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (bn): BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): SiLU(inplace=True)
            )
          )
        )
      )
    )
  )
  (head): YOLOXHead(
    (cls_convs): ModuleList(
      (0): Sequential(
        (0): DWConv(
          (dconv): BaseConv(
            (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=64, bias=False)
            (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
            (act): SiLU(inplace=True)
          )
          (pconv): BaseConv(
            (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
            (act): SiLU(inplace=True)
          )
        )
        (1): DWConv(
          (dconv): BaseConv(
            (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=64, bias=False)
            (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
            (act): SiLU(inplace=True)
          )
          (pconv): BaseConv(
            (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
            (act): SiLU(inplace=True)
          )
        )
      )
      (1): Sequential(
        (0): DWConv(
          (dconv): BaseConv(
            (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=64, bias=False)
            (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
            (act): SiLU(inplace=True)
          )
          (pconv): BaseConv(
            (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
            (act): SiLU(inplace=True)
          )
        )
        (1): DWConv(
          (dconv): BaseConv(
            (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=64, bias=False)
            (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
            (act): SiLU(inplace=True)
          )
          (pconv): BaseConv(
            (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
            (act): SiLU(inplace=True)
          )
        )
      )
      (2): Sequential(
        (0): DWConv(
          (dconv): BaseConv(
            (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=64, bias=False)
            (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
            (act): SiLU(inplace=True)
          )
          (pconv): BaseConv(
            (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
            (act): SiLU(inplace=True)
          )
        )
        (1): DWConv(
          (dconv): BaseConv(
            (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=64, bias=False)
            (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
            (act): SiLU(inplace=True)
          )
          (pconv): BaseConv(
            (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
            (act): SiLU(inplace=True)
          )
        )
      )
    )
    (reg_convs): ModuleList(
      (0): Sequential(
        (0): DWConv(
          (dconv): BaseConv(
            (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=64, bias=False)
            (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
            (act): SiLU(inplace=True)
          )
          (pconv): BaseConv(
            (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
            (act): SiLU(inplace=True)
          )
        )
        (1): DWConv(
          (dconv): BaseConv(
            (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=64, bias=False)
            (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
            (act): SiLU(inplace=True)
          )
          (pconv): BaseConv(
            (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
            (act): SiLU(inplace=True)
          )
        )
      )
      (1): Sequential(
        (0): DWConv(
          (dconv): BaseConv(
            (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=64, bias=False)
            (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
            (act): SiLU(inplace=True)
          )
          (pconv): BaseConv(
            (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
            (act): SiLU(inplace=True)
          )
        )
        (1): DWConv(
          (dconv): BaseConv(
            (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=64, bias=False)
            (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
            (act): SiLU(inplace=True)
          )
          (pconv): BaseConv(
            (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
            (act): SiLU(inplace=True)
          )
        )
      )
      (2): Sequential(
        (0): DWConv(
          (dconv): BaseConv(
            (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=64, bias=False)
            (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
            (act): SiLU(inplace=True)
          )
          (pconv): BaseConv(
            (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
            (act): SiLU(inplace=True)
          )
        )
        (1): DWConv(
          (dconv): BaseConv(
            (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=64, bias=False)
            (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
            (act): SiLU(inplace=True)
          )
          (pconv): BaseConv(
            (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
            (act): SiLU(inplace=True)
          )
        )
      )
    )
    (cls_preds): ModuleList(
      (0): Conv2d(64, 4, kernel_size=(1, 1), stride=(1, 1))
      (1): Conv2d(64, 4, kernel_size=(1, 1), stride=(1, 1))
      (2): Conv2d(64, 4, kernel_size=(1, 1), stride=(1, 1))
    )
    (reg_preds): ModuleList(
      (0): Conv2d(64, 4, kernel_size=(1, 1), stride=(1, 1))
      (1): Conv2d(64, 4, kernel_size=(1, 1), stride=(1, 1))
      (2): Conv2d(64, 4, kernel_size=(1, 1), stride=(1, 1))
    )
    (obj_preds): ModuleList(
      (0): Conv2d(64, 1, kernel_size=(1, 1), stride=(1, 1))
      (1): Conv2d(64, 1, kernel_size=(1, 1), stride=(1, 1))
      (2): Conv2d(64, 1, kernel_size=(1, 1), stride=(1, 1))
    )
    (stems): ModuleList(
      (0): BaseConv(
        (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
        (act): SiLU(inplace=True)
      )
      (1): BaseConv(
        (conv): Conv2d(128, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
        (act): SiLU(inplace=True)
      )
      (2): BaseConv(
        (conv): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
        (act): SiLU(inplace=True)
      )
    )
    (l1_loss): L1Loss()
    (bcewithlog_loss): BCEWithLogitsLoss()
    (iou_loss): IOUloss()
  )
)
2022-12-23 17:50:54.890 | INFO     | yolox.core.trainer:before_epoch:203 - ---> start train epoch1
2022-12-23 17:50:56.930 | INFO     | yolox.core.trainer:after_train:195 - Training of experiment is done and the best AP is 0.00
2022-12-23 17:50:56.931 | ERROR    | yolox.core.launch:launch:98 - An error has been caught in function 'launch', process 'MainProcess' (22519), thread 'MainThread' (140055977981760):
Traceback (most recent call last):

  File "/root/YOLOX/tools/train.py", line 134, in <module>
    launch(
    └ <function launch at 0x7f60c2cdc940>

> File "/root/YOLOX/yolox/core/launch.py", line 98, in launch
    main_func(*args)
    │          └ (╒═══════════════════╤═══════════════════════════════════════════════════════════════════════════════════════════════════════...
    └ <function main at 0x7f60b5d900d0>

  File "/root/YOLOX/tools/train.py", line 118, in main
    trainer.train()
    │       └ <function Trainer.train at 0x7f60b53f2dc0>
    └ <yolox.core.trainer.Trainer object at 0x7f60b543ff70>

  File "/root/YOLOX/yolox/core/trainer.py", line 76, in train
    self.train_in_epoch()
    │    └ <function Trainer.train_in_epoch at 0x7f60b53f94c0>
    └ <yolox.core.trainer.Trainer object at 0x7f60b543ff70>

  File "/root/YOLOX/yolox/core/trainer.py", line 85, in train_in_epoch
    self.train_in_iter()
    │    └ <function Trainer.train_in_iter at 0x7f60b53f9550>
    └ <yolox.core.trainer.Trainer object at 0x7f60b543ff70>

  File "/root/YOLOX/yolox/core/trainer.py", line 91, in train_in_iter
    self.train_one_iter()
    │    └ <function Trainer.train_one_iter at 0x7f60b53f95e0>
    └ <yolox.core.trainer.Trainer object at 0x7f60b543ff70>

  File "/root/YOLOX/yolox/core/trainer.py", line 105, in train_one_iter
    outputs = self.model(inps, targets)
              │    │     │     └ tensor([[[  1.0000, 205.3750, 214.1250,  49.4062,  30.5469],
              │    │     │                [  0.0000,   0.0000,   0.0000,   0.0000,   0.0000],
              │    │     │          ...
              │    │     └ tensor([[[[165., 165., 165.,  ..., 175., 174., 174.],
              │    │                 [165., 165., 165.,  ..., 174., 174., 174.],
              │    │                 [165., ...
              │    └ YOLOX(
              │        (backbone): YOLOPAFPN(
              │          (backbone): CSPDarknet(
              │            (stem): Focus(
              │              (conv): BaseConv(
              │                (conv): ...
              └ <yolox.core.trainer.Trainer object at 0x7f60b543ff70>

  File "/usr/local/lib/python3.8/dist-packages/torch/nn/modules/module.py", line 1190, in _call_impl
    return forward_call(*input, **kwargs)
           │             │        └ {}
           │             └ (tensor([[[[165., 165., 165.,  ..., 175., 174., 174.],
           │                         [165., 165., 165.,  ..., 174., 174., 174.],
           │                         [165.,...
           └ <bound method YOLOX.forward of YOLOX(
               (backbone): YOLOPAFPN(
                 (backbone): CSPDarknet(
                   (stem): Focus(
                     (conv...

  File "/root/YOLOX/yolox/models/yolox.py", line 34, in forward
    loss, iou_loss, conf_loss, cls_loss, l1_loss, num_fg = self.head(
                                                           └ YOLOX(
                                                               (backbone): YOLOPAFPN(
                                                                 (backbone): CSPDarknet(
                                                                   (stem): Focus(
                                                                     (conv): BaseConv(
                                                                       (conv): ...

  File "/usr/local/lib/python3.8/dist-packages/torch/nn/modules/module.py", line 1190, in _call_impl
    return forward_call(*input, **kwargs)
           │             │        └ {}
           │             └ <unprintable tuple object>
           └ <bound method YOLOXHead.forward of YOLOXHead(
               (cls_convs): ModuleList(
                 (0): Sequential(
                   (0): DWConv(
                     (dco...

  File "/root/YOLOX/yolox/models/yolo_head.py", line 157, in forward
    cls_feat = cls_conv(cls_x)
               │        └ <unprintable Tensor object>
               └ Sequential(
                   (0): DWConv(
                     (dconv): BaseConv(
                       (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1,...

  File "/usr/local/lib/python3.8/dist-packages/torch/nn/modules/module.py", line 1190, in _call_impl
    return forward_call(*input, **kwargs)
           │             │        └ {}
           │             └ <unprintable tuple object>
           └ <bound method Sequential.forward of Sequential(
               (0): DWConv(
                 (dconv): BaseConv(
                   (conv): Conv2d(64, 64, kernel_siz...

  File "/usr/local/lib/python3.8/dist-packages/torch/nn/modules/container.py", line 204, in forward
    input = module(input)
            │      └ <unprintable Tensor object>
            └ DWConv(
                (dconv): BaseConv(
                  (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=64, bias=Fa...

  File "/usr/local/lib/python3.8/dist-packages/torch/nn/modules/module.py", line 1190, in _call_impl
    return forward_call(*input, **kwargs)
           │             │        └ {}
           │             └ <unprintable tuple object>
           └ <bound method DWConv.forward of DWConv(
               (dconv): BaseConv(
                 (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), pa...

  File "/root/YOLOX/yolox/models/network_blocks.py", line 75, in forward
    x = self.dconv(x)
        │          └ <unprintable Tensor object>
        └ DWConv(
            (dconv): BaseConv(
              (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=64, bias=Fa...

  File "/usr/local/lib/python3.8/dist-packages/torch/nn/modules/module.py", line 1190, in _call_impl
    return forward_call(*input, **kwargs)
           │             │        └ {}
           │             └ <unprintable tuple object>
           └ <bound method BaseConv.forward of BaseConv(
               (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), group...

  File "/root/YOLOX/yolox/models/network_blocks.py", line 51, in forward
    return self.act(self.bn(self.conv(x)))
           │        │       │         └ <unprintable Tensor object>
           │        │       └ BaseConv(
           │        │           (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=64, bias=False)
           │        │           (bn): BatchNor...
           │        └ BaseConv(
           │            (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=64, bias=False)
           │            (bn): BatchNor...
           └ BaseConv(
               (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=64, bias=False)
               (bn): BatchNor...

  File "/usr/local/lib/python3.8/dist-packages/torch/nn/modules/module.py", line 1190, in _call_impl
    return forward_call(*input, **kwargs)
           │             │        └ {}
           │             └ <unprintable tuple object>
           └ <bound method _BatchNorm.forward of BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)>

  File "/usr/local/lib/python3.8/dist-packages/torch/nn/modules/batchnorm.py", line 171, in forward
    return F.batch_norm(
           │ └ <function batch_norm at 0x7f60c3c3b1f0>
           └ <module 'torch.nn.functional' from '/usr/local/lib/python3.8/dist-packages/torch/nn/functional.py'>

  File "/usr/local/lib/python3.8/dist-packages/torch/nn/functional.py", line 2450, in batch_norm
    return torch.batch_norm(
           │     └ <built-in method batch_norm of type object at 0x7f613121f980>
           └ <module 'torch' from '/usr/local/lib/python3.8/dist-packages/torch/__init__.py'>

torch.cuda.OutOfMemoryError: CUDA out of memory. Tried to allocate 2.00 MiB (GPU 0; 7.79 GiB total capacity; 65.89 MiB already allocated; 2.50 MiB free; 6.69 GiB reserved in total by PyTorch) If reserved memory is >> allocated memory try setting max_split_size_mb to avoid fragmentation.  See documentation for Memory Management and PYTORCH_CUDA_ALLOC_CONF
2022-12-23 18:08:57.037 | INFO     | yolox.core.trainer:before_train:130 - args: Namespace(batch_size=1, cache=False, ckpt='/root/YOLOX/yolox_nano.pth', devices=1, dist_backend='nccl', dist_url=None, exp_file='/root/YOLOX/yolox_nano.py', experiment_name='yolox_nano', fp16=True, logger='tensorboard', machine_rank=0, name=None, num_machines=1, occupy=True, opts=[], resume=False, start_epoch=None)
2022-12-23 18:08:57.040 | INFO     | yolox.core.trainer:before_train:131 - exp value:
╒═══════════════════╤════════════════════════════════════════════════════════════╕
│ keys              │ values                                                     │
╞═══════════════════╪════════════════════════════════════════════════════════════╡
│ seed              │ None                                                       │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ output_dir        │ './YOLOX_outputs'                                          │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ print_interval    │ 10                                                         │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ eval_interval     │ 1                                                          │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ num_classes       │ 4                                                          │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ depth             │ 0.33                                                       │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ width             │ 0.25                                                       │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ act               │ 'silu'                                                     │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ data_num_workers  │ 4                                                          │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ input_size        │ (416, 416)                                                 │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ multiscale_range  │ 5                                                          │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ data_dir          │ '/root/ML/dataset/images'                                  │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ train_ann         │ '/root/ML/dataset/annotations/train_annotations.json'      │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ val_ann           │ '/root/ML/dataset/annotations/validation_annotations.json' │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ test_ann          │ 'instances_test2017.json'                                  │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ mosaic_prob       │ 0.5                                                        │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ mixup_prob        │ 1.0                                                        │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ hsv_prob          │ 1.0                                                        │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ flip_prob         │ 0.5                                                        │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ degrees           │ 10.0                                                       │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ translate         │ 0.1                                                        │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ mosaic_scale      │ (0.5, 1.5)                                                 │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ enable_mixup      │ False                                                      │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ mixup_scale       │ (0.5, 1.5)                                                 │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ shear             │ 2.0                                                        │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ warmup_epochs     │ 5                                                          │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ max_epoch         │ 20                                                         │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ warmup_lr         │ 0                                                          │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ min_lr_ratio      │ 0.05                                                       │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ basic_lr_per_img  │ 0.00015625                                                 │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ scheduler         │ 'yoloxwarmcos'                                             │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ no_aug_epochs     │ 15                                                         │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ ema               │ True                                                       │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ weight_decay      │ 0.0005                                                     │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ momentum          │ 0.9                                                        │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ save_history_ckpt │ True                                                       │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ exp_name          │ 'yolox_nano'                                               │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ test_size         │ (416, 416)                                                 │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ test_conf         │ 0.01                                                       │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ nmsthre           │ 0.65                                                       │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ random_size       │ (10, 20)                                                   │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ data_num_worker   │ 4                                                          │
╘═══════════════════╧════════════════════════════════════════════════════════════╛
2022-12-23 18:08:57.196 | INFO     | yolox.core.trainer:before_train:136 - Model Summary: Params: 0.90M, Gflops: 1.08
2022-12-23 18:08:59.907 | INFO     | yolox.core.trainer:resume_train:311 - loading checkpoint for fine tuning
2022-12-23 18:08:59.996 | WARNING  | yolox.utils.checkpoint:load_ckpt:24 - Shape of head.cls_preds.0.weight in checkpoint is torch.Size([80, 64, 1, 1]), while shape of head.cls_preds.0.weight in model is torch.Size([4, 64, 1, 1]).
2022-12-23 18:08:59.997 | WARNING  | yolox.utils.checkpoint:load_ckpt:24 - Shape of head.cls_preds.0.bias in checkpoint is torch.Size([80]), while shape of head.cls_preds.0.bias in model is torch.Size([4]).
2022-12-23 18:08:59.997 | WARNING  | yolox.utils.checkpoint:load_ckpt:24 - Shape of head.cls_preds.1.weight in checkpoint is torch.Size([80, 64, 1, 1]), while shape of head.cls_preds.1.weight in model is torch.Size([4, 64, 1, 1]).
2022-12-23 18:08:59.997 | WARNING  | yolox.utils.checkpoint:load_ckpt:24 - Shape of head.cls_preds.1.bias in checkpoint is torch.Size([80]), while shape of head.cls_preds.1.bias in model is torch.Size([4]).
2022-12-23 18:08:59.997 | WARNING  | yolox.utils.checkpoint:load_ckpt:24 - Shape of head.cls_preds.2.weight in checkpoint is torch.Size([80, 64, 1, 1]), while shape of head.cls_preds.2.weight in model is torch.Size([4, 64, 1, 1]).
2022-12-23 18:08:59.997 | WARNING  | yolox.utils.checkpoint:load_ckpt:24 - Shape of head.cls_preds.2.bias in checkpoint is torch.Size([80]), while shape of head.cls_preds.2.bias in model is torch.Size([4]).
2022-12-23 18:09:00.008 | INFO     | yolox.data.datasets.coco:__init__:64 - loading annotations into memory...
2022-12-23 18:09:00.009 | INFO     | yolox.data.datasets.coco:__init__:64 - Done (t=0.00s)
2022-12-23 18:09:00.010 | INFO     | pycocotools.coco:__init__:86 - creating index...
2022-12-23 18:09:00.010 | INFO     | pycocotools.coco:__init__:86 - index created!
2022-12-23 18:09:00.018 | INFO     | yolox.core.trainer:before_train:155 - init prefetcher, this might take one minute or less...
2022-12-23 18:09:00.174 | ERROR    | yolox.core.launch:launch:98 - An error has been caught in function 'launch', process 'MainProcess' (2470), thread 'MainThread' (140403125466944):
Traceback (most recent call last):

  File "/root/YOLOX/tools/train.py", line 134, in <module>
    launch(
    └ <function launch at 0x7fb196681940>

> File "/root/YOLOX/yolox/core/launch.py", line 98, in launch
    main_func(*args)
    │          └ (╒═══════════════════╤═══════════════════════════════════════════════════════════════════════════════════════════════════════...
    └ <function main at 0x7fb1897340d0>

  File "/root/YOLOX/tools/train.py", line 118, in main
    trainer.train()
    │       └ <function Trainer.train at 0x7fb188d96dc0>
    └ <yolox.core.trainer.Trainer object at 0x7fb188de3f70>

  File "/root/YOLOX/yolox/core/trainer.py", line 74, in train
    self.before_train()
    │    └ <function Trainer.before_train at 0x7fb188d9d670>
    └ <yolox.core.trainer.Trainer object at 0x7fb188de3f70>

  File "/root/YOLOX/yolox/core/trainer.py", line 164, in before_train
    occupy_mem(self.local_rank)
    │          │    └ 0
    │          └ <yolox.core.trainer.Trainer object at 0x7fb188de3f70>
    └ <function occupy_mem at 0x7fb18972a040>

  File "/root/YOLOX/yolox/utils/metric.py", line 41, in occupy_mem
    x = torch.cuda.FloatTensor(256, 1024, block_mem)
        │     │    │                      └ 7369
        │     │    └ <class 'torch.cuda.FloatTensor'>
        │     └ <module 'torch.cuda' from '/usr/local/lib/python3.8/dist-packages/torch/cuda/__init__.py'>
        └ <module 'torch' from '/usr/local/lib/python3.8/dist-packages/torch/__init__.py'>

torch.cuda.OutOfMemoryError: CUDA out of memory. Tried to allocate 7.20 GiB (GPU 0; 7.79 GiB total capacity; 5.62 MiB already allocated; 7.14 GiB free; 26.00 MiB reserved in total by PyTorch) If reserved memory is >> allocated memory try setting max_split_size_mb to avoid fragmentation.  See documentation for Memory Management and PYTORCH_CUDA_ALLOC_CONF
2022-12-23 18:09:57.581 | INFO     | yolox.core.trainer:before_train:130 - args: Namespace(batch_size=1, cache=False, ckpt='/root/YOLOX/yolox_nano.pth', devices=1, dist_backend='nccl', dist_url=None, exp_file='/root/YOLOX/yolox_nano.py', experiment_name='yolox_nano', fp16=True, logger='tensorboard', machine_rank=0, name=None, num_machines=1, occupy=True, opts=[], resume=False, start_epoch=None)
2022-12-23 18:09:57.583 | INFO     | yolox.core.trainer:before_train:131 - exp value:
╒═══════════════════╤════════════════════════════════════════════════════════════╕
│ keys              │ values                                                     │
╞═══════════════════╪════════════════════════════════════════════════════════════╡
│ seed              │ None                                                       │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ output_dir        │ './YOLOX_outputs'                                          │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ print_interval    │ 10                                                         │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ eval_interval     │ 1                                                          │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ num_classes       │ 4                                                          │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ depth             │ 0.33                                                       │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ width             │ 0.25                                                       │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ act               │ 'silu'                                                     │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ data_num_workers  │ 4                                                          │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ input_size        │ (416, 416)                                                 │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ multiscale_range  │ 5                                                          │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ data_dir          │ '/root/ML/dataset/images'                                  │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ train_ann         │ '/root/ML/dataset/annotations/train_annotations.json'      │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ val_ann           │ '/root/ML/dataset/annotations/validation_annotations.json' │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ test_ann          │ 'instances_test2017.json'                                  │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ mosaic_prob       │ 0.5                                                        │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ mixup_prob        │ 1.0                                                        │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ hsv_prob          │ 1.0                                                        │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ flip_prob         │ 0.5                                                        │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ degrees           │ 10.0                                                       │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ translate         │ 0.1                                                        │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ mosaic_scale      │ (0.5, 1.5)                                                 │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ enable_mixup      │ False                                                      │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ mixup_scale       │ (0.5, 1.5)                                                 │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ shear             │ 2.0                                                        │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ warmup_epochs     │ 5                                                          │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ max_epoch         │ 20                                                         │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ warmup_lr         │ 0                                                          │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ min_lr_ratio      │ 0.05                                                       │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ basic_lr_per_img  │ 0.00015625                                                 │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ scheduler         │ 'yoloxwarmcos'                                             │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ no_aug_epochs     │ 15                                                         │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ ema               │ True                                                       │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ weight_decay      │ 0.0005                                                     │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ momentum          │ 0.9                                                        │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ save_history_ckpt │ True                                                       │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ exp_name          │ 'yolox_nano'                                               │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ test_size         │ (416, 416)                                                 │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ test_conf         │ 0.01                                                       │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ nmsthre           │ 0.65                                                       │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ random_size       │ (10, 20)                                                   │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ data_num_worker   │ 4                                                          │
╘═══════════════════╧════════════════════════════════════════════════════════════╛
2022-12-23 18:09:57.709 | INFO     | yolox.core.trainer:before_train:136 - Model Summary: Params: 0.90M, Gflops: 1.08
2022-12-23 18:09:58.907 | INFO     | yolox.core.trainer:resume_train:311 - loading checkpoint for fine tuning
2022-12-23 18:09:58.977 | WARNING  | yolox.utils.checkpoint:load_ckpt:24 - Shape of head.cls_preds.0.weight in checkpoint is torch.Size([80, 64, 1, 1]), while shape of head.cls_preds.0.weight in model is torch.Size([4, 64, 1, 1]).
2022-12-23 18:09:58.978 | WARNING  | yolox.utils.checkpoint:load_ckpt:24 - Shape of head.cls_preds.0.bias in checkpoint is torch.Size([80]), while shape of head.cls_preds.0.bias in model is torch.Size([4]).
2022-12-23 18:09:58.978 | WARNING  | yolox.utils.checkpoint:load_ckpt:24 - Shape of head.cls_preds.1.weight in checkpoint is torch.Size([80, 64, 1, 1]), while shape of head.cls_preds.1.weight in model is torch.Size([4, 64, 1, 1]).
2022-12-23 18:09:58.978 | WARNING  | yolox.utils.checkpoint:load_ckpt:24 - Shape of head.cls_preds.1.bias in checkpoint is torch.Size([80]), while shape of head.cls_preds.1.bias in model is torch.Size([4]).
2022-12-23 18:09:58.978 | WARNING  | yolox.utils.checkpoint:load_ckpt:24 - Shape of head.cls_preds.2.weight in checkpoint is torch.Size([80, 64, 1, 1]), while shape of head.cls_preds.2.weight in model is torch.Size([4, 64, 1, 1]).
2022-12-23 18:09:58.978 | WARNING  | yolox.utils.checkpoint:load_ckpt:24 - Shape of head.cls_preds.2.bias in checkpoint is torch.Size([80]), while shape of head.cls_preds.2.bias in model is torch.Size([4]).
2022-12-23 18:09:58.990 | INFO     | yolox.data.datasets.coco:__init__:64 - loading annotations into memory...
2022-12-23 18:09:58.991 | INFO     | yolox.data.datasets.coco:__init__:64 - Done (t=0.00s)
2022-12-23 18:09:58.991 | INFO     | pycocotools.coco:__init__:86 - creating index...
2022-12-23 18:09:58.991 | INFO     | pycocotools.coco:__init__:86 - index created!
2022-12-23 18:09:59.000 | INFO     | yolox.core.trainer:before_train:155 - init prefetcher, this might take one minute or less...
2022-12-23 18:09:59.232 | ERROR    | yolox.core.launch:launch:98 - An error has been caught in function 'launch', process 'MainProcess' (3503), thread 'MainThread' (139751675844416):
Traceback (most recent call last):

  File "/root/YOLOX/tools/train.py", line 134, in <module>
    launch(
    └ <function launch at 0x7f19e8fbb940>

> File "/root/YOLOX/yolox/core/launch.py", line 98, in launch
    main_func(*args)
    │          └ (╒═══════════════════╤═══════════════════════════════════════════════════════════════════════════════════════════════════════...
    └ <function main at 0x7f19dc06e0d0>

  File "/root/YOLOX/tools/train.py", line 118, in main
    trainer.train()
    │       └ <function Trainer.train at 0x7f19db6d0dc0>
    └ <yolox.core.trainer.Trainer object at 0x7f19db71df70>

  File "/root/YOLOX/yolox/core/trainer.py", line 74, in train
    self.before_train()
    │    └ <function Trainer.before_train at 0x7f19db6d7670>
    └ <yolox.core.trainer.Trainer object at 0x7f19db71df70>

  File "/root/YOLOX/yolox/core/trainer.py", line 164, in before_train
    occupy_mem(self.local_rank)
    │          │    └ 0
    │          └ <yolox.core.trainer.Trainer object at 0x7f19db71df70>
    └ <function occupy_mem at 0x7f19dc064040>

  File "/root/YOLOX/yolox/utils/metric.py", line 41, in occupy_mem
    x = torch.cuda.FloatTensor(256, 1024, block_mem)
        │     │    │                      └ 7369
        │     │    └ <class 'torch.cuda.FloatTensor'>
        │     └ <module 'torch.cuda' from '/usr/local/lib/python3.8/dist-packages/torch/cuda/__init__.py'>
        └ <module 'torch' from '/usr/local/lib/python3.8/dist-packages/torch/__init__.py'>

torch.cuda.OutOfMemoryError: CUDA out of memory. Tried to allocate 7.20 GiB (GPU 0; 7.79 GiB total capacity; 5.62 MiB already allocated; 7.14 GiB free; 26.00 MiB reserved in total by PyTorch) If reserved memory is >> allocated memory try setting max_split_size_mb to avoid fragmentation.  See documentation for Memory Management and PYTORCH_CUDA_ALLOC_CONF
2022-12-23 18:19:18.702 | INFO     | yolox.core.trainer:before_train:130 - args: Namespace(batch_size=1, cache=False, ckpt='/root/YOLOX/yolox_nano.pth', devices=1, dist_backend='nccl', dist_url=None, exp_file='/root/YOLOX/yolox_nano.py', experiment_name='yolox_nano', fp16=True, logger='tensorboard', machine_rank=0, name=None, num_machines=1, occupy=True, opts=[], resume=False, start_epoch=None)
2022-12-23 18:19:18.704 | INFO     | yolox.core.trainer:before_train:131 - exp value:
╒═══════════════════╤════════════════════════════════════════════════════════════╕
│ keys              │ values                                                     │
╞═══════════════════╪════════════════════════════════════════════════════════════╡
│ seed              │ None                                                       │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ output_dir        │ './YOLOX_outputs'                                          │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ print_interval    │ 10                                                         │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ eval_interval     │ 1                                                          │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ num_classes       │ 4                                                          │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ depth             │ 0.33                                                       │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ width             │ 0.25                                                       │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ act               │ 'silu'                                                     │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ data_num_workers  │ 4                                                          │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ input_size        │ (416, 416)                                                 │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ multiscale_range  │ 5                                                          │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ data_dir          │ '/root/ML/dataset/images'                                  │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ train_ann         │ '/root/ML/dataset/annotations/train_annotations.json'      │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ val_ann           │ '/root/ML/dataset/annotations/validation_annotations.json' │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ test_ann          │ 'instances_test2017.json'                                  │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ mosaic_prob       │ 0.5                                                        │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ mixup_prob        │ 1.0                                                        │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ hsv_prob          │ 1.0                                                        │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ flip_prob         │ 0.5                                                        │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ degrees           │ 10.0                                                       │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ translate         │ 0.1                                                        │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ mosaic_scale      │ (0.5, 1.5)                                                 │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ enable_mixup      │ False                                                      │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ mixup_scale       │ (0.5, 1.5)                                                 │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ shear             │ 2.0                                                        │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ warmup_epochs     │ 5                                                          │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ max_epoch         │ 20                                                         │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ warmup_lr         │ 0                                                          │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ min_lr_ratio      │ 0.05                                                       │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ basic_lr_per_img  │ 0.00015625                                                 │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ scheduler         │ 'yoloxwarmcos'                                             │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ no_aug_epochs     │ 15                                                         │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ ema               │ True                                                       │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ weight_decay      │ 0.0005                                                     │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ momentum          │ 0.9                                                        │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ save_history_ckpt │ True                                                       │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ exp_name          │ 'yolox_nano'                                               │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ test_size         │ (416, 416)                                                 │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ test_conf         │ 0.01                                                       │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ nmsthre           │ 0.65                                                       │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ random_size       │ (10, 20)                                                   │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ data_num_worker   │ 4                                                          │
╘═══════════════════╧════════════════════════════════════════════════════════════╛
2022-12-23 18:19:18.850 | INFO     | yolox.core.trainer:before_train:136 - Model Summary: Params: 0.90M, Gflops: 1.08
2022-12-23 18:19:20.029 | INFO     | yolox.core.trainer:resume_train:311 - loading checkpoint for fine tuning
2022-12-23 18:19:20.104 | WARNING  | yolox.utils.checkpoint:load_ckpt:24 - Shape of head.cls_preds.0.weight in checkpoint is torch.Size([80, 64, 1, 1]), while shape of head.cls_preds.0.weight in model is torch.Size([4, 64, 1, 1]).
2022-12-23 18:19:20.105 | WARNING  | yolox.utils.checkpoint:load_ckpt:24 - Shape of head.cls_preds.0.bias in checkpoint is torch.Size([80]), while shape of head.cls_preds.0.bias in model is torch.Size([4]).
2022-12-23 18:19:20.105 | WARNING  | yolox.utils.checkpoint:load_ckpt:24 - Shape of head.cls_preds.1.weight in checkpoint is torch.Size([80, 64, 1, 1]), while shape of head.cls_preds.1.weight in model is torch.Size([4, 64, 1, 1]).
2022-12-23 18:19:20.105 | WARNING  | yolox.utils.checkpoint:load_ckpt:24 - Shape of head.cls_preds.1.bias in checkpoint is torch.Size([80]), while shape of head.cls_preds.1.bias in model is torch.Size([4]).
2022-12-23 18:19:20.105 | WARNING  | yolox.utils.checkpoint:load_ckpt:24 - Shape of head.cls_preds.2.weight in checkpoint is torch.Size([80, 64, 1, 1]), while shape of head.cls_preds.2.weight in model is torch.Size([4, 64, 1, 1]).
2022-12-23 18:19:20.106 | WARNING  | yolox.utils.checkpoint:load_ckpt:24 - Shape of head.cls_preds.2.bias in checkpoint is torch.Size([80]), while shape of head.cls_preds.2.bias in model is torch.Size([4]).
2022-12-23 18:19:20.120 | INFO     | yolox.data.datasets.coco:__init__:64 - loading annotations into memory...
2022-12-23 18:19:20.122 | INFO     | yolox.data.datasets.coco:__init__:64 - Done (t=0.00s)
2022-12-23 18:19:20.122 | INFO     | pycocotools.coco:__init__:86 - creating index...
2022-12-23 18:19:20.122 | INFO     | pycocotools.coco:__init__:86 - index created!
2022-12-23 18:19:20.131 | INFO     | yolox.core.trainer:before_train:155 - init prefetcher, this might take one minute or less...
2022-12-23 18:19:20.305 | ERROR    | yolox.core.launch:launch:98 - An error has been caught in function 'launch', process 'MainProcess' (11823), thread 'MainThread' (140041061545792):
Traceback (most recent call last):

  File "/root/YOLOX/tools/train.py", line 134, in <module>
    launch(
    └ <function launch at 0x7f5d49b71940>

> File "/root/YOLOX/yolox/core/launch.py", line 98, in launch
    main_func(*args)
    │          └ (╒═══════════════════╤═══════════════════════════════════════════════════════════════════════════════════════════════════════...
    └ <function main at 0x7f5d3cc240d0>

  File "/root/YOLOX/tools/train.py", line 118, in main
    trainer.train()
    │       └ <function Trainer.train at 0x7f5d3c286dc0>
    └ <yolox.core.trainer.Trainer object at 0x7f5d3c2d3f70>

  File "/root/YOLOX/yolox/core/trainer.py", line 74, in train
    self.before_train()
    │    └ <function Trainer.before_train at 0x7f5d3c28d670>
    └ <yolox.core.trainer.Trainer object at 0x7f5d3c2d3f70>

  File "/root/YOLOX/yolox/core/trainer.py", line 164, in before_train
    occupy_mem(self.local_rank)
    │          │    └ 0
    │          └ <yolox.core.trainer.Trainer object at 0x7f5d3c2d3f70>
    └ <function occupy_mem at 0x7f5d3cc1a040>

  File "/root/YOLOX/yolox/utils/metric.py", line 41, in occupy_mem
    x = torch.cuda.FloatTensor(256, 1024, block_mem)
        │     │    │                      └ 7369
        │     │    └ <class 'torch.cuda.FloatTensor'>
        │     └ <module 'torch.cuda' from '/usr/local/lib/python3.8/dist-packages/torch/cuda/__init__.py'>
        └ <module 'torch' from '/usr/local/lib/python3.8/dist-packages/torch/__init__.py'>

torch.cuda.OutOfMemoryError: CUDA out of memory. Tried to allocate 7.20 GiB (GPU 0; 7.79 GiB total capacity; 5.62 MiB already allocated; 7.14 GiB free; 26.00 MiB reserved in total by PyTorch) If reserved memory is >> allocated memory try setting max_split_size_mb to avoid fragmentation.  See documentation for Memory Management and PYTORCH_CUDA_ALLOC_CONF
2022-12-23 18:20:44.497 | INFO     | yolox.core.trainer:before_train:130 - args: Namespace(batch_size=1, cache=False, ckpt='/root/YOLOX/yolox_nano.pth', devices=2, dist_backend='nccl', dist_url=None, exp_file='/root/YOLOX/yolox_nano.py', experiment_name='yolox_nano', fp16=True, logger='tensorboard', machine_rank=0, name=None, num_machines=1, occupy=True, opts=[], resume=False, start_epoch=None)
2022-12-23 18:20:44.499 | INFO     | yolox.core.trainer:before_train:131 - exp value:
╒═══════════════════╤════════════════════════════════════════════════════════════╕
│ keys              │ values                                                     │
╞═══════════════════╪════════════════════════════════════════════════════════════╡
│ seed              │ None                                                       │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ output_dir        │ './YOLOX_outputs'                                          │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ print_interval    │ 10                                                         │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ eval_interval     │ 1                                                          │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ num_classes       │ 4                                                          │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ depth             │ 0.33                                                       │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ width             │ 0.25                                                       │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ act               │ 'silu'                                                     │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ data_num_workers  │ 4                                                          │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ input_size        │ (416, 416)                                                 │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ multiscale_range  │ 5                                                          │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ data_dir          │ '/root/ML/dataset/images'                                  │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ train_ann         │ '/root/ML/dataset/annotations/train_annotations.json'      │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ val_ann           │ '/root/ML/dataset/annotations/validation_annotations.json' │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ test_ann          │ 'instances_test2017.json'                                  │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ mosaic_prob       │ 0.5                                                        │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ mixup_prob        │ 1.0                                                        │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ hsv_prob          │ 1.0                                                        │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ flip_prob         │ 0.5                                                        │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ degrees           │ 10.0                                                       │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ translate         │ 0.1                                                        │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ mosaic_scale      │ (0.5, 1.5)                                                 │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ enable_mixup      │ False                                                      │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ mixup_scale       │ (0.5, 1.5)                                                 │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ shear             │ 2.0                                                        │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ warmup_epochs     │ 5                                                          │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ max_epoch         │ 20                                                         │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ warmup_lr         │ 0                                                          │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ min_lr_ratio      │ 0.05                                                       │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ basic_lr_per_img  │ 0.00015625                                                 │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ scheduler         │ 'yoloxwarmcos'                                             │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ no_aug_epochs     │ 15                                                         │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ ema               │ True                                                       │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ weight_decay      │ 0.0005                                                     │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ momentum          │ 0.9                                                        │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ save_history_ckpt │ True                                                       │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ exp_name          │ 'yolox_nano'                                               │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ test_size         │ (416, 416)                                                 │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ test_conf         │ 0.01                                                       │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ nmsthre           │ 0.65                                                       │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ random_size       │ (10, 20)                                                   │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ data_num_worker   │ 4                                                          │
╘═══════════════════╧════════════════════════════════════════════════════════════╛
2022-12-23 18:20:44.636 | INFO     | yolox.core.trainer:before_train:136 - Model Summary: Params: 0.90M, Gflops: 1.08
2022-12-23 18:20:44.654 | INFO     | yolox.core.trainer:resume_train:311 - loading checkpoint for fine tuning
2022-12-23 18:20:44.729 | WARNING  | yolox.utils.checkpoint:load_ckpt:24 - Shape of head.cls_preds.0.weight in checkpoint is torch.Size([80, 64, 1, 1]), while shape of head.cls_preds.0.weight in model is torch.Size([4, 64, 1, 1]).
2022-12-23 18:20:44.729 | WARNING  | yolox.utils.checkpoint:load_ckpt:24 - Shape of head.cls_preds.0.bias in checkpoint is torch.Size([80]), while shape of head.cls_preds.0.bias in model is torch.Size([4]).
2022-12-23 18:20:44.729 | WARNING  | yolox.utils.checkpoint:load_ckpt:24 - Shape of head.cls_preds.1.weight in checkpoint is torch.Size([80, 64, 1, 1]), while shape of head.cls_preds.1.weight in model is torch.Size([4, 64, 1, 1]).
2022-12-23 18:20:44.729 | WARNING  | yolox.utils.checkpoint:load_ckpt:24 - Shape of head.cls_preds.1.bias in checkpoint is torch.Size([80]), while shape of head.cls_preds.1.bias in model is torch.Size([4]).
2022-12-23 18:20:44.729 | WARNING  | yolox.utils.checkpoint:load_ckpt:24 - Shape of head.cls_preds.2.weight in checkpoint is torch.Size([80, 64, 1, 1]), while shape of head.cls_preds.2.weight in model is torch.Size([4, 64, 1, 1]).
2022-12-23 18:20:44.730 | WARNING  | yolox.utils.checkpoint:load_ckpt:24 - Shape of head.cls_preds.2.bias in checkpoint is torch.Size([80]), while shape of head.cls_preds.2.bias in model is torch.Size([4]).
2022-12-23 18:20:44.742 | INFO     | yolox.data.datasets.coco:__init__:64 - loading annotations into memory...
2022-12-23 18:20:44.743 | INFO     | yolox.data.datasets.coco:__init__:64 - Done (t=0.00s)
2022-12-23 18:20:44.743 | INFO     | pycocotools.coco:__init__:86 - creating index...
2022-12-23 18:20:44.743 | INFO     | pycocotools.coco:__init__:86 - index created!
2022-12-23 18:20:44.752 | ERROR    | yolox.core.launch:_distributed_worker:147 - An error has been caught in function '_distributed_worker', process 'SpawnProcess-1' (13173), thread 'MainThread' (139834167875392):
Traceback (most recent call last):

  File "<string>", line 1, in <module>
  File "/usr/lib/python3.8/multiprocessing/spawn.py", line 116, in spawn_main
    exitcode = _main(fd, parent_sentinel)
               │     │   └ 5
               │     └ 8
               └ <function _main at 0x7f2dadb14ee0>
  File "/usr/lib/python3.8/multiprocessing/spawn.py", line 129, in _main
    return self._bootstrap(parent_sentinel)
           │    │          └ 5
           │    └ <function BaseProcess._bootstrap at 0x7f2dadc139d0>
           └ <SpawnProcess name='SpawnProcess-1' parent=13148 started>
  File "/usr/lib/python3.8/multiprocessing/process.py", line 315, in _bootstrap
    self.run()
    │    └ <function BaseProcess.run at 0x7f2dadc13040>
    └ <SpawnProcess name='SpawnProcess-1' parent=13148 started>
  File "/usr/lib/python3.8/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
    │    │        │    │        │    └ {}
    │    │        │    │        └ <SpawnProcess name='SpawnProcess-1' parent=13148 started>
    │    │        │    └ (<function _distributed_worker at 0x7f2d1dde4040>, 0, (<function main at 0x7f2d10f09700>, 2, 2, 0, 'nccl', 'tcp://127.0.0.1:4...
    │    │        └ <SpawnProcess name='SpawnProcess-1' parent=13148 started>
    │    └ <function _wrap at 0x7f2d1eac58b0>
    └ <SpawnProcess name='SpawnProcess-1' parent=13148 started>

  File "/usr/local/lib/python3.8/dist-packages/torch/multiprocessing/spawn.py", line 69, in _wrap
    fn(i, *args)
    │  │   └ (<function main at 0x7f2d10f09700>, 2, 2, 0, 'nccl', 'tcp://127.0.0.1:47625', (╒═══════════════════╤═════════════════════════...
    │  └ 0
    └ <function _distributed_worker at 0x7f2d1dde4040>

> File "/root/YOLOX/yolox/core/launch.py", line 147, in _distributed_worker
    main_func(*args)
    │          └ (╒═══════════════════╤═══════════════════════════════════════════════════════════════════════════════════════════════════════...
    └ <function main at 0x7f2d10f09700>

  File "/root/YOLOX/tools/train.py", line 118, in main
    trainer.train()
    │       └ <function Trainer.train at 0x7f2d10502430>
    └ <yolox.core.trainer.Trainer object at 0x7f2d10519ca0>

  File "/root/YOLOX/yolox/core/trainer.py", line 74, in train
    self.before_train()
    │    └ <function Trainer.before_train at 0x7f2d10502ca0>
    └ <yolox.core.trainer.Trainer object at 0x7f2d10519ca0>

  File "/root/YOLOX/yolox/core/trainer.py", line 149, in before_train
    self.train_loader = self.exp.get_data_loader(
    │                   │    │   └ <function Exp.get_data_loader at 0x7f2d105025e0>
    │                   │    └ ╒═══════════════════╤════════════════════════════════════════════════════════════════════════════════════════════════════════...
    │                   └ <yolox.core.trainer.Trainer object at 0x7f2d10519ca0>
    └ <yolox.core.trainer.Trainer object at 0x7f2d10519ca0>

  File "/root/YOLOX/yolox/exp/yolox_base.py", line 179, in get_data_loader
    batch_sampler = YoloBatchSampler(
                    └ <class 'yolox.data.samplers.YoloBatchSampler'>

  File "/root/YOLOX/yolox/data/samplers.py", line 22, in __init__
    super().__init__(*args, **kwargs)
                      │       └ {'sampler': <yolox.data.samplers.InfiniteSampler object at 0x7f2d31e03b80>, 'batch_size': 0, 'drop_last': False}
                      └ ()

  File "/usr/local/lib/python3.8/dist-packages/torch/utils/data/sampler.py", line 232, in __init__
    raise ValueError("batch_size should be a positive integer value, "

ValueError: batch_size should be a positive integer value, but got batch_size=0
2022-12-23 18:21:22.797 | INFO     | yolox.core.trainer:before_train:130 - args: Namespace(batch_size=2, cache=False, ckpt='/root/YOLOX/yolox_nano.pth', devices=2, dist_backend='nccl', dist_url=None, exp_file='/root/YOLOX/yolox_nano.py', experiment_name='yolox_nano', fp16=True, logger='tensorboard', machine_rank=0, name=None, num_machines=1, occupy=True, opts=[], resume=False, start_epoch=None)
2022-12-23 18:21:22.800 | INFO     | yolox.core.trainer:before_train:131 - exp value:
╒═══════════════════╤════════════════════════════════════════════════════════════╕
│ keys              │ values                                                     │
╞═══════════════════╪════════════════════════════════════════════════════════════╡
│ seed              │ None                                                       │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ output_dir        │ './YOLOX_outputs'                                          │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ print_interval    │ 10                                                         │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ eval_interval     │ 1                                                          │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ num_classes       │ 4                                                          │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ depth             │ 0.33                                                       │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ width             │ 0.25                                                       │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ act               │ 'silu'                                                     │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ data_num_workers  │ 4                                                          │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ input_size        │ (416, 416)                                                 │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ multiscale_range  │ 5                                                          │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ data_dir          │ '/root/ML/dataset/images'                                  │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ train_ann         │ '/root/ML/dataset/annotations/train_annotations.json'      │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ val_ann           │ '/root/ML/dataset/annotations/validation_annotations.json' │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ test_ann          │ 'instances_test2017.json'                                  │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ mosaic_prob       │ 0.5                                                        │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ mixup_prob        │ 1.0                                                        │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ hsv_prob          │ 1.0                                                        │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ flip_prob         │ 0.5                                                        │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ degrees           │ 10.0                                                       │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ translate         │ 0.1                                                        │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ mosaic_scale      │ (0.5, 1.5)                                                 │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ enable_mixup      │ False                                                      │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ mixup_scale       │ (0.5, 1.5)                                                 │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ shear             │ 2.0                                                        │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ warmup_epochs     │ 5                                                          │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ max_epoch         │ 20                                                         │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ warmup_lr         │ 0                                                          │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ min_lr_ratio      │ 0.05                                                       │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ basic_lr_per_img  │ 0.00015625                                                 │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ scheduler         │ 'yoloxwarmcos'                                             │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ no_aug_epochs     │ 15                                                         │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ ema               │ True                                                       │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ weight_decay      │ 0.0005                                                     │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ momentum          │ 0.9                                                        │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ save_history_ckpt │ True                                                       │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ exp_name          │ 'yolox_nano'                                               │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ test_size         │ (416, 416)                                                 │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ test_conf         │ 0.01                                                       │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ nmsthre           │ 0.65                                                       │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ random_size       │ (10, 20)                                                   │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ data_num_worker   │ 4                                                          │
╘═══════════════════╧════════════════════════════════════════════════════════════╛
2022-12-23 18:21:22.972 | INFO     | yolox.core.trainer:before_train:136 - Model Summary: Params: 0.90M, Gflops: 1.08
2022-12-23 18:21:22.990 | INFO     | yolox.core.trainer:resume_train:311 - loading checkpoint for fine tuning
2022-12-23 18:21:23.060 | WARNING  | yolox.utils.checkpoint:load_ckpt:24 - Shape of head.cls_preds.0.weight in checkpoint is torch.Size([80, 64, 1, 1]), while shape of head.cls_preds.0.weight in model is torch.Size([4, 64, 1, 1]).
2022-12-23 18:21:23.060 | WARNING  | yolox.utils.checkpoint:load_ckpt:24 - Shape of head.cls_preds.0.bias in checkpoint is torch.Size([80]), while shape of head.cls_preds.0.bias in model is torch.Size([4]).
2022-12-23 18:21:23.060 | WARNING  | yolox.utils.checkpoint:load_ckpt:24 - Shape of head.cls_preds.1.weight in checkpoint is torch.Size([80, 64, 1, 1]), while shape of head.cls_preds.1.weight in model is torch.Size([4, 64, 1, 1]).
2022-12-23 18:21:23.061 | WARNING  | yolox.utils.checkpoint:load_ckpt:24 - Shape of head.cls_preds.1.bias in checkpoint is torch.Size([80]), while shape of head.cls_preds.1.bias in model is torch.Size([4]).
2022-12-23 18:21:23.061 | WARNING  | yolox.utils.checkpoint:load_ckpt:24 - Shape of head.cls_preds.2.weight in checkpoint is torch.Size([80, 64, 1, 1]), while shape of head.cls_preds.2.weight in model is torch.Size([4, 64, 1, 1]).
2022-12-23 18:21:23.061 | WARNING  | yolox.utils.checkpoint:load_ckpt:24 - Shape of head.cls_preds.2.bias in checkpoint is torch.Size([80]), while shape of head.cls_preds.2.bias in model is torch.Size([4]).
2022-12-23 18:21:23.073 | INFO     | yolox.data.datasets.coco:__init__:64 - loading annotations into memory...
2022-12-23 18:21:23.074 | INFO     | yolox.data.datasets.coco:__init__:64 - Done (t=0.00s)
2022-12-23 18:21:23.075 | INFO     | pycocotools.coco:__init__:86 - creating index...
2022-12-23 18:21:23.075 | INFO     | pycocotools.coco:__init__:86 - index created!
2022-12-23 18:21:23.083 | INFO     | yolox.core.trainer:before_train:155 - init prefetcher, this might take one minute or less...
2022-12-23 18:21:32.169 | INFO     | yolox.data.datasets.coco:__init__:64 - loading annotations into memory...
2022-12-23 18:21:32.170 | INFO     | yolox.data.datasets.coco:__init__:64 - Done (t=0.00s)
2022-12-23 18:21:32.171 | INFO     | pycocotools.coco:__init__:86 - creating index...
2022-12-23 18:21:32.171 | INFO     | pycocotools.coco:__init__:86 - index created!
2022-12-23 18:21:32.174 | INFO     | yolox.core.trainer:before_train:191 - Training start...
2022-12-23 18:21:32.176 | INFO     | yolox.core.trainer:before_train:192 - 
DistributedDataParallel(
  (module): YOLOX(
    (backbone): YOLOPAFPN(
      (backbone): CSPDarknet(
        (stem): Focus(
          (conv): BaseConv(
            (conv): Conv2d(12, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn): BatchNorm2d(16, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
            (act): SiLU(inplace=True)
          )
        )
        (dark2): Sequential(
          (0): DWConv(
            (dconv): BaseConv(
              (conv): Conv2d(16, 16, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=16, bias=False)
              (bn): BatchNorm2d(16, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): SiLU(inplace=True)
            )
            (pconv): BaseConv(
              (conv): Conv2d(16, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (bn): BatchNorm2d(32, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): SiLU(inplace=True)
            )
          )
          (1): CSPLayer(
            (conv1): BaseConv(
              (conv): Conv2d(32, 16, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (bn): BatchNorm2d(16, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): SiLU(inplace=True)
            )
            (conv2): BaseConv(
              (conv): Conv2d(32, 16, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (bn): BatchNorm2d(16, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): SiLU(inplace=True)
            )
            (conv3): BaseConv(
              (conv): Conv2d(32, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (bn): BatchNorm2d(32, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): SiLU(inplace=True)
            )
            (m): Sequential(
              (0): Bottleneck(
                (conv1): BaseConv(
                  (conv): Conv2d(16, 16, kernel_size=(1, 1), stride=(1, 1), bias=False)
                  (bn): BatchNorm2d(16, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                  (act): SiLU(inplace=True)
                )
                (conv2): DWConv(
                  (dconv): BaseConv(
                    (conv): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=16, bias=False)
                    (bn): BatchNorm2d(16, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                    (act): SiLU(inplace=True)
                  )
                  (pconv): BaseConv(
                    (conv): Conv2d(16, 16, kernel_size=(1, 1), stride=(1, 1), bias=False)
                    (bn): BatchNorm2d(16, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                    (act): SiLU(inplace=True)
                  )
                )
              )
            )
          )
        )
        (dark3): Sequential(
          (0): DWConv(
            (dconv): BaseConv(
              (conv): Conv2d(32, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=32, bias=False)
              (bn): BatchNorm2d(32, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): SiLU(inplace=True)
            )
            (pconv): BaseConv(
              (conv): Conv2d(32, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): SiLU(inplace=True)
            )
          )
          (1): CSPLayer(
            (conv1): BaseConv(
              (conv): Conv2d(64, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (bn): BatchNorm2d(32, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): SiLU(inplace=True)
            )
            (conv2): BaseConv(
              (conv): Conv2d(64, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (bn): BatchNorm2d(32, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): SiLU(inplace=True)
            )
            (conv3): BaseConv(
              (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): SiLU(inplace=True)
            )
            (m): Sequential(
              (0): Bottleneck(
                (conv1): BaseConv(
                  (conv): Conv2d(32, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)
                  (bn): BatchNorm2d(32, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                  (act): SiLU(inplace=True)
                )
                (conv2): DWConv(
                  (dconv): BaseConv(
                    (conv): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False)
                    (bn): BatchNorm2d(32, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                    (act): SiLU(inplace=True)
                  )
                  (pconv): BaseConv(
                    (conv): Conv2d(32, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)
                    (bn): BatchNorm2d(32, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                    (act): SiLU(inplace=True)
                  )
                )
              )
              (1): Bottleneck(
                (conv1): BaseConv(
                  (conv): Conv2d(32, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)
                  (bn): BatchNorm2d(32, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                  (act): SiLU(inplace=True)
                )
                (conv2): DWConv(
                  (dconv): BaseConv(
                    (conv): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False)
                    (bn): BatchNorm2d(32, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                    (act): SiLU(inplace=True)
                  )
                  (pconv): BaseConv(
                    (conv): Conv2d(32, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)
                    (bn): BatchNorm2d(32, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                    (act): SiLU(inplace=True)
                  )
                )
              )
              (2): Bottleneck(
                (conv1): BaseConv(
                  (conv): Conv2d(32, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)
                  (bn): BatchNorm2d(32, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                  (act): SiLU(inplace=True)
                )
                (conv2): DWConv(
                  (dconv): BaseConv(
                    (conv): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False)
                    (bn): BatchNorm2d(32, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                    (act): SiLU(inplace=True)
                  )
                  (pconv): BaseConv(
                    (conv): Conv2d(32, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)
                    (bn): BatchNorm2d(32, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                    (act): SiLU(inplace=True)
                  )
                )
              )
            )
          )
        )
        (dark4): Sequential(
          (0): DWConv(
            (dconv): BaseConv(
              (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=64, bias=False)
              (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): SiLU(inplace=True)
            )
            (pconv): BaseConv(
              (conv): Conv2d(64, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (bn): BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): SiLU(inplace=True)
            )
          )
          (1): CSPLayer(
            (conv1): BaseConv(
              (conv): Conv2d(128, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): SiLU(inplace=True)
            )
            (conv2): BaseConv(
              (conv): Conv2d(128, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): SiLU(inplace=True)
            )
            (conv3): BaseConv(
              (conv): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (bn): BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): SiLU(inplace=True)
            )
            (m): Sequential(
              (0): Bottleneck(
                (conv1): BaseConv(
                  (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
                  (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                  (act): SiLU(inplace=True)
                )
                (conv2): DWConv(
                  (dconv): BaseConv(
                    (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=64, bias=False)
                    (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                    (act): SiLU(inplace=True)
                  )
                  (pconv): BaseConv(
                    (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
                    (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                    (act): SiLU(inplace=True)
                  )
                )
              )
              (1): Bottleneck(
                (conv1): BaseConv(
                  (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
                  (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                  (act): SiLU(inplace=True)
                )
                (conv2): DWConv(
                  (dconv): BaseConv(
                    (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=64, bias=False)
                    (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                    (act): SiLU(inplace=True)
                  )
                  (pconv): BaseConv(
                    (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
                    (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                    (act): SiLU(inplace=True)
                  )
                )
              )
              (2): Bottleneck(
                (conv1): BaseConv(
                  (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
                  (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                  (act): SiLU(inplace=True)
                )
                (conv2): DWConv(
                  (dconv): BaseConv(
                    (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=64, bias=False)
                    (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                    (act): SiLU(inplace=True)
                  )
                  (pconv): BaseConv(
                    (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
                    (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                    (act): SiLU(inplace=True)
                  )
                )
              )
            )
          )
        )
        (dark5): Sequential(
          (0): DWConv(
            (dconv): BaseConv(
              (conv): Conv2d(128, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=128, bias=False)
              (bn): BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): SiLU(inplace=True)
            )
            (pconv): BaseConv(
              (conv): Conv2d(128, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (bn): BatchNorm2d(256, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): SiLU(inplace=True)
            )
          )
          (1): SPPBottleneck(
            (conv1): BaseConv(
              (conv): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (bn): BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): SiLU(inplace=True)
            )
            (m): ModuleList(
              (0): MaxPool2d(kernel_size=5, stride=1, padding=2, dilation=1, ceil_mode=False)
              (1): MaxPool2d(kernel_size=9, stride=1, padding=4, dilation=1, ceil_mode=False)
              (2): MaxPool2d(kernel_size=13, stride=1, padding=6, dilation=1, ceil_mode=False)
            )
            (conv2): BaseConv(
              (conv): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (bn): BatchNorm2d(256, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): SiLU(inplace=True)
            )
          )
          (2): CSPLayer(
            (conv1): BaseConv(
              (conv): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (bn): BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): SiLU(inplace=True)
            )
            (conv2): BaseConv(
              (conv): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (bn): BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): SiLU(inplace=True)
            )
            (conv3): BaseConv(
              (conv): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (bn): BatchNorm2d(256, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): SiLU(inplace=True)
            )
            (m): Sequential(
              (0): Bottleneck(
                (conv1): BaseConv(
                  (conv): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
                  (bn): BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                  (act): SiLU(inplace=True)
                )
                (conv2): DWConv(
                  (dconv): BaseConv(
                    (conv): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=128, bias=False)
                    (bn): BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                    (act): SiLU(inplace=True)
                  )
                  (pconv): BaseConv(
                    (conv): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
                    (bn): BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                    (act): SiLU(inplace=True)
                  )
                )
              )
            )
          )
        )
      )
      (upsample): Upsample(scale_factor=2.0, mode=nearest)
      (lateral_conv0): BaseConv(
        (conv): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn): BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
        (act): SiLU(inplace=True)
      )
      (C3_p4): CSPLayer(
        (conv1): BaseConv(
          (conv): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
          (act): SiLU(inplace=True)
        )
        (conv2): BaseConv(
          (conv): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
          (act): SiLU(inplace=True)
        )
        (conv3): BaseConv(
          (conv): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn): BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
          (act): SiLU(inplace=True)
        )
        (m): Sequential(
          (0): Bottleneck(
            (conv1): BaseConv(
              (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): SiLU(inplace=True)
            )
            (conv2): DWConv(
              (dconv): BaseConv(
                (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=64, bias=False)
                (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                (act): SiLU(inplace=True)
              )
              (pconv): BaseConv(
                (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                (act): SiLU(inplace=True)
              )
            )
          )
        )
      )
      (reduce_conv1): BaseConv(
        (conv): Conv2d(128, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
        (act): SiLU(inplace=True)
      )
      (C3_p3): CSPLayer(
        (conv1): BaseConv(
          (conv): Conv2d(128, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn): BatchNorm2d(32, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
          (act): SiLU(inplace=True)
        )
        (conv2): BaseConv(
          (conv): Conv2d(128, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn): BatchNorm2d(32, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
          (act): SiLU(inplace=True)
        )
        (conv3): BaseConv(
          (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
          (act): SiLU(inplace=True)
        )
        (m): Sequential(
          (0): Bottleneck(
            (conv1): BaseConv(
              (conv): Conv2d(32, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (bn): BatchNorm2d(32, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): SiLU(inplace=True)
            )
            (conv2): DWConv(
              (dconv): BaseConv(
                (conv): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False)
                (bn): BatchNorm2d(32, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                (act): SiLU(inplace=True)
              )
              (pconv): BaseConv(
                (conv): Conv2d(32, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (bn): BatchNorm2d(32, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                (act): SiLU(inplace=True)
              )
            )
          )
        )
      )
      (bu_conv2): DWConv(
        (dconv): BaseConv(
          (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=64, bias=False)
          (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
          (act): SiLU(inplace=True)
        )
        (pconv): BaseConv(
          (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
          (act): SiLU(inplace=True)
        )
      )
      (C3_n3): CSPLayer(
        (conv1): BaseConv(
          (conv): Conv2d(128, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
          (act): SiLU(inplace=True)
        )
        (conv2): BaseConv(
          (conv): Conv2d(128, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
          (act): SiLU(inplace=True)
        )
        (conv3): BaseConv(
          (conv): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn): BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
          (act): SiLU(inplace=True)
        )
        (m): Sequential(
          (0): Bottleneck(
            (conv1): BaseConv(
              (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): SiLU(inplace=True)
            )
            (conv2): DWConv(
              (dconv): BaseConv(
                (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=64, bias=False)
                (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                (act): SiLU(inplace=True)
              )
              (pconv): BaseConv(
                (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                (act): SiLU(inplace=True)
              )
            )
          )
        )
      )
      (bu_conv1): DWConv(
        (dconv): BaseConv(
          (conv): Conv2d(128, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=128, bias=False)
          (bn): BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
          (act): SiLU(inplace=True)
        )
        (pconv): BaseConv(
          (conv): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn): BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
          (act): SiLU(inplace=True)
        )
      )
      (C3_n4): CSPLayer(
        (conv1): BaseConv(
          (conv): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn): BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
          (act): SiLU(inplace=True)
        )
        (conv2): BaseConv(
          (conv): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn): BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
          (act): SiLU(inplace=True)
        )
        (conv3): BaseConv(
          (conv): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn): BatchNorm2d(256, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
          (act): SiLU(inplace=True)
        )
        (m): Sequential(
          (0): Bottleneck(
            (conv1): BaseConv(
              (conv): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (bn): BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): SiLU(inplace=True)
            )
            (conv2): DWConv(
              (dconv): BaseConv(
                (conv): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=128, bias=False)
                (bn): BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                (act): SiLU(inplace=True)
              )
              (pconv): BaseConv(
                (conv): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (bn): BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                (act): SiLU(inplace=True)
              )
            )
          )
        )
      )
    )
    (head): YOLOXHead(
      (cls_convs): ModuleList(
        (0): Sequential(
          (0): DWConv(
            (dconv): BaseConv(
              (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=64, bias=False)
              (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): SiLU(inplace=True)
            )
            (pconv): BaseConv(
              (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): SiLU(inplace=True)
            )
          )
          (1): DWConv(
            (dconv): BaseConv(
              (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=64, bias=False)
              (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): SiLU(inplace=True)
            )
            (pconv): BaseConv(
              (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): SiLU(inplace=True)
            )
          )
        )
        (1): Sequential(
          (0): DWConv(
            (dconv): BaseConv(
              (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=64, bias=False)
              (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): SiLU(inplace=True)
            )
            (pconv): BaseConv(
              (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): SiLU(inplace=True)
            )
          )
          (1): DWConv(
            (dconv): BaseConv(
              (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=64, bias=False)
              (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): SiLU(inplace=True)
            )
            (pconv): BaseConv(
              (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): SiLU(inplace=True)
            )
          )
        )
        (2): Sequential(
          (0): DWConv(
            (dconv): BaseConv(
              (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=64, bias=False)
              (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): SiLU(inplace=True)
            )
            (pconv): BaseConv(
              (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): SiLU(inplace=True)
            )
          )
          (1): DWConv(
            (dconv): BaseConv(
              (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=64, bias=False)
              (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): SiLU(inplace=True)
            )
            (pconv): BaseConv(
              (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): SiLU(inplace=True)
            )
          )
        )
      )
      (reg_convs): ModuleList(
        (0): Sequential(
          (0): DWConv(
            (dconv): BaseConv(
              (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=64, bias=False)
              (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): SiLU(inplace=True)
            )
            (pconv): BaseConv(
              (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): SiLU(inplace=True)
            )
          )
          (1): DWConv(
            (dconv): BaseConv(
              (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=64, bias=False)
              (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): SiLU(inplace=True)
            )
            (pconv): BaseConv(
              (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): SiLU(inplace=True)
            )
          )
        )
        (1): Sequential(
          (0): DWConv(
            (dconv): BaseConv(
              (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=64, bias=False)
              (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): SiLU(inplace=True)
            )
            (pconv): BaseConv(
              (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): SiLU(inplace=True)
            )
          )
          (1): DWConv(
            (dconv): BaseConv(
              (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=64, bias=False)
              (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): SiLU(inplace=True)
            )
            (pconv): BaseConv(
              (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): SiLU(inplace=True)
            )
          )
        )
        (2): Sequential(
          (0): DWConv(
            (dconv): BaseConv(
              (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=64, bias=False)
              (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): SiLU(inplace=True)
            )
            (pconv): BaseConv(
              (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): SiLU(inplace=True)
            )
          )
          (1): DWConv(
            (dconv): BaseConv(
              (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=64, bias=False)
              (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): SiLU(inplace=True)
            )
            (pconv): BaseConv(
              (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): SiLU(inplace=True)
            )
          )
        )
      )
      (cls_preds): ModuleList(
        (0): Conv2d(64, 4, kernel_size=(1, 1), stride=(1, 1))
        (1): Conv2d(64, 4, kernel_size=(1, 1), stride=(1, 1))
        (2): Conv2d(64, 4, kernel_size=(1, 1), stride=(1, 1))
      )
      (reg_preds): ModuleList(
        (0): Conv2d(64, 4, kernel_size=(1, 1), stride=(1, 1))
        (1): Conv2d(64, 4, kernel_size=(1, 1), stride=(1, 1))
        (2): Conv2d(64, 4, kernel_size=(1, 1), stride=(1, 1))
      )
      (obj_preds): ModuleList(
        (0): Conv2d(64, 1, kernel_size=(1, 1), stride=(1, 1))
        (1): Conv2d(64, 1, kernel_size=(1, 1), stride=(1, 1))
        (2): Conv2d(64, 1, kernel_size=(1, 1), stride=(1, 1))
      )
      (stems): ModuleList(
        (0): BaseConv(
          (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
          (act): SiLU(inplace=True)
        )
        (1): BaseConv(
          (conv): Conv2d(128, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
          (act): SiLU(inplace=True)
        )
        (2): BaseConv(
          (conv): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
          (act): SiLU(inplace=True)
        )
      )
      (l1_loss): L1Loss()
      (bcewithlog_loss): BCEWithLogitsLoss()
      (iou_loss): IOUloss()
    )
  )
)
2022-12-23 18:21:32.177 | INFO     | yolox.core.trainer:before_epoch:203 - ---> start train epoch1
2022-12-23 18:21:39.173 | INFO     | yolox.core.trainer:after_iter:253 - epoch: 1/20, iter: 10/132, mem: 336Mb, iter_time: 0.699s, data_time: 0.001s, total_loss: 11.1, iou_loss: 1.8, l1_loss: 0.0, conf_loss: 7.9, cls_loss: 1.3, lr: 7.174e-08, size: 416, ETA: 0:30:38
2022-12-23 18:21:40.235 | INFO     | yolox.core.trainer:after_iter:253 - epoch: 1/20, iter: 20/132, mem: 336Mb, iter_time: 0.106s, data_time: 0.001s, total_loss: 7.8, iou_loss: 2.0, l1_loss: 0.0, conf_loss: 4.5, cls_loss: 1.4, lr: 2.870e-07, size: 384, ETA: 0:17:34
2022-12-23 18:21:41.620 | INFO     | yolox.core.trainer:after_iter:253 - epoch: 1/20, iter: 30/132, mem: 1175Mb, iter_time: 0.138s, data_time: 0.001s, total_loss: 18.4, iou_loss: 1.5, l1_loss: 0.0, conf_loss: 15.5, cls_loss: 1.4, lr: 6.457e-07, size: 608, ETA: 0:13:40
2022-12-23 18:21:42.963 | INFO     | yolox.core.trainer:after_iter:253 - epoch: 1/20, iter: 40/132, mem: 1175Mb, iter_time: 0.134s, data_time: 0.001s, total_loss: 21.0, iou_loss: 3.9, l1_loss: 0.0, conf_loss: 15.8, cls_loss: 1.3, lr: 1.148e-06, size: 576, ETA: 0:11:39
2022-12-23 18:21:44.257 | INFO     | yolox.core.trainer:after_iter:253 - epoch: 1/20, iter: 50/132, mem: 1175Mb, iter_time: 0.129s, data_time: 0.001s, total_loss: 7.8, iou_loss: 1.3, l1_loss: 0.0, conf_loss: 5.3, cls_loss: 1.2, lr: 1.794e-06, size: 544, ETA: 0:10:24
2022-12-23 18:21:45.341 | INFO     | yolox.core.trainer:after_iter:253 - epoch: 1/20, iter: 60/132, mem: 1175Mb, iter_time: 0.108s, data_time: 0.001s, total_loss: 6.3, iou_loss: 1.5, l1_loss: 0.0, conf_loss: 3.3, cls_loss: 1.4, lr: 2.583e-06, size: 480, ETA: 0:09:24
2022-12-23 18:21:46.171 | INFO     | yolox.core.trainer:after_iter:253 - epoch: 1/20, iter: 70/132, mem: 1175Mb, iter_time: 0.082s, data_time: 0.001s, total_loss: 10.8, iou_loss: 2.9, l1_loss: 0.0, conf_loss: 6.0, cls_loss: 1.9, lr: 3.515e-06, size: 544, ETA: 0:08:32
2022-12-23 18:21:46.976 | INFO     | yolox.core.trainer:after_iter:253 - epoch: 1/20, iter: 80/132, mem: 1175Mb, iter_time: 0.080s, data_time: 0.001s, total_loss: 7.2, iou_loss: 1.8, l1_loss: 0.0, conf_loss: 3.4, cls_loss: 2.0, lr: 4.591e-06, size: 480, ETA: 0:07:52
2022-12-23 18:21:47.788 | INFO     | yolox.core.trainer:after_iter:253 - epoch: 1/20, iter: 90/132, mem: 1175Mb, iter_time: 0.081s, data_time: 0.001s, total_loss: 8.4, iou_loss: 1.8, l1_loss: 0.0, conf_loss: 5.3, cls_loss: 1.2, lr: 5.811e-06, size: 544, ETA: 0:07:21
2022-12-23 18:21:48.892 | INFO     | yolox.core.trainer:after_iter:253 - epoch: 1/20, iter: 100/132, mem: 1175Mb, iter_time: 0.110s, data_time: 0.001s, total_loss: 6.7, iou_loss: 1.3, l1_loss: 0.0, conf_loss: 2.9, cls_loss: 2.6, lr: 7.174e-06, size: 352, ETA: 0:07:03
2022-12-23 18:21:49.786 | INFO     | yolox.core.trainer:after_iter:253 - epoch: 1/20, iter: 110/132, mem: 1175Mb, iter_time: 0.089s, data_time: 0.001s, total_loss: 7.4, iou_loss: 2.0, l1_loss: 0.0, conf_loss: 3.9, cls_loss: 1.5, lr: 8.681e-06, size: 352, ETA: 0:06:43
2022-12-23 18:21:50.599 | INFO     | yolox.core.trainer:after_iter:253 - epoch: 1/20, iter: 120/132, mem: 1175Mb, iter_time: 0.081s, data_time: 0.001s, total_loss: 5.3, iou_loss: 1.3, l1_loss: 0.0, conf_loss: 2.7, cls_loss: 1.3, lr: 1.033e-05, size: 544, ETA: 0:06:25
2022-12-23 18:21:51.416 | INFO     | yolox.core.trainer:after_iter:253 - epoch: 1/20, iter: 130/132, mem: 1175Mb, iter_time: 0.081s, data_time: 0.001s, total_loss: 3.9, iou_loss: 2.0, l1_loss: 0.0, conf_loss: 1.0, cls_loss: 0.9, lr: 1.212e-05, size: 352, ETA: 0:06:10
2022-12-23 18:21:52.009 | INFO     | yolox.core.trainer:save_ckpt:356 - Save weights to ./YOLOX_outputs/yolox_nano
2022-12-23 18:21:56.959 | INFO     | yolox.core.trainer:after_train:195 - Training of experiment is done and the best AP is 0.00
2022-12-23 18:21:56.960 | ERROR    | yolox.core.launch:_distributed_worker:147 - An error has been caught in function '_distributed_worker', process 'SpawnProcess-1' (13810), thread 'MainThread' (140558429194048):
Traceback (most recent call last):

  File "<string>", line 1, in <module>
  File "/usr/lib/python3.8/multiprocessing/spawn.py", line 116, in spawn_main
    exitcode = _main(fd, parent_sentinel)
               │     │   └ 5
               │     └ 8
               └ <function _main at 0x7fd64f07fee0>
  File "/usr/lib/python3.8/multiprocessing/spawn.py", line 129, in _main
    return self._bootstrap(parent_sentinel)
           │    │          └ 5
           │    └ <function BaseProcess._bootstrap at 0x7fd64f17e9d0>
           └ <SpawnProcess name='SpawnProcess-1' parent=13776 started>
  File "/usr/lib/python3.8/multiprocessing/process.py", line 315, in _bootstrap
    self.run()
    │    └ <function BaseProcess.run at 0x7fd64f17e040>
    └ <SpawnProcess name='SpawnProcess-1' parent=13776 started>
  File "/usr/lib/python3.8/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
    │    │        │    │        │    └ {}
    │    │        │    │        └ <SpawnProcess name='SpawnProcess-1' parent=13776 started>
    │    │        │    └ (<function _distributed_worker at 0x7fd5bf34f040>, 0, (<function main at 0x7fd5b247e700>, 2, 2, 0, 'nccl', 'tcp://127.0.0.1:4...
    │    │        └ <SpawnProcess name='SpawnProcess-1' parent=13776 started>
    │    └ <function _wrap at 0x7fd5c00308b0>
    └ <SpawnProcess name='SpawnProcess-1' parent=13776 started>

  File "/usr/local/lib/python3.8/dist-packages/torch/multiprocessing/spawn.py", line 69, in _wrap
    fn(i, *args)
    │  │   └ (<function main at 0x7fd5b247e700>, 2, 2, 0, 'nccl', 'tcp://127.0.0.1:45751', (╒═══════════════════╤═════════════════════════...
    │  └ 0
    └ <function _distributed_worker at 0x7fd5bf34f040>

> File "/root/YOLOX/yolox/core/launch.py", line 147, in _distributed_worker
    main_func(*args)
    │          └ (╒═══════════════════╤═══════════════════════════════════════════════════════════════════════════════════════════════════════...
    └ <function main at 0x7fd5b247e700>

  File "/root/YOLOX/tools/train.py", line 118, in main
    trainer.train()
    │       └ <function Trainer.train at 0x7fd5b1a80430>
    └ <yolox.core.trainer.Trainer object at 0x7fd5b1a97ca0>

  File "/root/YOLOX/yolox/core/trainer.py", line 76, in train
    self.train_in_epoch()
    │    └ <function Trainer.train_in_epoch at 0x7fd5b1a80af0>
    └ <yolox.core.trainer.Trainer object at 0x7fd5b1a97ca0>

  File "/root/YOLOX/yolox/core/trainer.py", line 86, in train_in_epoch
    self.after_epoch()
    │    └ <function Trainer.after_epoch at 0x7fd5b1a80e50>
    └ <yolox.core.trainer.Trainer object at 0x7fd5b1a97ca0>

  File "/root/YOLOX/yolox/core/trainer.py", line 222, in after_epoch
    self.evaluate_and_save_model()
    │    └ <function Trainer.evaluate_and_save_model at 0x7fd5b1a87160>
    └ <yolox.core.trainer.Trainer object at 0x7fd5b1a97ca0>

  File "/root/YOLOX/yolox/core/trainer.py", line 328, in evaluate_and_save_model
    (ap50_95, ap50, summary), predictions = self.exp.eval(
                                            │    │   └ <function Exp.eval at 0x7fd5b1a80a60>
                                            │    └ ╒═══════════════════╤════════════════════════════════════════════════════════════════════════════════════════════════════════...
                                            └ <yolox.core.trainer.Trainer object at 0x7fd5b1a97ca0>

  File "/root/YOLOX/yolox/exp/yolox_base.py", line 322, in eval
    return evaluator.evaluate(model, is_distributed, half, return_outputs=return_outputs)
           │         │        │      │               │                    └ True
           │         │        │      │               └ False
           │         │        │      └ True
           │         │        └ YOLOX(
           │         │            (backbone): YOLOPAFPN(
           │         │              (backbone): CSPDarknet(
           │         │                (stem): Focus(
           │         │                  (conv): BaseConv(
           │         │                    (conv): ...
           │         └ <function COCOEvaluator.evaluate at 0x7fd5b1aef790>
           └ <yolox.evaluators.coco_evaluator.COCOEvaluator object at 0x7fd5d3c16fa0>

  File "/root/YOLOX/yolox/evaluators/coco_evaluator.py", line 184, in evaluate
    data_list_elem, image_wise_data = self.convert_to_coco_format(
    │                                 │    └ <function COCOEvaluator.convert_to_coco_format at 0x7fd5b1aef820>
    │                                 └ <yolox.evaluators.coco_evaluator.COCOEvaluator object at 0x7fd5d3c16fa0>
    └ [{'image_id': 10000004, 'category_id': 1, 'bbox': [20.24891471862793, 372.9578857421875, 51.19895935058594, 47.18307495117187...

  File "/root/YOLOX/yolox/evaluators/coco_evaluator.py", line 228, in convert_to_coco_format
    "categories": [

  File "/root/YOLOX/yolox/evaluators/coco_evaluator.py", line 229, in <listcomp>
    self.dataloader.dataset.class_ids[int(cls[ind])]
    │    │          │       │             │   └ 1
    │    │          │       │             └ tensor([1., 2., 0., 0., 0., 1., 0., 0., 1.])
    │    │          │       └ [1, 2]
    │    │          └ <yolox.data.datasets.coco.COCODataset object at 0x7fd5d3b03e80>
    │    └ <torch.utils.data.dataloader.DataLoader object at 0x7fd5d3c161c0>
    └ <yolox.evaluators.coco_evaluator.COCOEvaluator object at 0x7fd5d3c16fa0>

IndexError: list index out of range
2022-12-23 18:35:43.281 | INFO     | yolox.core.trainer:before_train:130 - args: Namespace(batch_size=2, cache=False, ckpt='/root/YOLOX/yolox_nano.pth', devices=2, dist_backend='nccl', dist_url=None, exp_file='/root/YOLOX/yolox_nano.py', experiment_name='yolox_nano', fp16=True, logger='tensorboard', machine_rank=0, name=None, num_machines=1, occupy=True, opts=[], resume=False, start_epoch=None)
2022-12-23 18:35:43.284 | INFO     | yolox.core.trainer:before_train:131 - exp value:
╒═══════════════════╤════════════════════════════════════════════════════════════╕
│ keys              │ values                                                     │
╞═══════════════════╪════════════════════════════════════════════════════════════╡
│ seed              │ None                                                       │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ output_dir        │ './YOLOX_outputs'                                          │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ print_interval    │ 10                                                         │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ eval_interval     │ 1                                                          │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ num_classes       │ 4                                                          │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ depth             │ 0.33                                                       │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ width             │ 0.25                                                       │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ act               │ 'silu'                                                     │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ data_num_workers  │ 4                                                          │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ input_size        │ (416, 416)                                                 │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ multiscale_range  │ 5                                                          │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ data_dir          │ '/root/ML/dataset/images'                                  │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ train_ann         │ '/root/ML/dataset/annotations/train_annotations.json'      │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ val_ann           │ '/root/ML/dataset/annotations/validation_annotations.json' │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ test_ann          │ 'instances_test2017.json'                                  │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ mosaic_prob       │ 0.5                                                        │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ mixup_prob        │ 1.0                                                        │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ hsv_prob          │ 1.0                                                        │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ flip_prob         │ 0.5                                                        │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ degrees           │ 10.0                                                       │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ translate         │ 0.1                                                        │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ mosaic_scale      │ (0.5, 1.5)                                                 │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ enable_mixup      │ False                                                      │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ mixup_scale       │ (0.5, 1.5)                                                 │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ shear             │ 2.0                                                        │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ warmup_epochs     │ 5                                                          │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ max_epoch         │ 20                                                         │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ warmup_lr         │ 0                                                          │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ min_lr_ratio      │ 0.05                                                       │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ basic_lr_per_img  │ 0.00015625                                                 │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ scheduler         │ 'yoloxwarmcos'                                             │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ no_aug_epochs     │ 15                                                         │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ ema               │ True                                                       │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ weight_decay      │ 0.0005                                                     │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ momentum          │ 0.9                                                        │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ save_history_ckpt │ True                                                       │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ exp_name          │ 'yolox_nano'                                               │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ test_size         │ (416, 416)                                                 │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ test_conf         │ 0.01                                                       │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ nmsthre           │ 0.65                                                       │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ random_size       │ (10, 20)                                                   │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ data_num_worker   │ 4                                                          │
╘═══════════════════╧════════════════════════════════════════════════════════════╛
2022-12-23 18:35:43.464 | INFO     | yolox.core.trainer:before_train:136 - Model Summary: Params: 0.90M, Gflops: 1.08
2022-12-23 18:35:43.488 | INFO     | yolox.core.trainer:resume_train:311 - loading checkpoint for fine tuning
2022-12-23 18:35:43.595 | WARNING  | yolox.utils.checkpoint:load_ckpt:24 - Shape of head.cls_preds.0.weight in checkpoint is torch.Size([80, 64, 1, 1]), while shape of head.cls_preds.0.weight in model is torch.Size([4, 64, 1, 1]).
2022-12-23 18:35:43.595 | WARNING  | yolox.utils.checkpoint:load_ckpt:24 - Shape of head.cls_preds.0.bias in checkpoint is torch.Size([80]), while shape of head.cls_preds.0.bias in model is torch.Size([4]).
2022-12-23 18:35:43.595 | WARNING  | yolox.utils.checkpoint:load_ckpt:24 - Shape of head.cls_preds.1.weight in checkpoint is torch.Size([80, 64, 1, 1]), while shape of head.cls_preds.1.weight in model is torch.Size([4, 64, 1, 1]).
2022-12-23 18:35:43.596 | WARNING  | yolox.utils.checkpoint:load_ckpt:24 - Shape of head.cls_preds.1.bias in checkpoint is torch.Size([80]), while shape of head.cls_preds.1.bias in model is torch.Size([4]).
2022-12-23 18:35:43.596 | WARNING  | yolox.utils.checkpoint:load_ckpt:24 - Shape of head.cls_preds.2.weight in checkpoint is torch.Size([80, 64, 1, 1]), while shape of head.cls_preds.2.weight in model is torch.Size([4, 64, 1, 1]).
2022-12-23 18:35:43.596 | WARNING  | yolox.utils.checkpoint:load_ckpt:24 - Shape of head.cls_preds.2.bias in checkpoint is torch.Size([80]), while shape of head.cls_preds.2.bias in model is torch.Size([4]).
2022-12-23 18:35:43.613 | INFO     | yolox.data.datasets.coco:__init__:64 - loading annotations into memory...
2022-12-23 18:35:43.615 | INFO     | yolox.data.datasets.coco:__init__:64 - Done (t=0.00s)
2022-12-23 18:35:43.615 | INFO     | pycocotools.coco:__init__:86 - creating index...
2022-12-23 18:35:43.615 | INFO     | pycocotools.coco:__init__:86 - index created!
2022-12-23 18:35:43.627 | INFO     | yolox.core.trainer:before_train:155 - init prefetcher, this might take one minute or less...
2022-12-23 18:41:56.001 | INFO     | yolox.core.trainer:before_train:130 - args: Namespace(batch_size=2, cache=False, ckpt='/root/YOLOX/yolox_nano.pth', devices=2, dist_backend='nccl', dist_url=None, exp_file='/root/YOLOX/yolox_nano.py', experiment_name='yolox_nano', fp16=True, logger='tensorboard', machine_rank=0, name=None, num_machines=1, occupy=True, opts=[], resume=False, start_epoch=None)
2022-12-23 18:41:56.003 | INFO     | yolox.core.trainer:before_train:131 - exp value:
╒═══════════════════╤════════════════════════════════════════════════════════════╕
│ keys              │ values                                                     │
╞═══════════════════╪════════════════════════════════════════════════════════════╡
│ seed              │ None                                                       │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ output_dir        │ './YOLOX_outputs'                                          │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ print_interval    │ 10                                                         │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ eval_interval     │ 1                                                          │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ num_classes       │ 4                                                          │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ depth             │ 0.33                                                       │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ width             │ 0.25                                                       │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ act               │ 'silu'                                                     │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ data_num_workers  │ 4                                                          │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ input_size        │ (416, 416)                                                 │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ multiscale_range  │ 5                                                          │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ data_dir          │ '/root/ML/dataset/images'                                  │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ train_ann         │ '/root/ML/dataset/annotations/train_annotations.json'      │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ val_ann           │ '/root/ML/dataset/annotations/validation_annotations.json' │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ test_ann          │ 'instances_test2017.json'                                  │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ mosaic_prob       │ 0.5                                                        │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ mixup_prob        │ 1.0                                                        │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ hsv_prob          │ 1.0                                                        │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ flip_prob         │ 0.5                                                        │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ degrees           │ 10.0                                                       │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ translate         │ 0.1                                                        │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ mosaic_scale      │ (0.5, 1.5)                                                 │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ enable_mixup      │ False                                                      │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ mixup_scale       │ (0.5, 1.5)                                                 │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ shear             │ 2.0                                                        │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ warmup_epochs     │ 5                                                          │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ max_epoch         │ 20                                                         │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ warmup_lr         │ 0                                                          │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ min_lr_ratio      │ 0.05                                                       │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ basic_lr_per_img  │ 0.00015625                                                 │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ scheduler         │ 'yoloxwarmcos'                                             │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ no_aug_epochs     │ 15                                                         │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ ema               │ True                                                       │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ weight_decay      │ 0.0005                                                     │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ momentum          │ 0.9                                                        │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ save_history_ckpt │ True                                                       │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ exp_name          │ 'yolox_nano'                                               │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ test_size         │ (416, 416)                                                 │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ test_conf         │ 0.01                                                       │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ nmsthre           │ 0.65                                                       │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ random_size       │ (10, 20)                                                   │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ data_num_worker   │ 4                                                          │
╘═══════════════════╧════════════════════════════════════════════════════════════╛
2022-12-23 18:41:56.160 | INFO     | yolox.core.trainer:before_train:136 - Model Summary: Params: 0.90M, Gflops: 1.08
2022-12-23 18:41:56.177 | INFO     | yolox.core.trainer:resume_train:311 - loading checkpoint for fine tuning
2022-12-23 18:41:56.250 | WARNING  | yolox.utils.checkpoint:load_ckpt:24 - Shape of head.cls_preds.0.weight in checkpoint is torch.Size([80, 64, 1, 1]), while shape of head.cls_preds.0.weight in model is torch.Size([4, 64, 1, 1]).
2022-12-23 18:41:56.251 | WARNING  | yolox.utils.checkpoint:load_ckpt:24 - Shape of head.cls_preds.0.bias in checkpoint is torch.Size([80]), while shape of head.cls_preds.0.bias in model is torch.Size([4]).
2022-12-23 18:41:56.251 | WARNING  | yolox.utils.checkpoint:load_ckpt:24 - Shape of head.cls_preds.1.weight in checkpoint is torch.Size([80, 64, 1, 1]), while shape of head.cls_preds.1.weight in model is torch.Size([4, 64, 1, 1]).
2022-12-23 18:41:56.251 | WARNING  | yolox.utils.checkpoint:load_ckpt:24 - Shape of head.cls_preds.1.bias in checkpoint is torch.Size([80]), while shape of head.cls_preds.1.bias in model is torch.Size([4]).
2022-12-23 18:41:56.251 | WARNING  | yolox.utils.checkpoint:load_ckpt:24 - Shape of head.cls_preds.2.weight in checkpoint is torch.Size([80, 64, 1, 1]), while shape of head.cls_preds.2.weight in model is torch.Size([4, 64, 1, 1]).
2022-12-23 18:41:56.251 | WARNING  | yolox.utils.checkpoint:load_ckpt:24 - Shape of head.cls_preds.2.bias in checkpoint is torch.Size([80]), while shape of head.cls_preds.2.bias in model is torch.Size([4]).
2022-12-23 18:41:56.262 | INFO     | yolox.data.datasets.coco:__init__:64 - loading annotations into memory...
2022-12-23 18:41:56.263 | INFO     | yolox.data.datasets.coco:__init__:64 - Done (t=0.00s)
2022-12-23 18:41:56.264 | INFO     | pycocotools.coco:__init__:86 - creating index...
2022-12-23 18:41:56.264 | INFO     | pycocotools.coco:__init__:86 - index created!
2022-12-23 18:41:56.273 | INFO     | yolox.core.trainer:before_train:155 - init prefetcher, this might take one minute or less...
2022-12-23 18:43:24.250 | INFO     | yolox.core.trainer:before_train:130 - args: Namespace(batch_size=2, cache=False, ckpt='/root/YOLOX/yolox_nano.pth', devices=2, dist_backend='nccl', dist_url=None, exp_file='/root/YOLOX/yolox_nano.py', experiment_name='yolox_nano', fp16=True, logger='tensorboard', machine_rank=0, name=None, num_machines=1, occupy=True, opts=[], resume=False, start_epoch=None)
2022-12-23 18:43:24.252 | INFO     | yolox.core.trainer:before_train:131 - exp value:
╒═══════════════════╤════════════════════════════════════════════════════════════╕
│ keys              │ values                                                     │
╞═══════════════════╪════════════════════════════════════════════════════════════╡
│ seed              │ None                                                       │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ output_dir        │ './YOLOX_outputs'                                          │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ print_interval    │ 10                                                         │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ eval_interval     │ 1                                                          │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ num_classes       │ 4                                                          │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ depth             │ 0.33                                                       │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ width             │ 0.25                                                       │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ act               │ 'silu'                                                     │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ data_num_workers  │ 4                                                          │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ input_size        │ (416, 416)                                                 │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ multiscale_range  │ 5                                                          │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ data_dir          │ '/root/ML/dataset/images'                                  │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ train_ann         │ '/root/ML/dataset/annotations/train_annotations.json'      │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ val_ann           │ '/root/ML/dataset/annotations/validation_annotations.json' │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ test_ann          │ 'instances_test2017.json'                                  │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ mosaic_prob       │ 0.5                                                        │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ mixup_prob        │ 1.0                                                        │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ hsv_prob          │ 1.0                                                        │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ flip_prob         │ 0.5                                                        │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ degrees           │ 10.0                                                       │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ translate         │ 0.1                                                        │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ mosaic_scale      │ (0.5, 1.5)                                                 │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ enable_mixup      │ False                                                      │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ mixup_scale       │ (0.5, 1.5)                                                 │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ shear             │ 2.0                                                        │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ warmup_epochs     │ 5                                                          │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ max_epoch         │ 20                                                         │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ warmup_lr         │ 0                                                          │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ min_lr_ratio      │ 0.05                                                       │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ basic_lr_per_img  │ 0.00015625                                                 │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ scheduler         │ 'yoloxwarmcos'                                             │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ no_aug_epochs     │ 15                                                         │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ ema               │ True                                                       │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ weight_decay      │ 0.0005                                                     │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ momentum          │ 0.9                                                        │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ save_history_ckpt │ True                                                       │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ exp_name          │ 'yolox_nano'                                               │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ test_size         │ (416, 416)                                                 │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ test_conf         │ 0.01                                                       │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ nmsthre           │ 0.65                                                       │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ random_size       │ (10, 20)                                                   │
├───────────────────┼────────────────────────────────────────────────────────────┤
│ data_num_worker   │ 4                                                          │
╘═══════════════════╧════════════════════════════════════════════════════════════╛
2022-12-23 18:43:24.408 | INFO     | yolox.core.trainer:before_train:136 - Model Summary: Params: 0.90M, Gflops: 1.08
2022-12-23 18:43:24.425 | INFO     | yolox.core.trainer:resume_train:311 - loading checkpoint for fine tuning
2022-12-23 18:43:24.495 | WARNING  | yolox.utils.checkpoint:load_ckpt:24 - Shape of head.cls_preds.0.weight in checkpoint is torch.Size([80, 64, 1, 1]), while shape of head.cls_preds.0.weight in model is torch.Size([4, 64, 1, 1]).
2022-12-23 18:43:24.496 | WARNING  | yolox.utils.checkpoint:load_ckpt:24 - Shape of head.cls_preds.0.bias in checkpoint is torch.Size([80]), while shape of head.cls_preds.0.bias in model is torch.Size([4]).
2022-12-23 18:43:24.496 | WARNING  | yolox.utils.checkpoint:load_ckpt:24 - Shape of head.cls_preds.1.weight in checkpoint is torch.Size([80, 64, 1, 1]), while shape of head.cls_preds.1.weight in model is torch.Size([4, 64, 1, 1]).
2022-12-23 18:43:24.496 | WARNING  | yolox.utils.checkpoint:load_ckpt:24 - Shape of head.cls_preds.1.bias in checkpoint is torch.Size([80]), while shape of head.cls_preds.1.bias in model is torch.Size([4]).
2022-12-23 18:43:24.496 | WARNING  | yolox.utils.checkpoint:load_ckpt:24 - Shape of head.cls_preds.2.weight in checkpoint is torch.Size([80, 64, 1, 1]), while shape of head.cls_preds.2.weight in model is torch.Size([4, 64, 1, 1]).
2022-12-23 18:43:24.497 | WARNING  | yolox.utils.checkpoint:load_ckpt:24 - Shape of head.cls_preds.2.bias in checkpoint is torch.Size([80]), while shape of head.cls_preds.2.bias in model is torch.Size([4]).
2022-12-23 18:43:24.510 | INFO     | yolox.data.datasets.coco:__init__:64 - loading annotations into memory...
2022-12-23 18:43:24.511 | INFO     | yolox.data.datasets.coco:__init__:64 - Done (t=0.00s)
2022-12-23 18:43:24.511 | INFO     | pycocotools.coco:__init__:86 - creating index...
2022-12-23 18:43:24.511 | INFO     | pycocotools.coco:__init__:86 - index created!
2022-12-23 18:43:24.520 | INFO     | yolox.core.trainer:before_train:155 - init prefetcher, this might take one minute or less...
2022-12-23 18:43:33.292 | INFO     | yolox.data.datasets.coco:__init__:64 - loading annotations into memory...
2022-12-23 18:43:33.293 | INFO     | yolox.data.datasets.coco:__init__:64 - Done (t=0.00s)
2022-12-23 18:43:33.293 | INFO     | pycocotools.coco:__init__:86 - creating index...
2022-12-23 18:43:33.293 | INFO     | pycocotools.coco:__init__:86 - index created!
2022-12-23 18:43:33.297 | INFO     | yolox.core.trainer:before_train:191 - Training start...
2022-12-23 18:43:33.299 | INFO     | yolox.core.trainer:before_train:192 - 
DistributedDataParallel(
  (module): YOLOX(
    (backbone): YOLOPAFPN(
      (backbone): CSPDarknet(
        (stem): Focus(
          (conv): BaseConv(
            (conv): Conv2d(12, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn): BatchNorm2d(16, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
            (act): SiLU(inplace=True)
          )
        )
        (dark2): Sequential(
          (0): DWConv(
            (dconv): BaseConv(
              (conv): Conv2d(16, 16, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=16, bias=False)
              (bn): BatchNorm2d(16, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): SiLU(inplace=True)
            )
            (pconv): BaseConv(
              (conv): Conv2d(16, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (bn): BatchNorm2d(32, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): SiLU(inplace=True)
            )
          )
          (1): CSPLayer(
            (conv1): BaseConv(
              (conv): Conv2d(32, 16, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (bn): BatchNorm2d(16, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): SiLU(inplace=True)
            )
            (conv2): BaseConv(
              (conv): Conv2d(32, 16, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (bn): BatchNorm2d(16, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): SiLU(inplace=True)
            )
            (conv3): BaseConv(
              (conv): Conv2d(32, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (bn): BatchNorm2d(32, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): SiLU(inplace=True)
            )
            (m): Sequential(
              (0): Bottleneck(
                (conv1): BaseConv(
                  (conv): Conv2d(16, 16, kernel_size=(1, 1), stride=(1, 1), bias=False)
                  (bn): BatchNorm2d(16, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                  (act): SiLU(inplace=True)
                )
                (conv2): DWConv(
                  (dconv): BaseConv(
                    (conv): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=16, bias=False)
                    (bn): BatchNorm2d(16, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                    (act): SiLU(inplace=True)
                  )
                  (pconv): BaseConv(
                    (conv): Conv2d(16, 16, kernel_size=(1, 1), stride=(1, 1), bias=False)
                    (bn): BatchNorm2d(16, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                    (act): SiLU(inplace=True)
                  )
                )
              )
            )
          )
        )
        (dark3): Sequential(
          (0): DWConv(
            (dconv): BaseConv(
              (conv): Conv2d(32, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=32, bias=False)
              (bn): BatchNorm2d(32, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): SiLU(inplace=True)
            )
            (pconv): BaseConv(
              (conv): Conv2d(32, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): SiLU(inplace=True)
            )
          )
          (1): CSPLayer(
            (conv1): BaseConv(
              (conv): Conv2d(64, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (bn): BatchNorm2d(32, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): SiLU(inplace=True)
            )
            (conv2): BaseConv(
              (conv): Conv2d(64, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (bn): BatchNorm2d(32, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): SiLU(inplace=True)
            )
            (conv3): BaseConv(
              (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): SiLU(inplace=True)
            )
            (m): Sequential(
              (0): Bottleneck(
                (conv1): BaseConv(
                  (conv): Conv2d(32, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)
                  (bn): BatchNorm2d(32, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                  (act): SiLU(inplace=True)
                )
                (conv2): DWConv(
                  (dconv): BaseConv(
                    (conv): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False)
                    (bn): BatchNorm2d(32, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                    (act): SiLU(inplace=True)
                  )
                  (pconv): BaseConv(
                    (conv): Conv2d(32, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)
                    (bn): BatchNorm2d(32, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                    (act): SiLU(inplace=True)
                  )
                )
              )
              (1): Bottleneck(
                (conv1): BaseConv(
                  (conv): Conv2d(32, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)
                  (bn): BatchNorm2d(32, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                  (act): SiLU(inplace=True)
                )
                (conv2): DWConv(
                  (dconv): BaseConv(
                    (conv): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False)
                    (bn): BatchNorm2d(32, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                    (act): SiLU(inplace=True)
                  )
                  (pconv): BaseConv(
                    (conv): Conv2d(32, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)
                    (bn): BatchNorm2d(32, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                    (act): SiLU(inplace=True)
                  )
                )
              )
              (2): Bottleneck(
                (conv1): BaseConv(
                  (conv): Conv2d(32, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)
                  (bn): BatchNorm2d(32, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                  (act): SiLU(inplace=True)
                )
                (conv2): DWConv(
                  (dconv): BaseConv(
                    (conv): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False)
                    (bn): BatchNorm2d(32, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                    (act): SiLU(inplace=True)
                  )
                  (pconv): BaseConv(
                    (conv): Conv2d(32, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)
                    (bn): BatchNorm2d(32, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                    (act): SiLU(inplace=True)
                  )
                )
              )
            )
          )
        )
        (dark4): Sequential(
          (0): DWConv(
            (dconv): BaseConv(
              (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=64, bias=False)
              (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): SiLU(inplace=True)
            )
            (pconv): BaseConv(
              (conv): Conv2d(64, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (bn): BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): SiLU(inplace=True)
            )
          )
          (1): CSPLayer(
            (conv1): BaseConv(
              (conv): Conv2d(128, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): SiLU(inplace=True)
            )
            (conv2): BaseConv(
              (conv): Conv2d(128, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): SiLU(inplace=True)
            )
            (conv3): BaseConv(
              (conv): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (bn): BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): SiLU(inplace=True)
            )
            (m): Sequential(
              (0): Bottleneck(
                (conv1): BaseConv(
                  (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
                  (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                  (act): SiLU(inplace=True)
                )
                (conv2): DWConv(
                  (dconv): BaseConv(
                    (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=64, bias=False)
                    (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                    (act): SiLU(inplace=True)
                  )
                  (pconv): BaseConv(
                    (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
                    (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                    (act): SiLU(inplace=True)
                  )
                )
              )
              (1): Bottleneck(
                (conv1): BaseConv(
                  (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
                  (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                  (act): SiLU(inplace=True)
                )
                (conv2): DWConv(
                  (dconv): BaseConv(
                    (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=64, bias=False)
                    (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                    (act): SiLU(inplace=True)
                  )
                  (pconv): BaseConv(
                    (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
                    (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                    (act): SiLU(inplace=True)
                  )
                )
              )
              (2): Bottleneck(
                (conv1): BaseConv(
                  (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
                  (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                  (act): SiLU(inplace=True)
                )
                (conv2): DWConv(
                  (dconv): BaseConv(
                    (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=64, bias=False)
                    (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                    (act): SiLU(inplace=True)
                  )
                  (pconv): BaseConv(
                    (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
                    (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                    (act): SiLU(inplace=True)
                  )
                )
              )
            )
          )
        )
        (dark5): Sequential(
          (0): DWConv(
            (dconv): BaseConv(
              (conv): Conv2d(128, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=128, bias=False)
              (bn): BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): SiLU(inplace=True)
            )
            (pconv): BaseConv(
              (conv): Conv2d(128, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (bn): BatchNorm2d(256, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): SiLU(inplace=True)
            )
          )
          (1): SPPBottleneck(
            (conv1): BaseConv(
              (conv): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (bn): BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): SiLU(inplace=True)
            )
            (m): ModuleList(
              (0): MaxPool2d(kernel_size=5, stride=1, padding=2, dilation=1, ceil_mode=False)
              (1): MaxPool2d(kernel_size=9, stride=1, padding=4, dilation=1, ceil_mode=False)
              (2): MaxPool2d(kernel_size=13, stride=1, padding=6, dilation=1, ceil_mode=False)
            )
            (conv2): BaseConv(
              (conv): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (bn): BatchNorm2d(256, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): SiLU(inplace=True)
            )
          )
          (2): CSPLayer(
            (conv1): BaseConv(
              (conv): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (bn): BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): SiLU(inplace=True)
            )
            (conv2): BaseConv(
              (conv): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (bn): BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): SiLU(inplace=True)
            )
            (conv3): BaseConv(
              (conv): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (bn): BatchNorm2d(256, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): SiLU(inplace=True)
            )
            (m): Sequential(
              (0): Bottleneck(
                (conv1): BaseConv(
                  (conv): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
                  (bn): BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                  (act): SiLU(inplace=True)
                )
                (conv2): DWConv(
                  (dconv): BaseConv(
                    (conv): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=128, bias=False)
                    (bn): BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                    (act): SiLU(inplace=True)
                  )
                  (pconv): BaseConv(
                    (conv): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
                    (bn): BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                    (act): SiLU(inplace=True)
                  )
                )
              )
            )
          )
        )
      )
      (upsample): Upsample(scale_factor=2.0, mode=nearest)
      (lateral_conv0): BaseConv(
        (conv): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn): BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
        (act): SiLU(inplace=True)
      )
      (C3_p4): CSPLayer(
        (conv1): BaseConv(
          (conv): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
          (act): SiLU(inplace=True)
        )
        (conv2): BaseConv(
          (conv): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
          (act): SiLU(inplace=True)
        )
        (conv3): BaseConv(
          (conv): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn): BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
          (act): SiLU(inplace=True)
        )
        (m): Sequential(
          (0): Bottleneck(
            (conv1): BaseConv(
              (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): SiLU(inplace=True)
            )
            (conv2): DWConv(
              (dconv): BaseConv(
                (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=64, bias=False)
                (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                (act): SiLU(inplace=True)
              )
              (pconv): BaseConv(
                (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                (act): SiLU(inplace=True)
              )
            )
          )
        )
      )
      (reduce_conv1): BaseConv(
        (conv): Conv2d(128, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
        (act): SiLU(inplace=True)
      )
      (C3_p3): CSPLayer(
        (conv1): BaseConv(
          (conv): Conv2d(128, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn): BatchNorm2d(32, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
          (act): SiLU(inplace=True)
        )
        (conv2): BaseConv(
          (conv): Conv2d(128, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn): BatchNorm2d(32, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
          (act): SiLU(inplace=True)
        )
        (conv3): BaseConv(
          (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
          (act): SiLU(inplace=True)
        )
        (m): Sequential(
          (0): Bottleneck(
            (conv1): BaseConv(
              (conv): Conv2d(32, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (bn): BatchNorm2d(32, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): SiLU(inplace=True)
            )
            (conv2): DWConv(
              (dconv): BaseConv(
                (conv): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False)
                (bn): BatchNorm2d(32, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                (act): SiLU(inplace=True)
              )
              (pconv): BaseConv(
                (conv): Conv2d(32, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (bn): BatchNorm2d(32, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                (act): SiLU(inplace=True)
              )
            )
          )
        )
      )
      (bu_conv2): DWConv(
        (dconv): BaseConv(
          (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=64, bias=False)
          (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
          (act): SiLU(inplace=True)
        )
        (pconv): BaseConv(
          (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
          (act): SiLU(inplace=True)
        )
      )
      (C3_n3): CSPLayer(
        (conv1): BaseConv(
          (conv): Conv2d(128, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
          (act): SiLU(inplace=True)
        )
        (conv2): BaseConv(
          (conv): Conv2d(128, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
          (act): SiLU(inplace=True)
        )
        (conv3): BaseConv(
          (conv): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn): BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
          (act): SiLU(inplace=True)
        )
        (m): Sequential(
          (0): Bottleneck(
            (conv1): BaseConv(
              (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): SiLU(inplace=True)
            )
            (conv2): DWConv(
              (dconv): BaseConv(
                (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=64, bias=False)
                (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                (act): SiLU(inplace=True)
              )
              (pconv): BaseConv(
                (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                (act): SiLU(inplace=True)
              )
            )
          )
        )
      )
      (bu_conv1): DWConv(
        (dconv): BaseConv(
          (conv): Conv2d(128, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=128, bias=False)
          (bn): BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
          (act): SiLU(inplace=True)
        )
        (pconv): BaseConv(
          (conv): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn): BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
          (act): SiLU(inplace=True)
        )
      )
      (C3_n4): CSPLayer(
        (conv1): BaseConv(
          (conv): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn): BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
          (act): SiLU(inplace=True)
        )
        (conv2): BaseConv(
          (conv): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn): BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
          (act): SiLU(inplace=True)
        )
        (conv3): BaseConv(
          (conv): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn): BatchNorm2d(256, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
          (act): SiLU(inplace=True)
        )
        (m): Sequential(
          (0): Bottleneck(
            (conv1): BaseConv(
              (conv): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (bn): BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): SiLU(inplace=True)
            )
            (conv2): DWConv(
              (dconv): BaseConv(
                (conv): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=128, bias=False)
                (bn): BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                (act): SiLU(inplace=True)
              )
              (pconv): BaseConv(
                (conv): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (bn): BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                (act): SiLU(inplace=True)
              )
            )
          )
        )
      )
    )
    (head): YOLOXHead(
      (cls_convs): ModuleList(
        (0): Sequential(
          (0): DWConv(
            (dconv): BaseConv(
              (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=64, bias=False)
              (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): SiLU(inplace=True)
            )
            (pconv): BaseConv(
              (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): SiLU(inplace=True)
            )
          )
          (1): DWConv(
            (dconv): BaseConv(
              (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=64, bias=False)
              (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): SiLU(inplace=True)
            )
            (pconv): BaseConv(
              (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): SiLU(inplace=True)
            )
          )
        )
        (1): Sequential(
          (0): DWConv(
            (dconv): BaseConv(
              (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=64, bias=False)
              (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): SiLU(inplace=True)
            )
            (pconv): BaseConv(
              (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): SiLU(inplace=True)
            )
          )
          (1): DWConv(
            (dconv): BaseConv(
              (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=64, bias=False)
              (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): SiLU(inplace=True)
            )
            (pconv): BaseConv(
              (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): SiLU(inplace=True)
            )
          )
        )
        (2): Sequential(
          (0): DWConv(
            (dconv): BaseConv(
              (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=64, bias=False)
              (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): SiLU(inplace=True)
            )
            (pconv): BaseConv(
              (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): SiLU(inplace=True)
            )
          )
          (1): DWConv(
            (dconv): BaseConv(
              (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=64, bias=False)
              (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): SiLU(inplace=True)
            )
            (pconv): BaseConv(
              (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): SiLU(inplace=True)
            )
          )
        )
      )
      (reg_convs): ModuleList(
        (0): Sequential(
          (0): DWConv(
            (dconv): BaseConv(
              (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=64, bias=False)
              (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): SiLU(inplace=True)
            )
            (pconv): BaseConv(
              (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): SiLU(inplace=True)
            )
          )
          (1): DWConv(
            (dconv): BaseConv(
              (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=64, bias=False)
              (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): SiLU(inplace=True)
            )
            (pconv): BaseConv(
              (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): SiLU(inplace=True)
            )
          )
        )
        (1): Sequential(
          (0): DWConv(
            (dconv): BaseConv(
              (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=64, bias=False)
              (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): SiLU(inplace=True)
            )
            (pconv): BaseConv(
              (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): SiLU(inplace=True)
            )
          )
          (1): DWConv(
            (dconv): BaseConv(
              (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=64, bias=False)
              (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): SiLU(inplace=True)
            )
            (pconv): BaseConv(
              (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): SiLU(inplace=True)
            )
          )
        )
        (2): Sequential(
          (0): DWConv(
            (dconv): BaseConv(
              (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=64, bias=False)
              (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): SiLU(inplace=True)
            )
            (pconv): BaseConv(
              (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): SiLU(inplace=True)
            )
          )
          (1): DWConv(
            (dconv): BaseConv(
              (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=64, bias=False)
              (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): SiLU(inplace=True)
            )
            (pconv): BaseConv(
              (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): SiLU(inplace=True)
            )
          )
        )
      )
      (cls_preds): ModuleList(
        (0): Conv2d(64, 4, kernel_size=(1, 1), stride=(1, 1))
        (1): Conv2d(64, 4, kernel_size=(1, 1), stride=(1, 1))
        (2): Conv2d(64, 4, kernel_size=(1, 1), stride=(1, 1))
      )
      (reg_preds): ModuleList(
        (0): Conv2d(64, 4, kernel_size=(1, 1), stride=(1, 1))
        (1): Conv2d(64, 4, kernel_size=(1, 1), stride=(1, 1))
        (2): Conv2d(64, 4, kernel_size=(1, 1), stride=(1, 1))
      )
      (obj_preds): ModuleList(
        (0): Conv2d(64, 1, kernel_size=(1, 1), stride=(1, 1))
        (1): Conv2d(64, 1, kernel_size=(1, 1), stride=(1, 1))
        (2): Conv2d(64, 1, kernel_size=(1, 1), stride=(1, 1))
      )
      (stems): ModuleList(
        (0): BaseConv(
          (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
          (act): SiLU(inplace=True)
        )
        (1): BaseConv(
          (conv): Conv2d(128, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
          (act): SiLU(inplace=True)
        )
        (2): BaseConv(
          (conv): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
          (act): SiLU(inplace=True)
        )
      )
      (l1_loss): L1Loss()
      (bcewithlog_loss): BCEWithLogitsLoss()
      (iou_loss): IOUloss()
    )
  )
)
2022-12-23 18:43:33.300 | INFO     | yolox.core.trainer:before_epoch:203 - ---> start train epoch1
2022-12-23 18:43:37.491 | INFO     | yolox.core.trainer:after_iter:253 - epoch: 1/20, iter: 10/132, mem: 336Mb, iter_time: 0.419s, data_time: 0.001s, total_loss: 19.1, iou_loss: 1.8, l1_loss: 0.0, conf_loss: 15.5, cls_loss: 1.8, lr: 7.174e-08, size: 416, ETA: 0:18:21
2022-12-23 18:43:38.510 | INFO     | yolox.core.trainer:after_iter:253 - epoch: 1/20, iter: 20/132, mem: 336Mb, iter_time: 0.102s, data_time: 0.001s, total_loss: 19.4, iou_loss: 3.7, l1_loss: 0.0, conf_loss: 12.8, cls_loss: 3.0, lr: 2.870e-07, size: 352, ETA: 0:11:21
2022-12-23 18:43:39.803 | INFO     | yolox.core.trainer:after_iter:253 - epoch: 1/20, iter: 30/132, mem: 1169Mb, iter_time: 0.129s, data_time: 0.001s, total_loss: 12.9, iou_loss: 2.2, l1_loss: 0.0, conf_loss: 7.7, cls_loss: 3.0, lr: 6.457e-07, size: 576, ETA: 0:09:24
